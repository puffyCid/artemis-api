name: Artemis API PR Actions

on:
  pull_request:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        info:
          - { os: "macOS-latest", target: "x86_64-apple-darwin", cross: false }
          - {
              os: "ubuntu-24.04",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
            }
          - {
              os: "windows-latest",
              target: "x86_64-pc-windows-msvc",
              cross: false,
            }
    runs-on: ${{ matrix.info.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download script tester binary macOS
        if: matrix.info.os == 'macOS-latest'
        run: wget -O ./tests/macos/script_tester_macos_intel https://github.com/puffyCid/artemis/releases/download/v0.1.0/script_tester_macos_intel && chmod +x ./tests/macos/script_tester_macos_intel

      - name: Download script tester binary Windows
        if: matrix.info.os == 'windows-latest'
        run: Invoke-WebRequest https://github.com/puffyCid/artemis/releases/download/v0.1.0/script_tester.exe -OutFile .\tests\windows\script_tester.exe

      - name: Download script tester binary Linux
        if: matrix.info.os == 'ubuntu-latest'
        run: wget -O ./tests/linux/script_tester https://github.com/puffyCid/artemis/releases/download/v0.1.0/script_tester && chmod +x ./tests/linux/script_tester

      - name: Install Deno macOS
        if: matrix.info.os == 'macOS-latest'
        run: brew install deno

      - name: Install Deno Linux
        if: matrix.info.os == 'ubuntu-latest'
        run: curl -fsSL https://deno.land/install.sh | sh

      - name: Install Deno Windows
        if: matrix.info.os == 'windows-latest'
        run: choco.exe install deno

      - name: Compile and run tests macOS
        if: matrix.info.os == 'macOS-latest'
        run: cd tests/macos && sudo bash compile_tests.sh

      - name: Compile and run tests Windows
        if: matrix.info.os == 'windows-latest'
        run: cd tests\windows && .\compile_tests.bat
      
      - name: Compile and run tests Linux
        if: matrix.info.os == 'ubuntu-latest'
        run: cd tests/linux && sudo bash compile_tests.sh
