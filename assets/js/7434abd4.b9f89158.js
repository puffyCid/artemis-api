"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[5825],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[m]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4226:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={description:"Tracks execution* of applications",keywords:["windows","registry"]},o="Shimcache",c={unversionedId:"Artifacts/Windows Artfacts/shimcache",id:"Artifacts/Windows Artfacts/shimcache",title:"Shimcache",description:"Tracks execution* of applications",source:"@site/docs/Artifacts/Windows Artfacts/shimcache.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/shimcache",permalink:"/docs/Artifacts/Windows Artfacts/shimcache",draft:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/shimcache.md",tags:[],version:"current",frontMatter:{description:"Tracks execution* of applications",keywords:["windows","registry"]},sidebar:"artemisArtifacts",previous:{title:"Shellbags",permalink:"/docs/Artifacts/Windows Artfacts/shellbags"},next:{title:"ShimDB",permalink:"/docs/Artifacts/Windows Artfacts/shimdb"}},s={},l=[],p={toc:l},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"shimcache"},"Shimcache"),(0,a.kt)("p",null,"Windows ",(0,a.kt)("inlineCode",{parentName:"p"},"Shimcache")," (also called: ",(0,a.kt)("inlineCode",{parentName:"p"},"AppCompatCache"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"Application Compatability Cache"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"AppCompat"),") are ",(0,a.kt)("inlineCode",{parentName:"p"},"Registry")," entries that\nmay",(0,a.kt)("sup",null,"*")," indicate application execution. These entries are only written\nwhen the system is shutdown or restarted."),(0,a.kt)("sup",null,"*")," While an entry in `Shimcache` often implies the application was executed, Windows may pre-populate `Shimcache` with entries based on a user browsing to a directory that contains an application.",(0,a.kt)("p",null,"Other parsers:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.velociraptor.app/artifact_references/pages/windows.registry.appcompatcache/"},"Velociraptor")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ericzimmerman.github.io"},"RegistryExplorer"))),(0,a.kt)("p",null,"References:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.mandiant.com/resources/blog/caching-out-the-val"},"Shimcache")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/libyal/winreg-kb/blob/main/docs/sources/system-keys/Application-compatibility-cache.md"},"Libyal"))),(0,a.kt)("h1",{id:"toml-collection"},"TOML Collection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'system = "windows"\n\n[output]\nname = "shimcache_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "6c51b123-1522-4572-9f2a-0bd5abd81b82"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "shimcache"\n[artifacts.shimcache]\n# Optional\n# alt_drive = \'D\'\n')),(0,a.kt)("h1",{id:"collection-options"},"Collection Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"alt_drive")," Expects a single character value. Will use an alternative drive\nletter when parsing ",(0,a.kt)("inlineCode",{parentName:"li"},"Shimcache"),". This configuration is ",(0,a.kt)("strong",{parentName:"li"},"optional"),". By\ndefault artemis will use the ",(0,a.kt)("inlineCode",{parentName:"li"},"%systemdrive%")," value (typically ",(0,a.kt)("inlineCode",{parentName:"li"},"C"),")")),(0,a.kt)("h1",{id:"output-structure"},"Output Structure"),(0,a.kt)("p",null,"An array of ",(0,a.kt)("inlineCode",{parentName:"p"},"Shimcache")," entries"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Shimcache {\n  /**Entry number for shimcache. Entry zero (0) is most recent execution */\n  entry: number;\n  /**Full path to application file */\n  path: string;\n  /**Standard Information Modified timestamp in UNIXEPOCH seconds */\n  last_modified: number;\n  /**Full path to the Registry key */\n  key_path: string;\n}\n")))}u.isMDXComponent=!0}}]);