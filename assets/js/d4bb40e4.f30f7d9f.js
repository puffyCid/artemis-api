"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[4400],{840:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>d,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"API/Artifacts/windows","title":"Windows","description":"Interact with Windows Artifacts","source":"@site/docs/API/Artifacts/windows.md","sourceDirName":"API/Artifacts","slug":"/API/Artifacts/windows","permalink":"/artemis-api/docs/API/Artifacts/windows","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Artifacts/windows.md","tags":[],"version":"current","lastUpdatedBy":"puffyCid","lastUpdatedAt":1739135633000,"frontMatter":{"description":"Interact with Windows Artifacts"},"sidebar":"artemisAPI","previous":{"title":"Unix","permalink":"/artemis-api/docs/API/Artifacts/unix"},"next":{"title":"API Scenarios","permalink":"/artemis-api/docs/category/api-scenarios"}}');var i=s(4848),n=s(8453);const d={description:"Interact with Windows Artifacts"},l="Windows",a={},h=[{value:"getAmcache() -&gt; Amcache[] | WindowsError",id:"getamcache---amcache--windowserror",level:3},{value:"getAltAmcache(path) -&gt; Amcache[] | WindowsError",id:"getaltamcachepath---amcache--windowserror",level:3},{value:"getBits(carve) -&gt; Bits | WindowsError",id:"getbitscarve---bits--windowserror",level:3},{value:"getBitsPath(path, carve) -&gt; Amcache[] | WindowsError",id:"getbitspathpath-carve---amcache--windowserror",level:3},{value:"getEventlogs(path, offset, limit, include_templates, template_file) -&gt; EventLogRecord[] |EventLogMessage[] | WindowsError",id:"geteventlogspath-offset-limit-include_templates-template_file---eventlogrecord-eventlogmessage--windowserror",level:3},{value:"getJumplists() -&gt; Jumplists[] | WindowsError",id:"getjumplists---jumplists--windowserror",level:3},{value:"getJumplistPath(path) -&gt; Jumplists[] | WindowsError",id:"getjumplistpathpath---jumplists--windowserror",level:3},{value:"readRawFile(path) -&gt; Uint8Array | WindowsError",id:"readrawfilepath---uint8array--windowserror",level:3},{value:"readAdsData(path, ads_name) -&gt; Uint8Array | WindowsError",id:"readadsdatapath-ads_name---uint8array--windowserror",level:3},{value:"getPe(path) -&gt; PeInfo | WindowsError",id:"getpepath---peinfo--windowserror",level:3},{value:"getPrefetch() -&gt; Prefetch[] | WindowsError",id:"getprefetch---prefetch--windowserror",level:3},{value:"getPrefetchPath(path) -&gt; Prefetch[] | WindowsError",id:"getprefetchpathpath---prefetch--windowserror",level:3},{value:"getRecycleBin() -&gt; RecycleBin[] | WindowsError",id:"getrecyclebin---recyclebin--windowserror",level:3},{value:"getRecycleBinFile(path) -&gt; RecycleBin[] | WindowsError",id:"getrecyclebinfilepath---recyclebin--windowserror",level:3},{value:"getRegistry(path) -&gt; Registry[] | WindowsError",id:"getregistrypath---registry--windowserror",level:3},{value:"getSearch(path, page_limit) -&gt; SearchEntry[] | WindowsError",id:"getsearchpath-page_limit---searchentry--windowserror",level:3},{value:"getServices() -&gt; Services[] | WindowsError",id:"getservices---services--windowserror",level:3},{value:"getServiceFile(path) -&gt; Services[] | Error",id:"getservicefilepath---services--error",level:3},{value:"getShellbags() -&gt; Shellbags[] | WindowsError",id:"getshellbags---shellbags--windowserror",level:3},{value:"getAltShellbags(path) -&gt; Shellbags[] | WindowsError",id:"getaltshellbagspath---shellbags--windowserror",level:3},{value:"getShimcache() -&gt; Shimcache[] | WindowsError",id:"getshimcache---shimcache--windowserror",level:3},{value:"getAltShimcache(path) -&gt; Shimcache[] | WindowsError",id:"getaltshimcachepath---shimcache--windowserror",level:3},{value:"getShimdb() -&gt; Shimdb[] | WindowsError",id:"getshimdb---shimdb--windowserror",level:3},{value:"getCustomShimdb(path) -&gt; Shimdb[] | WindowsError",id:"getcustomshimdbpath---shimdb--windowserror",level:3},{value:"getLnkFile(path) -&gt; Shortcut | WindowsError",id:"getlnkfilepath---shortcut--windowserror",level:3},{value:"getSrumApplicationInfo(path) -&gt; ApplicationInfo[] | WindowsError",id:"getsrumapplicationinfopath---applicationinfo--windowserror",level:3},{value:"getSrumApplicationTimeline(path) -&gt; ApplicationTimeline[] | WindowsError",id:"getsrumapplicationtimelinepath---applicationtimeline--windowserror",level:3},{value:"getSrumApplicationVfu(path) -&gt; AppVfu[] | WindowsError",id:"getsrumapplicationvfupath---appvfu--windowserror",level:3},{value:"getSrumEnergyInfo(path) -&gt; EnergyInfo[] | WindowsError",id:"getsrumenergyinfopath---energyinfo--windowserror",level:3},{value:"getSrumEnergyUsage(path) -&gt; EnergyUsage[] | WindowsError",id:"getsrumenergyusagepath---energyusage--windowserror",level:3},{value:"getSrumNetworkInfo(path) -&gt; NetworkInfo[] | WindowsError",id:"getsrumnetworkinfopath---networkinfo--windowserror",level:3},{value:"getSrumNetworkConnectivity(path) -&gt; NetworkConnectivityInfo[] | WindowsError",id:"getsrumnetworkconnectivitypath---networkconnectivityinfo--windowserror",level:3},{value:"getSrumNotifications(path) -&gt; NotificationInfo[] | WindowsError",id:"getsrumnotificationspath---notificationinfo--windowserror",level:3},{value:"getTasks() -&gt; TaskData | WindowsError",id:"gettasks---taskdata--windowserror",level:3},{value:"getTaskFile(path) -&gt; TaskXml | TaskJob | WindowsError",id:"gettaskfilepath---taskxml--taskjob--windowserror",level:3},{value:"getUserassist() -&gt; UserAssist[] | WindowsError",id:"getuserassist---userassist--windowserror",level:3},{value:"getAltUserassist(path) -&gt; UserAssist[] | WindowsError",id:"getaltuserassistpath---userassist--windowserror",level:3},{value:"getUsersWin() -&gt; UserInfo[] | WindowsError",id:"getuserswin---userinfo--windowserror",level:3},{value:"getAltUsersWin(path) -&gt; UserInfo[] | WindowsError",id:"getaltuserswinpath---userinfo--windowserror",level:3},{value:"getUsnjrnl() -&gt; UsnJrnl[] | WindowsError",id:"getusnjrnl---usnjrnl--windowserror",level:3},{value:"getAltUsnjrnl(drive) -&gt; UsnJrnl[] | WindowsError",id:"getaltusnjrnldrive---usnjrnl--windowserror",level:3},{value:"logons(path) -&gt; Logons[] | WindowsError",id:"logonspath---logons--windowserror",level:3},{value:"lookupSecurityKey(path, offset) -&gt; SecurityKey | WindowsError",id:"lookupsecuritykeypath-offset---securitykey--windowserror",level:3},{value:"ESE Database Class",id:"ese-database-class",level:3},{value:"catalogInfo() -&gt; Catalog[] | WindowsError",id:"cataloginfo---catalog--windowserror",level:4},{value:"tableInfo(catalog, table_name) -&gt; TableInfo",id:"tableinfocatalog-table_name---tableinfo",level:4},{value:"getPages(first_page) -&gt; number[] | WindowsError",id:"getpagesfirst_page---number--windowserror",level:4},{value:"getRows(pages, info) -&gt; Record&lt;string, EseTable[][]&gt; | WindowsError",id:"getrowspages-info---recordstring-esetable--windowserror",level:4},{value:"getFilteredRows(pages, info, column_name, column_data) -&gt; Record&lt;string, EseTable[][]&gt; | WindowsError",id:"getfilteredrowspages-info-column_name-column_data---recordstring-esetable--windowserror",level:4},{value:"dumpTableColumns(pages, info, column_names) -&gt; Record&lt;string, EseTable[][]&gt; | WindowsError",id:"dumptablecolumnspages-info-column_names---recordstring-esetable--windowserror",level:4},{value:"getChocolateyInfo(alt_base) -&gt; ChocolateyInfo[] | WindowsError",id:"getchocolateyinfoalt_base---chocolateyinfo--windowserror",level:3},{value:"Updates class",id:"updates-class",level:3},{value:"updateHistory(pages) -&gt; UpdateHistory[] | WindowsError",id:"updatehistorypages---updatehistory--windowserror",level:4},{value:"powershellHistory(alt_path) -&gt; History[] | History | WindowsError",id:"powershellhistoryalt_path---history--history--windowserror",level:3},{value:"parseMru(ntuser_path) -&gt; Mru[] | WindowsError",id:"parsemruntuser_path---mru--windowserror",level:3},{value:"getShellItem(data) -&gt; JsShellItem | WindowsError",id:"getshellitemdata---jsshellitem--windowserror",level:3},{value:"UserAccessLogging class",id:"useraccesslogging-class",level:3},{value:"getRoleIds(pages) -&gt; RoleIds[] | WindowsError",id:"getroleidspages---roleids--windowserror",level:4},{value:"getUserAccessLog(pages, roles_ual, role_page_chunk) -&gt; UserAccessLog[] | WindowsError",id:"getuseraccesslogpages-roles_ual-role_page_chunk---useraccesslog--windowserror",level:4},{value:"userAccessLog(alt_dir) -&gt; UserAccessLog[] | WindowsError",id:"useraccesslogalt_dir---useraccesslog--windowserror",level:3},{value:"getWmiPersist() -&gt; WmiPersist[] | WindowsError",id:"getwmipersist---wmipersist--windowserror",level:3},{value:"getWmiPersistPath(path) -&gt; WmiPersist[] | WindowsError",id:"getwmipersistpathpath---wmipersist--windowserror",level:3},{value:"listUsbDevices(alt_file) -&gt; UsbDevices[] | WindowsError",id:"listusbdevicesalt_file---usbdevices--windowserror",level:3},{value:"serviceInstalls(path) -&gt; ServiceInstalls[] | WindowsError",id:"serviceinstallspath---serviceinstalls--windowserror",level:3},{value:"Outlook Class",id:"outlook-class",level:3},{value:"rootFolder() -&gt; FolderInfo | WindowsError",id:"rootfolder---folderinfo--windowserror",level:4},{value:"readFolder(folder) -&gt; FolderInfo | WindowsError",id:"readfolderfolder---folderinfo--windowserror",level:4},{value:"readMessages(table, offset, limit) -&gt; MessageDetails[] | WindowsError",id:"readmessagestable-offset-limit---messagedetails--windowserror",level:4},{value:"readAttachment(block_id, descriptor_id) -&gt; Attachment | WindowsError",id:"readattachmentblock_id-descriptor_id---attachment--windowserror",level:4},{value:"parseWordWheel(path) -&gt; WordWheelEntry[] | WindowsError",id:"parsewordwheelpath---wordwheelentry--windowserror",level:4}];function o(e){const r={a:"a",br:"br",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"windows",children:"Windows"})}),"\n",(0,i.jsx)(r.p,{children:"These functions can be used to pull data related to Windows artifacts."}),"\n",(0,i.jsx)(r.h3,{id:"getamcache---amcache--windowserror",children:"getAmcache() -> Amcache[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Amcache Registry file on the systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"getaltamcachepath---amcache--windowserror",children:"getAltAmcache(path) -> Amcache[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Amcache.hve Registry file from provided path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Full path to Amcache.hve file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getbitscarve---bits--windowserror",children:"getBits(carve) -> Bits | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Windows ",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/bits",children:"BITS"})," data. Supports\ncarving deleted entries."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"carve"}),(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsx)(r.td,{children:"Attempt to carve deleted BITS entries"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getbitspathpath-carve---amcache--windowserror",children:"getBitsPath(path, carve) -> Amcache[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Windows ",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/bits",children:"BITS"})," data at\nprovided path. Supports carving deleted entries."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows BITS file"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"carve"}),(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsx)(r.td,{children:"Attempt to carve deleted BITS entries"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"geteventlogspath-offset-limit-include_templates-template_file---eventlogrecord-eventlogmessage--windowserror",children:"getEventlogs(path, offset, limit, include_templates, template_file) -> EventLogRecord[] |EventLogMessage[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Windows EventLog file at provided path. If you want to include template\nstrings and you are on a non-Windows platform, a ",(0,i.jsx)(r.code,{children:"template_file"})," file is\nrequired."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows EventLog file"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"offset"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"How many records to skip"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"limit"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"Max number of records to return"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"include_templates"}),(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsx)(r.td,{children:"Whether to include template strings in output. Default is false"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"template_file"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to a JSON template file"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"getjumplists---jumplists--windowserror",children:"getJumplists() -> Jumplists[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Get all ",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/jumplists",children:"JumpLists"})," for all\nusers at default systemdrive."]}),"\n",(0,i.jsx)(r.h3,{id:"getjumplistpathpath---jumplists--windowserror",children:"getJumplistPath(path) -> Jumplists[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse ",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/jumplists",children:"JumpLists"})," file at\nprovided path."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Jumplist file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"readrawfilepath---uint8array--windowserror",children:"readRawFile(path) -> Uint8Array | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Read a file at provided path by parsing the NTFS. You can read locked files with\nthis function."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to file read"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"readadsdatapath-ads_name---uint8array--windowserror",children:"readAdsData(path, ads_name) -> Uint8Array | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Read an Alternative Data Stream at provided file path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to file read"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ads_name"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"ADS data to read"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"getpepath---peinfo--windowserror",children:"getPe(path) -> PeInfo | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse PE file at provided path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to PE file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getprefetch---prefetch--windowserror",children:"getPrefetch() -> Prefetch[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse all Prefetch files at default systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"getprefetchpathpath---prefetch--windowserror",children:"getPrefetchPath(path) -> Prefetch[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Prefetch files at provided directory."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Prefetch directory"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getrecyclebin---recyclebin--windowserror",children:"getRecycleBin() -> RecycleBin[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse all RecycleBin files default systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"getrecyclebinfilepath---recyclebin--windowserror",children:"getRecycleBinFile(path) -> RecycleBin[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse RecycleBin file at provided path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to RecycleBin file."})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getregistrypath---registry--windowserror",children:"getRegistry(path) -> Registry[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Registry file at provided path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Registry file."})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsearchpath-page_limit---searchentry--windowserror",children:"getSearch(path, page_limit) -> SearchEntry[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Windows ",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/search",children:"Search"})," database at\nprovided path."]}),"\n",(0,i.jsx)(r.p,{children:"You can provide an optional page_limit (default is 50). Will influence memory\nusage, a higher number means higher memory usage but faster parsing."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows Search database."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"page_limit"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"Set the number of pages to use when parsing. Default is 50"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"getservices---services--windowserror",children:"getServices() -> Services[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Services at default systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"getservicefilepath---services--error",children:"getServiceFile(path) -> Services[] | Error"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Services (SYSTEM Registry) file at provided path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SYSTEM Registry file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getshellbags---shellbags--windowserror",children:"getShellbags() -> Shellbags[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Shellbags at default systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"getaltshellbagspath---shellbags--windowserror",children:"getAltShellbags(path) -> Shellbags[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Shellbags from provided Registry file. Should be either NTUSER.DAT\nor UsrClass.dat"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Full path to either NTUSER.DAT or UsrClass.dat file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getshimcache---shimcache--windowserror",children:"getShimcache() -> Shimcache[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Shimcache at default systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"getaltshimcachepath---shimcache--windowserror",children:"getAltShimcache(path) -> Shimcache[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Shimcache at provided SYSTEM Registry path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Full path to the SYSTEM Registry file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getshimdb---shimdb--windowserror",children:"getShimdb() -> Shimdb[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows ShimDB files at default systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"getcustomshimdbpath---shimdb--windowserror",children:"getCustomShimdb(path) -> Shimdb[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows ShimDB file at provided path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows ShimDB file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getlnkfilepath---shortcut--windowserror",children:"getLnkFile(path) -> Shortcut | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Shortcut file at provided path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows Shortcut file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsrumapplicationinfopath---applicationinfo--windowserror",children:"getSrumApplicationInfo(path) -> ApplicationInfo[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Application info from Windows\n",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/srum",children:"SRUM"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SRUM file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsrumapplicationtimelinepath---applicationtimeline--windowserror",children:"getSrumApplicationTimeline(path) -> ApplicationTimeline[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Application Timeline info from Windows\n",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/srum",children:"SRUM"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SRUM file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsrumapplicationvfupath---appvfu--windowserror",children:"getSrumApplicationVfu(path) -> AppVfu[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Application VFU info from Windows\n",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/srum",children:"SRUM"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SRUM file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsrumenergyinfopath---energyinfo--windowserror",children:"getSrumEnergyInfo(path) -> EnergyInfo[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Energy info from Windows\n",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/srum",children:"SRUM"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SRUM file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsrumenergyusagepath---energyusage--windowserror",children:"getSrumEnergyUsage(path) -> EnergyUsage[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Energy usage from Windows\n",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/srum",children:"SRUM"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SRUM file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsrumnetworkinfopath---networkinfo--windowserror",children:"getSrumNetworkInfo(path) -> NetworkInfo[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Network info from Windows\n",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/srum",children:"SRUM"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SRUM file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsrumnetworkconnectivitypath---networkconnectivityinfo--windowserror",children:"getSrumNetworkConnectivity(path) -> NetworkConnectivityInfo[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse Network connectivity info from Windows\n",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/srum",children:"SRUM"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SRUM file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getsrumnotificationspath---notificationinfo--windowserror",children:"getSrumNotifications(path) -> NotificationInfo[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse notification info from Windows\n",(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/srum",children:"SRUM"}),"."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows SRUM file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"gettasks---taskdata--windowserror",children:"getTasks() -> TaskData | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Schedule Tasks at default systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"gettaskfilepath---taskxml--taskjob--windowserror",children:"getTaskFile(path) -> TaskXml | TaskJob | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Schedule Task file at provided path. Supports XML and older binary\nJob files."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows Schedule Task file. Can be either XML or Job"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getuserassist---userassist--windowserror",children:"getUserassist() -> UserAssist[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Userassist entries at default systemdrive."}),"\n",(0,i.jsx)(r.h3,{id:"getaltuserassistpath---userassist--windowserror",children:"getAltUserassist(path) -> UserAssist[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows Userassist entries at path to NTUSER.DAT."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Full path to NTUSER.DAT file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getuserswin---userinfo--windowserror",children:"getUsersWin() -> UserInfo[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Get local Windows User accounts from SAM Registry file. Uses default systemdrive\nletter."}),"\n",(0,i.jsx)(r.h3,{id:"getaltuserswinpath---userinfo--windowserror",children:"getAltUsersWin(path) -> UserInfo[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Get local Windows User accounts from provided SAM Registry path."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Full path to SAM Registry file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getusnjrnl---usnjrnl--windowserror",children:"getUsnjrnl() -> UsnJrnl[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parses Windows UsnJrnl data. Uses default systemdrive letter."}),"\n",(0,i.jsx)(r.h3,{id:"getaltusnjrnldrive---usnjrnl--windowserror",children:"getAltUsnjrnl(drive) -> UsnJrnl[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parses Windows UsnJrnl data from alternative drive letter."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"drive"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Drive letter to get Windows UsnJrnl"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"logonspath---logons--windowserror",children:"logons(path) -> Logons[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse the Windows Security.evtx and try to correlate Logon and Logoff events."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows Security.evtx file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"lookupsecuritykeypath-offset---securitykey--windowserror",children:"lookupSecurityKey(path, offset) -> SecurityKey | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Security Key data from Registry at provided Security Key offset. The\noffset must be a postive number greater than 0. You can use getRegistry(path) to\npull a list of keys which contain Security Key offset data."}),"\n",(0,i.jsx)(r.p,{children:"It is not recommended to bulk lookup Security Key info due the amount of data.\nSecurity Keys contain information about Registry key permissions and ACLs. Its\nnot super useful."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to Windows Registry file"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"offset"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"Offset to Security Key"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"ese-database-class",children:"ESE Database Class"}),"\n",(0,i.jsx)(r.p,{children:"A basic class to help interact and extract data from ESE databases"}),"\n",(0,i.jsx)(r.h4,{id:"cataloginfo---catalog--windowserror",children:"catalogInfo() -> Catalog[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Dump the Catalog metadata associated with an ESE database. Returns an array of\nCatalog entries or WindowsError"}),"\n",(0,i.jsx)(r.h4,{id:"tableinfocatalog-table_name---tableinfo",children:"tableInfo(catalog, table_name) -> TableInfo"}),"\n",(0,i.jsx)(r.p,{children:"Extract table metadata from parsed Catalog entries based on provided table name"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"catalog"}),(0,i.jsx)(r.td,{children:"Catalog[]"}),(0,i.jsx)(r.td,{children:"Array of Catalog entries"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table_name"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Name of table to extract"})]})]})]}),"\n",(0,i.jsx)(r.h4,{id:"getpagesfirst_page---number--windowserror",children:"getPages(first_page) -> number[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Get an array of all pages associated with a table starting at the first page\nprovided. First page can be found in the TableInfo object."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"first_page"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"First page of a table"})]})})]}),"\n",(0,i.jsx)(r.h4,{id:"getrowspages-info---recordstring-esetable--windowserror",children:"getRows(pages, info) -> Record<string, EseTable[][]> | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Get rows associated with provided TableInfo object and number of pages. A\nreturns a ",(0,i.jsx)(r.code,{children:"Record<string, EseTable[][]>"})," or WindowsError."]}),"\n",(0,i.jsx)(r.p,{children:"The table name is the Record string key."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/ese",children:"EseTable"})," is an array of rows and\ncolumns representing ESE data."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pages"}),(0,i.jsx)(r.td,{children:"number[]"}),(0,i.jsx)(r.td,{children:"Array of pages"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"info"}),(0,i.jsx)(r.td,{children:"TableInfo"}),(0,i.jsx)(r.td,{children:"TableInfo object"})]})]})]}),"\n",(0,i.jsx)(r.h4,{id:"getfilteredrowspages-info-column_name-column_data---recordstring-esetable--windowserror",children:"getFilteredRows(pages, info, column_name, column_data) -> Record<string, EseTable[][]> | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Get rows and filter based on provided column_name and column_data. This function\ncan be useful if you want to get data from a table thats shares data with\nanother table. For example, if you call getRows() to get data associated with\nTableA and now you want to get data from TableB and both tables share a unique\nkey."}),"\n",(0,i.jsxs)(r.p,{children:["Its ",(0,i.jsx)(r.em,{children:"a little"}),' similar to "select * from tableB where columnX = Y" where Y is a\nunique key']}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pages"}),(0,i.jsx)(r.td,{children:"number[]"}),(0,i.jsx)(r.td,{children:"Array of pages"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"info"}),(0,i.jsx)(r.td,{children:"TableInfo"}),(0,i.jsx)(r.td,{children:"TableInfo object"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"column_name"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Column name that you want to filter on"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"column_data"}),(0,i.jsx)(r.td,{children:"Record<string, boolean>"}),(0,i.jsx)(r.td,{children:"HashMap of column values to filter on. Only the key is used to filter the data"})]})]})]}),"\n",(0,i.jsx)(r.h4,{id:"dumptablecolumnspages-info-column_names---recordstring-esetable--windowserror",children:"dumpTableColumns(pages, info, column_names) -> Record<string, EseTable[][]> | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Get rows based on specific columns names. This function is the same as getRows()\nexcept it will only return column names that included in column_names."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pages"}),(0,i.jsx)(r.td,{children:"number[]"}),(0,i.jsx)(r.td,{children:"Array of pages"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"info"}),(0,i.jsx)(r.td,{children:"TableInfo"}),(0,i.jsx)(r.td,{children:"TableInfo object"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"column_name"}),(0,i.jsx)(r.td,{children:"string[]"}),(0,i.jsx)(r.td,{children:"Array of column names to get data from"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"getchocolateyinfoalt_base---chocolateyinfo--windowserror",children:"getChocolateyInfo(alt_base) -> ChocolateyInfo[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Return a list of installed Chocolatey packages. Will use the ChocolateyInstall\nENV value by default (C:\\ProgramData\\chocolatey)."}),"\n",(0,i.jsx)(r.p,{children:"An optional alternative base path can also be provided"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"alt_base"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Optional base path for Chocolatey"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"updates-class",children:"Updates class"}),"\n",(0,i.jsx)(r.p,{children:"A simple class to help dump the contents of the Windows DataStore.edb database.\nThis class extends the EseDatabase class."}),"\n",(0,i.jsx)(r.h4,{id:"updatehistorypages---updatehistory--windowserror",children:"updateHistory(pages) -> UpdateHistory[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Return a list of Windows Updates by parsing the Windows DataStore.edb database."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pages"}),(0,i.jsx)(r.td,{children:"number[]"}),(0,i.jsx)(r.td,{children:"Array of pages to get data from"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"powershellhistoryalt_path---history--history--windowserror",children:"powershellHistory(alt_path) -> History[] | History | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Return PowerShell history entries for all users. Uses the systemdrive by\ndefault."}),"\n",(0,i.jsx)(r.p,{children:"An optional alternative path to ConsoleHost_history.txt can also be provided\ninstead."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"alt_path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Optional full path to ConsoleHost_history.txt"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"parsemruntuser_path---mru--windowserror",children:"parseMru(ntuser_path) -> Mru[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse common Most Recently Used (MRU) locations in the Registry. Currently\nparses: OpenSave, LastVisited, and RecentDocs MRU keys"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ntuser_path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Full path to NTUSER.DAT file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getshellitemdata---jsshellitem--windowserror",children:"getShellItem(data) -> JsShellItem | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse raw bytes that contain a ShellItem. Returns a JsShellItem that contains\nShellItem and any remaining bytes. This function can be used to parse multiple\nshellitems."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"data"}),(0,i.jsx)(r.td,{children:"Uint8Array"}),(0,i.jsx)(r.td,{children:"Raw bytes of shellitem"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"useraccesslogging-class",children:"UserAccessLogging class"}),"\n",(0,i.jsx)(r.p,{children:"A simple class to help extract data from the Windows User Access Log database.\nThis class extends the EseDatabase class"}),"\n",(0,i.jsx)(r.h4,{id:"getroleidspages---roleids--windowserror",children:"getRoleIds(pages) -> RoleIds[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Return an array of RoleIds associated with UAL database. This function expects\nthe UserAccessLogging class to be initialized with the SystemIdentity.mdb\ndatabase otherwise it will return no results."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pages"}),(0,i.jsx)(r.td,{children:"number[]"}),(0,i.jsx)(r.td,{children:"Array of pages to get data from"})]})})]}),"\n",(0,i.jsx)(r.h4,{id:"getuseraccesslogpages-roles_ual-role_page_chunk---useraccesslog--windowserror",children:"getUserAccessLog(pages, roles_ual, role_page_chunk) -> UserAccessLog[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse the User Access Log (UAL) database on Windows Servers. This database\ncontains logon information for users on the system.",(0,i.jsx)(r.br,{}),"\n","It is ",(0,i.jsx)(r.strong,{children:"not"})," related to M365 UAL (Unified Audit Logging)!"]}),"\n",(0,i.jsxs)(r.p,{children:["This function expects the UserAccessLogging class to be initialized with the\nCurrent.mdb or ",(0,i.jsx)(r.code,{children:"{GUID}.mdb"})," database otherwise it will return no results."]}),"\n",(0,i.jsxs)(r.p,{children:["You may provide an optional UserAccessLogging associated with SystemIdentity.mdb\nto perform RoleID lookups. Otherwise this table will parse the Current.mdb or\n",(0,i.jsx)(r.code,{children:"{GUID}.mdb"})," database. You may also customize the number of pages that should be\nused when doing RoleID lookups, by default 30 pages will used."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pages"}),(0,i.jsx)(r.td,{children:"number[]"}),(0,i.jsx)(r.td,{children:"Array of pages to get data from"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"roles_ual"}),(0,i.jsx)(r.td,{children:"UserAccessLogging"}),(0,i.jsx)(r.td,{children:"Optional UserAccessLogging object that was initialized with the file SystemIdentity.mdb. Can be used to perform RoleID lookups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"role_page_chunk"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"Number of pages that should be submitted when doing RoleID lookups. By default 30 page chunks will be used to do lookup"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"useraccesslogalt_dir---useraccesslog--windowserror",children:"userAccessLog(alt_dir) -> UserAccessLog[] | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Parse the User Access Log (UAL) database on Windows Servers. This database\ncontains logon information for users on the system.",(0,i.jsx)(r.br,{}),"\n","It is ",(0,i.jsx)(r.strong,{children:"not"})," related to M365 UAL (Unified Audit Logging)!"]}),"\n",(0,i.jsx)(r.p,{children:"By default it will parse the databases at %SYSTEMROOT%\\System32\\LogFiles\\Sum.\nHowever, you may provided an optional alternative path if you want."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"alt_dir"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Alternative directory containing the UAL log databases"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"getwmipersist---wmipersist--windowserror",children:"getWmiPersist() -> WmiPersist[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse the WMI Repository and extract persistence information."}),"\n",(0,i.jsx)(r.h3,{id:"getwmipersistpathpath---wmipersist--windowserror",children:"getWmiPersistPath(path) -> WmiPersist[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse the WMI Repository and extract persistence information at provided path.\nThe directory must contain:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"MAPPING*.MAP"}),"\n",(0,i.jsx)(r.li,{children:"OBJECTS.DATA"}),"\n",(0,i.jsx)(r.li,{children:"INDEX.BTR"}),"\n"]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to WMI Repository"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"listusbdevicesalt_file---usbdevices--windowserror",children:"listUsbDevices(alt_file) -> UsbDevices[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse SYSTEM Registry to get list of USB devices that have been connected"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"alt_file"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Alternative path to the SYSTEM Registry file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"serviceinstallspath---serviceinstalls--windowserror",children:"serviceInstalls(path) -> ServiceInstalls[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Parse Windows System.evtx file to extract Service Install events."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Path to the System.evtx file"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"outlook-class",children:"Outlook Class"}),"\n",(0,i.jsx)(r.p,{children:"A basic class to help interact and extract data from OST files."}),"\n",(0,i.jsx)(r.h4,{id:"rootfolder---folderinfo--windowserror",children:"rootFolder() -> FolderInfo | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Returns the root folder in an OST file. Can be used to start walking through the\nOST file"}),"\n",(0,i.jsx)(r.h4,{id:"readfolderfolder---folderinfo--windowserror",children:"readFolder(folder) -> FolderInfo | WindowsError"}),"\n",(0,i.jsxs)(r.p,{children:["Reads the provided folder ID. Returns the same object as ",(0,i.jsx)(r.code,{children:"rootFolder()"}),"\nfunction."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"folder"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"Folder ID"})]})})]}),"\n",(0,i.jsx)(r.h4,{id:"readmessagestable-offset-limit---messagedetails--windowserror",children:"readMessages(table, offset, limit) -> MessageDetails[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Read messages in a folder. You can specify which message to start at with the\noffset and how many the limit. Returns an array of read messages or an error."}),"\n",(0,i.jsx)(r.p,{children:"An offset of 0 means, start with the first message. By default artemis will\nreturn only 50 messages."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsx)(r.td,{children:"TableInfo"}),(0,i.jsx)(r.td,{children:"Table structure associated with the folder. Obtained by readFolder()"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"offset"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"First message to read. A value of 0 means read the first message"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"limit"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"Optional limit to provide to the function. By default 50 messages are read"})]})]})]}),"\n",(0,i.jsx)(r.h4,{id:"readattachmentblock_id-descriptor_id---attachment--windowserror",children:"readAttachment(block_id, descriptor_id) -> Attachment | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Read and extract and attach from provided block and descriptor IDs. The IDs can\nbe obtained from the readMessages function. If there are no IDs in the\nMessageDetails object then the message has no attachment"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"block_id"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"Block ID associated with attachment"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"descriptor_id"}),(0,i.jsx)(r.td,{children:"number"}),(0,i.jsx)(r.td,{children:"Descriptor ID associated with attachment"})]})]})]}),"\n",(0,i.jsx)(r.h4,{id:"parsewordwheelpath---wordwheelentry--windowserror",children:"parseWordWheel(path) -> WordWheelEntry[] | WindowsError"}),"\n",(0,i.jsx)(r.p,{children:"Reads the provided glob path and parses all NTUSER.DAT files looking for\nWordWheel entries."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Param"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"path"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Glob to NTUSER.DAT file(s)"})]})})]})]})}function c(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>d,x:()=>l});var t=s(6540);const i={},n=t.createContext(i);function d(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);