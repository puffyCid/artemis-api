"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[831],{28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function a(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),i.createElement(s.Provider,{value:e},n.children)}},57702:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Artifacts/Linux Artifacts/epiphany","title":"GNOME Epiphany","description":"GNOME Epiphany","source":"@site/docs/Artifacts/Linux Artifacts/epiphany.md","sourceDirName":"Artifacts/Linux Artifacts","slug":"/Artifacts/Linux Artifacts/epiphany","permalink":"/artemis/docs/Artifacts/Linux Artifacts/epiphany","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Linux Artifacts/epiphany.md","tags":[],"version":"current","lastUpdatedBy":"puffyCid","lastUpdatedAt":1748155945000,"frontMatter":{"description":"GNOME Epiphany","keywords":["linux","gnome"]},"sidebar":"artemisArtifacts","previous":{"title":"ELF","permalink":"/artemis/docs/Artifacts/Linux Artifacts/elf"},"next":{"title":"Files","permalink":"/artemis/docs/Artifacts/Linux Artifacts/files"}}');var r=t(74848),s=t(28453);const a={description:"GNOME Epiphany",keywords:["linux","gnome"]},o="GNOME Epiphany",l={},c=[];function p(n){const e={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"gnome-epiphany",children:"GNOME Epiphany"})}),"\n",(0,r.jsx)(e.p,{children:"Epiphany is the default web browser for the GNOME desktop. Artemis supports extracting a variety of artifacts from the browser. Currently artemis can extract:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Browser history"}),"\n",(0,r.jsx)(e.li,{children:"Cookies"}),"\n",(0,r.jsx)(e.li,{children:"Last printed page"}),"\n",(0,r.jsx)(e.li,{children:"Website permissions"}),"\n",(0,r.jsx)(e.li,{children:"Last session info"}),"\n"]}),"\n",(0,r.jsx)(e.h1,{id:"collection",children:"Collection"}),"\n",(0,r.jsxs)(e.p,{children:["You have to use the artemis ",(0,r.jsx)(e.a,{href:"/artemis/docs/API/overview",children:"api"})," in order to collect Epiphany artifacts."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:'import { Epiphany } from "./artemis-api/src/linux/gnome/epiphany";\n\nfunction main() {\n    const use_unfold = true;\n    // Enable optional Unfold parsing\n    const client = new Epiphany(use_unfold);\n    const data = client.history();\n    console.log(JSON.stringify(data));\n}\n\nmain();\n'})}),"\n",(0,r.jsx)(e.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,r.jsx)(e.p,{children:"Depending on the the functions used will return the objects below:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:'export interface EpiphanyHistory {\n    target_url: string | null;\n    url_id: number;\n    target_host: number;\n    title: string | null;\n    sync_id: string | null;\n    visit_count: number;\n    typed_count: number;\n    last_visit_time: string;\n    thumbnail_update_time: string;\n    hidden_from_overview: boolean;\n    visit_type: VisitType;\n    referring_visit: string | null;\n    db_path: string;\n    unfold?: Url;\n}\n\n/**\n * Similar format as `FirefoxCookies`\n */\nexport interface EpiphanyCookies {\n    id: number;\n    name: string | null;\n    value: string | null;\n    host: string | null;\n    path: string | null;\n    expiry: string | null;\n    last_accessed: string | null;\n    is_secure: boolean | null;\n    is_http_only: boolean | null;\n    same_site: boolean | null;\n    db_path: string;\n}\n\nexport interface EpiphanyPermissions {\n    url: string;\n    permissions: Record<string, string>;\n    file_path: string;\n}\n\nexport enum VisitType {\n    None = "None",\n    Link = "Link",\n    Typed = "Typed",\n    Bookmark = "Bookmark",\n    HomePage = "HomePage",\n    Unknown = "Unknown",\n}\n\nexport interface EpiphanyPrint {\n    scale: number;\n    copies: number;\n    number: number;\n    reverse: boolean;\n    output: string;\n    page_set: string;\n    printer: string;\n    pages: string | number;\n    collate: boolean;\n    file_path: string;\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}}}]);