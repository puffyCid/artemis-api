"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[4284],{3812:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=i(7624),s=i(2172);const o={description:"Acquiring local files"},r="Acquiring Files",a={id:"API/API Scenarios/acquire_files",title:"Acquiring Files",description:"Acquiring local files",source:"@site/docs/API/API Scenarios/acquire_files.md",sourceDirName:"API/API Scenarios",slug:"/API/API Scenarios/acquire_files",permalink:"/artemis-api/docs/API/API Scenarios/acquire_files",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/API Scenarios/acquire_files.md",tags:[],version:"current",lastUpdatedBy:"puffyCid",lastUpdatedAt:1718419793e3,frontMatter:{description:"Acquiring local files"},sidebar:"artemisAPI",previous:{title:"API Scenarios",permalink:"/artemis-api/docs/category/api-scenarios"},next:{title:"ESE Databases",permalink:"/artemis-api/docs/API/API Scenarios/ese"}},c={},l=[{value:"How to acquire files",id:"how-to-acquire-files",level:2},{value:"Sample API Script",id:"sample-api-script",level:2}];function u(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"acquiring-files",children:"Acquiring Files"}),"\n",(0,n.jsxs)(t.p,{children:["Using the artemis API you may\n",(0,n.jsx)(t.a,{href:"http://localhost:3000/artemis-api/docs/API/Helper/filesystem",children:"acquire"})," files\nfrom a system using OS APIs.",(0,n.jsx)(t.br,{}),"\n","Currently artemis supports copying file(s) to a local location or uploading to\nthe cloud."]}),"\n",(0,n.jsx)(t.p,{children:"In order to acquire a file you will need two things:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Path to file to acquire"}),"\n",(0,n.jsx)(t.li,{children:"An Output object structure"}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["The Output object is used to tell artemis how to output the acquired file. This\nformat is described in the artemis\n",(0,n.jsx)(t.a,{href:"/artemis-api/docs/Intro/Collections/format",children:"format docs"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"/**\n * An interface to output data using `artemis`\n *\n * References:\n *  - https://puffycid.github.io/artemis-book/collections/format.html\n */\nexport interface Output {\n  /**Name of output directory */\n  name: string;\n  /**Target directory for output */\n  directory: string;\n  /**Format of output: JSON or JSONL */\n  format: Format;\n  /**Compress data with GZIP and all files with ZIP */\n  compress: boolean;\n  /**Endpoint ID */\n  endpoint_id: string;\n  /**ID for collection. Must be positive number */\n  collection_id: number;\n  /**Output type: local, azure, aws, or gcp */\n  output: OutputType;\n  /**URL associated with remote upload */\n  url?: string;\n  /**API key required for remote upload */\n  api_key?: string;\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"When acquiring files there are three caveats in regards to the Output object:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Format setting. This is option not applied to file acquisitions"}),"\n",(0,n.jsx)(t.li,{children:"Compressing setting. File acquisitions are always compressed regardless of\nthis setting."}),"\n",(0,n.jsx)(t.li,{children:"OutputType setting. Currently only local or GCP output types can be used."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"how-to-acquire-files",children:"How to acquire files"}),"\n",(0,n.jsxs)(t.p,{children:["You have to use the artemis ",(0,n.jsx)(t.a,{href:"/artemis-api/docs/API/overview",children:"api"})," in order to acquire\nfiles"]}),"\n",(0,n.jsx)(t.p,{children:"When you acquire a file and output locally artemis will compress the target file\nusing gzip compression. In addition, artemis will acquire metadata associated\nwith the target file and then compress both the target file and metadata using\nzip compression."}),"\n",(0,n.jsx)(t.p,{children:"When you acquire a file and output to the cloud artemis will compress the target\nfile using gzip compression. In addition, artemis will acquire metadata and add\nthe metadata as custom tags to the uploaded file."}),"\n",(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsx)(t.p,{children:"Currently artemis does not perform any disk size checks when acquiring a file.\nIf you choose to output a file locally, you will need to ensure that there is\nenough space on the target path to store the file"})}),"\n",(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsxs)(t.p,{children:["As described already in the ",(0,n.jsx)(t.a,{href:"/artemis-api/docs/Intro/Collections/uploads",children:"uploads docs"}),",\ncurrently artemis does not securely protect the remote API key. Make sure the\naccount associated with the API has only permissions needed by artemis."]})}),"\n",(0,n.jsx)(t.h2,{id:"sample-api-script",children:"Sample API Script"}),"\n",(0,n.jsx)(t.p,{children:"If you want to acquire a file and upload to GCP you would use a script like\nbelow:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:'import {\n  Format,\n  Output,\n  OutputType,\n} from "../../Projects/Deno/artemis-api/src/system/output.ts";\nimport { acquireFile } from "../../Projects/Deno/artemis-api/src/filesystem/acquire.ts";\n\nfunction main() {\n  const out: Output = {\n    name: "js_acquire",\n    directory: "tmp",\n    format: Format.JSON,\n    compress: false,\n    endpoint_id: "adbcd",\n    collection_id: 0,\n    output: OutputType.GCP,\n    url: "https://storage.googleapis.com/upload/storage/v1/b/<your-bucket>",\n    api_key: "api_key_for_gcp",\n  };\n  const status = acquireFile("/Users/dev/Downloads/gentoo.iso", out);\n  console.log(status);\n}\n\nmain();\n'})}),"\n",(0,n.jsx)(t.p,{children:"If you want to acquire a file and output locally you would use a script like\nbelow:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:'import {\n  Format,\n  Output,\n  OutputType,\n} from "../../Projects/Deno/artemis-api/src/system/output.ts";\nimport { acquireFile } from "../../Projects/Deno/artemis-api/src/filesystem/acquire.ts";\n\nfunction main() {\n  const out: Output = {\n    name: "js_acquire",\n    directory: "./tmp",\n    format: Format.JSON,\n    compress: false,\n    endpoint_id: "adbcd",\n    collection_id: 0,\n    output: OutputType.Local,\n  };\n  const status = acquireFile("/Users/dev/Downloads/gentoo.iso", out);\n  console.log(status);\n}\n\nmain();\n'})})]})}function p(e={}){const{wrapper:t}={...(0,s.M)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},2172:(e,t,i)=>{i.d(t,{I:()=>a,M:()=>r});var n=i(1504);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);