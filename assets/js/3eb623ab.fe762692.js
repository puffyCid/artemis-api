"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[2386],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=i,d=u["".concat(s,".").concat(m)]||u[m]||f[m]||a;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9257:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const a={description:"The native executable format for Linux",keywords:["linux","executable","binary"]},o="ELF",l={unversionedId:"Artifacts/Linux Artifacts/elf",id:"Artifacts/Linux Artifacts/elf",title:"ELF",description:"The native executable format for Linux",source:"@site/docs/Artifacts/Linux Artifacts/elf.md",sourceDirName:"Artifacts/Linux Artifacts",slug:"/Artifacts/Linux Artifacts/elf",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/elf",draft:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Linux Artifacts/elf.md",tags:[],version:"current",frontMatter:{description:"The native executable format for Linux",keywords:["linux","executable","binary"]},sidebar:"artemisArtifacts",previous:{title:"Cron",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/cron"},next:{title:"Files",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/files"}},s={},c=[],p={toc:c},u="wrapper";function f(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"elf"},"ELF"),(0,i.kt)("p",null,"Linux Executable Linkable Format (",(0,i.kt)("inlineCode",{parentName:"p"},"ELF"),") is the executable format for\napplications on Linux systems."),(0,i.kt)("p",null,"artemis is able to parse basic metadata from ",(0,i.kt)("inlineCode",{parentName:"p"},"ELF")," files."),(0,i.kt)("p",null,"Other Parsers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://rada.re/n/"},"radare2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lief-project.github.io/"},"LIEF"))),(0,i.kt)("p",null,"References:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lief-project.github.io/"},"LIEF")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Executable_and_Linkable_Format"},"ELF"))),(0,i.kt)("h1",{id:"toml-collection"},"TOML Collection"),(0,i.kt)("p",null,"There is no way to collect just ",(0,i.kt)("inlineCode",{parentName:"p"},"ELF")," data with artemis instead it is an\noptional feature for the Linux ",(0,i.kt)("inlineCode",{parentName:"p"},"filelisting")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"processes")," artifacts."),(0,i.kt)("p",null,"However, it is possible to directly parse ",(0,i.kt)("inlineCode",{parentName:"p"},"ELF")," files by using JavaScript. See\nthe ",(0,i.kt)("a",{parentName:"p",href:"/artemis-api/docs/Intro/Scripting/scripts"},"scripts")," chapter for examples."),(0,i.kt)("h1",{id:"configuration-optaions"},"Configuration Optaions"),(0,i.kt)("p",null,"N/A"),(0,i.kt)("h1",{id:"output-structure"},"Output Structure"),(0,i.kt)("p",null,"An array of ",(0,i.kt)("inlineCode",{parentName:"p"},"ElfInfo")," entries"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface ElfInfo {\n  /**Array of symbols in ELF binary */\n  symbols: string[];\n  /**Array of sections in ELF binary */\n  sections: string[];\n  /**Machine type information in ELF binary */\n  machine_type: string;\n}\n")))}f.isMDXComponent=!0}}]);