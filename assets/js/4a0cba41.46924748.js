"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[3951],{28453:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>d});var i=t(96540);const s={},n=i.createContext(s);function l(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(n.Provider,{value:r},e.children)}},67601:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>h,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"API/Helper/filesystem","title":"Filesystem APIs","description":"Interacting with the Filesystem","source":"@site/docs/API/Helper/filesystem.md","sourceDirName":"API/Helper","slug":"/API/Helper/filesystem","permalink":"/artemis-api/docs/API/Helper/filesystem","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Helper/filesystem.md","tags":[],"version":"current","lastUpdatedBy":"puffycid","lastUpdatedAt":1748157447000,"frontMatter":{"description":"Interacting with the Filesystem"},"sidebar":"artemisAPI","previous":{"title":"Environment APIs","permalink":"/artemis-api/docs/API/Helper/environment"},"next":{"title":"Networking APIs","permalink":"/artemis-api/docs/API/Helper/network"}}');var s=t(74848),n=t(28453);const l={description:"Interacting with the Filesystem"},d="Filesystem APIs",h={},a=[{value:"stat(path) -&gt; FileInfo | FileError",id:"statpath---fileinfo--fileerror",level:3},{value:"hash(path, md5, sha1, sha256) -&gt; Hashes | FileError",id:"hashpath-md5-sha1-sha256---hashes--fileerror",level:3},{value:"readTextFile(path) -&gt; string | FileError",id:"readtextfilepath---string--fileerror",level:3},{value:"readFile(path) -&gt; Uint8Array | FileError",id:"readfilepath---uint8array--fileerror",level:3},{value:"glob(pattern) -&gt; GlobInfo[] | FileError",id:"globpattern---globinfo--fileerror",level:3},{value:"readDir(path) -&gt; Promise&lt;FileInfo[]&gt; | FileError",id:"readdirpath---promisefileinfo--fileerror",level:3},{value:"acquireFile(path, output) -&gt; boolean | FileError",id:"acquirefilepath-output---boolean--fileerror",level:3}];function c(e){const r={a:"a",h1:"h1",h3:"h3",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"filesystem-apis",children:"Filesystem APIs"})}),"\n",(0,s.jsx)(r.p,{children:"The artemis API contains several functions that can be used to interact with the\nfilesystem."}),"\n",(0,s.jsx)(r.h3,{id:"statpath---fileinfo--fileerror",children:"stat(path) -> FileInfo | FileError"}),"\n",(0,s.jsx)(r.p,{children:"Return basic metadata about a file or directory"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"File or directory to get metadata about"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"hashpath-md5-sha1-sha256---hashes--fileerror",children:"hash(path, md5, sha1, sha256) -> Hashes | FileError"}),"\n",(0,s.jsx)(r.p,{children:"Return hashes for a single file"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"File to hash"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"md5"}),(0,s.jsx)(r.td,{children:"boolean"}),(0,s.jsx)(r.td,{children:"Enable MD5 hashing"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sha1"}),(0,s.jsx)(r.td,{children:"boolean"}),(0,s.jsx)(r.td,{children:"Enable SHA1 hashing"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sha256"}),(0,s.jsx)(r.td,{children:"boolean"}),(0,s.jsx)(r.td,{children:"Enable SHA256 hashing"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"readtextfilepath---string--fileerror",children:"readTextFile(path) -> string | FileError"}),"\n",(0,s.jsx)(r.p,{children:"Read a text file. Currently only files less than 2GB in size can be read"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Text file to read"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"readfilepath---uint8array--fileerror",children:"readFile(path) -> Uint8Array | FileError"}),"\n",(0,s.jsx)(r.p,{children:"Read a file using regular OS APIs. Currently only files less than 2GB in size\ncan be read"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"File to read"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"globpattern---globinfo--fileerror",children:"glob(pattern) -> GlobInfo[] | FileError"}),"\n",(0,s.jsxs)(r.p,{children:["Parse glob patterns based on Rust ",(0,s.jsx)(r.a,{href:"https://docs.rs/glob/latest/glob/",children:"glob"}),"\nsupport"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"pattern"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Glob pattern to parse. Ex: C:\\* to get all files and directories at Windows C directory"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"readdirpath---promisefileinfo--fileerror",children:"readDir(path) -> Promise<FileInfo[]> | FileError"}),"\n",(0,s.jsx)(r.p,{children:"Read a provided directory and get list of files. This function is async!"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Directory to read"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"acquirefilepath-output---boolean--fileerror",children:"acquireFile(path, output) -> boolean | FileError"}),"\n",(0,s.jsx)(r.p,{children:"Acquire a local file using OS APIs. Supports copying the file to local location\nor uploading to cloud."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Directory to read"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"output"}),(0,s.jsx)(r.td,{children:"Output"}),(0,s.jsx)(r.td,{children:"Output object"})]})]})]})]})}function o(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);