"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[877],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(a),u=r,g=c["".concat(s,".").concat(u)]||c[u]||m[u]||l;return a?n.createElement(g,i(i({ref:t},d),{},{components:a})):n.createElement(g,i({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6126:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={description:"Interact with macOS Artifacts"},i="macOS",o={unversionedId:"API/Artifacts/macos",id:"API/Artifacts/macos",title:"macOS",description:"Interact with macOS Artifacts",source:"@site/docs/API/Artifacts/macos.md",sourceDirName:"API/Artifacts",slug:"/API/Artifacts/macos",permalink:"/artemis-api/docs/API/Artifacts/macos",draft:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Artifacts/macos.md",tags:[],version:"current",frontMatter:{description:"Interact with macOS Artifacts"},sidebar:"artemisAPI",previous:{title:"Linux",permalink:"/artemis-api/docs/API/Artifacts/linux"},next:{title:"Unix",permalink:"/artemis-api/docs/API/Artifacts/unix"}},s={},p=[{value:"getUsers() -&gt; <code>Users[]</code>",id:"getusers---users",level:3},{value:"getGroup() -&gt; <code>Groups[]</code>",id:"getgroup---groups",level:3},{value:"parseAlias(data) -&gt; <code>Alias | Error</code>",id:"parsealiasdata---alias--error",level:3},{value:"getEmond() -&gt; <code>Emond[]</code>",id:"getemond---emond",level:3},{value:"getExecpolicy() -&gt; <code>ExecPolicy[]</code>",id:"getexecpolicy---execpolicy",level:3},{value:"firewallStatus() -&gt; <code>Firewall | Error</code>",id:"firewallstatus---firewall--error",level:3},{value:"getFsevents() -&gt; <code>Fsevents[] | null</code>",id:"getfsevents---fsevents--null",level:3},{value:"getLaunchdDaemons() -&gt; <code>Launchd[]</code>",id:"getlaunchddaemons---launchd",level:3},{value:"getLaunchdAgents() -&gt; <code>Launchd[]</code>",id:"getlaunchdagents---launchd",level:3},{value:"getLoginitems() -&gt; <code>LoginItems[]</code>",id:"getloginitems---loginitems",level:3},{value:"getMacho(path) -&gt; <code>MachoInfo[] | null</code>",id:"getmachopath---machoinfo--null",level:3},{value:"getPlist(path) -&gt; <code>Record&lt;string, unknown&gt; | number[] | Error</code>",id:"getplistpath---recordstring-unknown--number--error",level:3},{value:"passwordPolicy() -&gt; <code>PasswordPolicy[] | Error</code>",id:"passwordpolicy---passwordpolicy--error",level:3},{value:"getSafariUsersHistory() -&gt; <code>SafariHistory[]</code>",id:"getsafariusershistory---safarihistory",level:3},{value:"getSafariHistory(path) -&gt; <code>RawSafariHistory[]</code>",id:"getsafarihistorypath---rawsafarihistory",level:3},{value:"getSafariUsersDownloads() -&gt; <code>SafariDownloads[]</code>",id:"getsafariusersdownloads---safaridownloads",level:3},{value:"getSafariDownloads(path) -&gt; <code>RawSafariDownloads[]</code>",id:"getsafaridownloadspath---rawsafaridownloads",level:3},{value:"getUnifiedLog(path) -&gt; <code>UnifiedLog[]</code>",id:"getunifiedlogpath---unifiedlog",level:3},{value:"parseRequirementBlob(data) -&gt; <code>SingleRequirement | Error</code>",id:"parserequirementblobdata---singlerequirement--error",level:3},{value:"listApps() -&gt; <code>Applications[]</code>",id:"listapps---applications",level:3},{value:"scanApps() -&gt; <code>Applications[]</code>",id:"scanapps---applications",level:3}],d={toc:p},c="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"macos"},"macOS"),(0,r.kt)("p",null,"These functions can be used to pull data related to macOS artifacts"),(0,r.kt)("h3",{id:"getusers---users"},"getUsers() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Users[]")),(0,r.kt)("p",null,"Return all local users on macOS sysem"),(0,r.kt)("h3",{id:"getgroup---groups"},"getGroup() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Groups[]")),(0,r.kt)("p",null,"Return all local groups on macOS sysem"),(0,r.kt)("h3",{id:"parsealiasdata---alias--error"},"parseAlias(data) -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Alias | Error")),(0,r.kt)("p",null,"Parse macOS ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Alias_(Mac_OS)"},"alias")," data. Alias\nfiles are a legacy shortcut format. May be encountered in ",(0,r.kt)("inlineCode",{parentName:"p"},"plist")," files such as\nthe firewall ",(0,r.kt)("inlineCode",{parentName:"p"},"plist")," file."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"Raw alias bytes")))),(0,r.kt)("h3",{id:"getemond---emond"},"getEmond() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Emond[]")),(0,r.kt)("p",null,"Get all ",(0,r.kt)("a",{parentName:"p",href:"/artemis-api/docs/Artifacts/macOS%20Artifacts/emond"},"Emond")," rules on macOS.\nEmond was been removed on Ventura."),(0,r.kt)("h3",{id:"getexecpolicy---execpolicy"},"getExecpolicy() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"ExecPolicy[]")),(0,r.kt)("p",null,"Parse the ExecPolicy sqlite database on macOS"),(0,r.kt)("h3",{id:"firewallstatus---firewall--error"},"firewallStatus() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Firewall | Error")),(0,r.kt)("p",null,"Return firewall information and status on macOS"),(0,r.kt)("h3",{id:"getfsevents---fsevents--null"},"getFsevents() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Fsevents[] | null")),(0,r.kt)("p",null,"Parse macOS ",(0,r.kt)("a",{parentName:"p",href:"/artemis-api/docs/Artifacts/macOS%20Artifacts/fsevents"},"FsEvents")),(0,r.kt)("h3",{id:"getlaunchddaemons---launchd"},"getLaunchdDaemons() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Launchd[]")),(0,r.kt)("p",null,"Return all Launch daemons on macOS"),(0,r.kt)("h3",{id:"getlaunchdagents---launchd"},"getLaunchdAgents() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Launchd[]")),(0,r.kt)("p",null,"Return all Launch agents on macOS"),(0,r.kt)("h3",{id:"getloginitems---loginitems"},"getLoginitems() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"LoginItems[]")),(0,r.kt)("p",null,"Return all LoginItems on macOS"),(0,r.kt)("h3",{id:"getmachopath---machoinfo--null"},"getMacho(path) -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"MachoInfo[] | null")),(0,r.kt)("p",null,"Parse a macho file and return metadata about the binary."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to macho binary")))),(0,r.kt)("h3",{id:"getplistpath---recordstring-unknown--number--error"},"getPlist(path) -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Record<string, unknown> | number[] | Error")),(0,r.kt)("p",null,"Parse a plist file. Supports parsing a provide plist file path or the raw bytes\nof plist data. Sometimes a plist file may contain another base64 encoded plist.\nThis function can parse the raw plist bytes."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string ","|"," Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to plist file or raw plist bytes")))),(0,r.kt)("h3",{id:"passwordpolicy---passwordpolicy--error"},"passwordPolicy() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"PasswordPolicy[] | Error")),(0,r.kt)("p",null,"Get password policies on macOS. Will parse plist file at\n",(0,r.kt)("inlineCode",{parentName:"p"},"/var/db/dslocal/nodes/Default/config/shadowhash.plist")),(0,r.kt)("h3",{id:"getsafariusershistory---safarihistory"},"getSafariUsersHistory() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"SafariHistory[]")),(0,r.kt)("p",null,"Return Safari history for all users"),(0,r.kt)("h3",{id:"getsafarihistorypath---rawsafarihistory"},"getSafariHistory(path) -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"RawSafariHistory[]")),(0,r.kt)("p",null,"Parse Safari history from provided ",(0,r.kt)("inlineCode",{parentName:"p"},"History.db")," sqlite file. Supports locked\nfiles."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to ",(0,r.kt)("inlineCode",{parentName:"td"},"History.db")," file")))),(0,r.kt)("h3",{id:"getsafariusersdownloads---safaridownloads"},"getSafariUsersDownloads() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"SafariDownloads[]")),(0,r.kt)("p",null,"Return Safari downloads for all users"),(0,r.kt)("h3",{id:"getsafaridownloadspath---rawsafaridownloads"},"getSafariDownloads(path) -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"RawSafariDownloads[]")),(0,r.kt)("p",null,"Parse Safari history from provided ",(0,r.kt)("inlineCode",{parentName:"p"},"Downloads.plist")," file."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to ",(0,r.kt)("inlineCode",{parentName:"td"},"Downloads.plist")," file")))),(0,r.kt)("h3",{id:"getunifiedlogpath---unifiedlog"},"getUnifiedLog(path) -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"UnifiedLog[]")),(0,r.kt)("p",null,"Parse a single UnifiedLog file (.tracev3) on macOS. Typically found at\n",(0,r.kt)("inlineCode",{parentName:"p"},"/private/var/db/diagnostics/{Persist, Signpost, HighVolume, Special}")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to .tracev3 file")))),(0,r.kt)("h3",{id:"parserequirementblobdata---singlerequirement--error"},"parseRequirementBlob(data) -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"SingleRequirement | Error")),(0,r.kt)("p",null,"Parse the Requirement Blob from raw codesigning bytes. This part of Apple's\nCodeSigning framework. This data can be found in macho binaries and also plist\nfiles."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"Raw bytes associated with requirement blob")))),(0,r.kt)("h3",{id:"listapps---applications"},"listApps() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Applications[]")),(0,r.kt)("p",null,"Return a simple Application listing. Searches user installed Apps, System Apps,\ndefault Homebrew paths (/usr/local/Cellar, /opt/homebrew/Cellar)."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"scanApps()")," if you want to scan the entire filesystem for Apps"),(0,r.kt)("h3",{id:"scanapps---applications"},"scanApps() -> ",(0,r.kt)("inlineCode",{parentName:"h3"},"Applications[]")),(0,r.kt)("p",null,"Scans the entire filesystem under /System/Volumes/Data and tries to parse all\nApplications."),(0,r.kt)("p",null,"Includes embedded Apps, Frameworks, and any file that ends with\n",(0,r.kt)("inlineCode",{parentName:"p"},"%/Contents/Info.plist")),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"listApps()")," if you a simpler Application listing"))}m.isMDXComponent=!0}}]);