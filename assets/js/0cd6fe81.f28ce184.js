"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[6652],{3072:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=t(7624),r=t(2172);const i={description:"Tracks file changes",keywords:["windows","file meta"]},a="UsnJrnl",c={id:"Artifacts/Windows Artfacts/usnjrnl",title:"UsnJrnl",description:"Tracks file changes",source:"@site/docs/Artifacts/Windows Artfacts/usnjrnl.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/usnjrnl",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/usnjrnl",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/usnjrnl.md",tags:[],version:"current",lastUpdatedBy:"puffyCid",lastUpdatedAt:1715224196e3,frontMatter:{description:"Tracks file changes",keywords:["windows","file meta"]},sidebar:"artemisArtifacts",previous:{title:"Users",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/users"},next:{title:"WMI",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/wmipersist"}},o={},l=[];function d(n){const e={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"usnjrnl",children:"UsnJrnl"}),"\n",(0,s.jsxs)(e.p,{children:["Windows ",(0,s.jsx)(e.code,{children:"UsnJrnl"})," is a sparse binary file that tracks changes to files and\ndirectories. Located at the alternative data stream (ADS)\n",(0,s.jsx)(e.code,{children:"C:\\$Extend\\$UsnJrnl:$J"}),". Parsing this data can sometimes show files that have\nbeen deleted. However, depending on the file activity on the system entries in\nthe ",(0,s.jsx)(e.code,{children:"UsnJrnl"})," may get overwritten quickly."]}),"\n",(0,s.jsx)(e.p,{children:"Other Parsers:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.velociraptor.app/artifact_references/pages/windows.forensics.usn/",children:"Velociraptor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"References:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://learn.microsoft.com/en-us/windows/win32/api/winioctl/ns-winioctl-usn_record_v2?redirectedfrom=MSDN",children:"UsnJrnl"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/libyal/libfsntfs/blob/main/documentation/New%20Technologies%20File%20System%20(NTFS).asciidoc#usn_change_journal",children:"Libyal"})}),"\n"]}),"\n",(0,s.jsx)(e.h1,{id:"toml-collection",children:"TOML Collection"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-toml",children:'system = "windows"\n\n[output]\nname = "usnjrnl_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "6c51b123-1522-4572-9f2a-0bd5abd81b82"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "usnjrnl"\n[artifacts.usnjrnl]\n# Optional\n# alt_drive = \'D\'\n# alt_path = ""\n'})}),"\n",(0,s.jsx)(e.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"alt_drive"})," Expects a single character value. Will use an alternative drive\nletter when parsing ",(0,s.jsx)(e.code,{children:"UsnJrnl"}),". This configuration is ",(0,s.jsx)(e.strong,{children:"optional"}),". By default\nartemis will use the ",(0,s.jsx)(e.code,{children:"%systemdrive%"})," value (typically ",(0,s.jsx)(e.code,{children:"C"}),")"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"alt_path"})," Full path to $J file. This configuration is ",(0,s.jsx)(e.strong,{children:"optional"}),"."]}),"\n"]}),"\n",(0,s.jsx)(e.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,s.jsxs)(e.p,{children:["An array of ",(0,s.jsx)(e.code,{children:"UsnJrnl"})," entries"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"export interface UsnJrnl {\n  /**Entry number in the MFT */\n  mft_entry: number;\n  /**Sequence number in the MFT */\n  mft_sequence: number;\n  /**Parent entry number in the MFT */\n  parent_mft_entry: number;\n  /**Parent sequence number in the MFT */\n  parent_mft_sequence: number;\n  /**ID number in the Update Sequence Number Journal (UsnJrnl) */\n  update_sequence_number: number;\n  /**Timestamp of of entry update in UNIXEPOCH seconds */\n  update_time: number;\n  /**Reason for update action */\n  update_reason: string;\n  /**Source information of the update */\n  update_source_flags: string;\n  /**Security ID associated with entry */\n  security_descriptor_id: number;\n  /**Attributes associate with entry */\n  file_attributes: string[];\n  /**Name associated with entry. Can be file or directory */\n  filename: string;\n  /**Extension if available for filename */\n  extension: string;\n  /**Full path for the UsnJrnl entry. Obtained by parsing `$MFT` and referencing the `parent_mft_entry` */\n  full_path: string;\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,r.M)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},2172:(n,e,t)=>{t.d(e,{I:()=>c,M:()=>a});var s=t(1504);const r={},i=s.createContext(r);function a(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);