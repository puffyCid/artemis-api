"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[1582],{1900:(t,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=n(7624),e=n(2172);const r={description:"Tracks files opened by applications in Windows Taskbar",keywords:["windows","binary"]},a="Jumplists",o={id:"Artifacts/Windows Artfacts/jumplists",title:"Jumplists",description:"Tracks files opened by applications in Windows Taskbar",source:"@site/docs/Artifacts/Windows Artfacts/jumplists.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/jumplists",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/jumplists",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/jumplists.md",tags:[],version:"current",lastUpdatedBy:"puffyCid",lastUpdatedAt:1715224196e3,frontMatter:{description:"Tracks files opened by applications in Windows Taskbar",keywords:["windows","binary"]},sidebar:"artemisArtifacts",previous:{title:"Files",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/files"},next:{title:"Logons",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/logons"}},l={},c=[];function d(t){const i={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,e.M)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"jumplists",children:"Jumplists"}),"\n",(0,s.jsxs)(i.p,{children:["Windows ",(0,s.jsx)(i.code,{children:"Jumplists"})," files track opened files via applications in the Taskbar or\nStart Menu. Jumplists are actually a collection of embedded\n",(0,s.jsx)(i.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/shortcuts",children:"Shortcut"})," files and therefore can show evidence of file\ninteraction."]}),"\n",(0,s.jsx)(i.p,{children:"There are two (2) types of Jumplist files:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Custom - Files that are pinned to Taskbar applications"}),"\n",(0,s.jsx)(i.li,{children:"Automatic - Files that are not pinned to Taskbar applications"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Other parsers:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://ericzimmerman.github.io/",children:"Jumplist Explorer"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"References:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://github.com/libyal/dtformats/blob/main/documentation/Jump%20lists%20format.asciidoc",children:"Libyal"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://binaryforay.blogspot.com/2016/02/jump-lists-in-depth-understand-format.html",children:"Zimmerman blog"})}),"\n"]}),"\n",(0,s.jsx)(i.h1,{id:"toml-collection",children:"TOML Collection"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-toml",children:'system = "windows"\n\n[output]\nname = "jumplists_collection"\ndirectory = "./tmp"\nformat = "jsonl"\ncompress = false\nendpoint_id = "6c51b123-1522-4572-9f2a-0bd5abd81b82"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "jumplists"\n[artifacts.jumplists]\n# Optional\n# alt_file = "C:\\\\Artifacts\\\\CustomJumplist"\n'})}),"\n",(0,s.jsx)(i.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"alt_file"})," Full path to an alternative Jumplist file. This configuration is\n",(0,s.jsx)(i.strong,{children:"optional"}),". By default artemis will parse all user Jumplist files on the\nsystem."]}),"\n"]}),"\n",(0,s.jsx)(i.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,s.jsxs)(i.p,{children:["An array of ",(0,s.jsx)(i.code,{children:"Jumplists"})," entries"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"export interface Jumplists {\n  /**Path to Jumplist file */\n  path: string;\n  /**Jupmlist type. Custom or Automatic */\n  jumplist_type: string;\n  /**Application ID for Jumplist file */\n  app_id: string;\n  /**Metadata associated with Jumplist entry */\n  jumplist_metadata: DestEntries;\n  /**Shortcut information for Jumplist entry */\n  lnk_info: Shortcut;\n}\n\n/**\n * Metadata associated with Jumplist entry\n */\ninterface DestEntries {\n  /**\n   * Digital Record Object Identification (DROID) used to track lnk file\n   */\n  droid_volume_id: string;\n  /**\n   * Digital Record Object Identification (DROID) used to track lnk file\n   */\n  droid_file_id: string;\n  /**\n   * Digital Record Object Identification (DROID) used to track lnk file\n   */\n  birth_droid_volume_id: string;\n  /**\n   * Digital Record Object Identification (DROID) used to track lnk file\n   */\n  birth_droid_file_id: string;\n  /**Hostname associated with Jumplist entry */\n  hostname: string;\n  /**Jumplist entry number */\n  entry: number;\n  /**Modified timestamp of Jumplist entry in UNIXEPOCH seconds */\n  modified: number;\n  /**Status if Jumplist entry is pinned. `Pinned` or `NotPinned` */\n  pin_status: string;\n  /**Path associated with Jumplist entry */\n  path: string;\n}\n"})})]})}function p(t={}){const{wrapper:i}={...(0,e.M)(),...t.components};return i?(0,s.jsx)(i,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}},2172:(t,i,n)=>{n.d(i,{I:()=>o,M:()=>a});var s=n(1504);const e={},r=s.createContext(e);function a(t){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof t?t(i):{...i,...t}}),[i,t])}function o(t){let i;return i=t.disableParentContext?"function"==typeof t.components?t.components(e):t.components||e:a(t.components),s.createElement(r.Provider,{value:i},t.children)}}}]);