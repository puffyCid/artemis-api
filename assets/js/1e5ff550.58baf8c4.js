"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[7748],{1720:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=t(7624),i=t(2172);const r={description:"Linux sudo records",keywords:["linux","logs","binary"]},o="Sudo Logs",c={id:"Artifacts/Linux Artifacts/sudo",title:"Sudo Logs",description:"Linux sudo records",source:"@site/docs/Artifacts/Linux Artifacts/sudo.md",sourceDirName:"Artifacts/Linux Artifacts",slug:"/Artifacts/Linux Artifacts/sudo",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/sudo",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Linux Artifacts/sudo.md",tags:[],version:"current",frontMatter:{description:"Linux sudo records",keywords:["linux","logs","binary"]},sidebar:"artemisArtifacts",previous:{title:"Shell History",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/shellhistory"},next:{title:"SystemInfo",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/systeminfo"}},a={},d=[];function u(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"sudo-logs",children:"Sudo Logs"}),"\n",(0,s.jsxs)(n.p,{children:["Unix ",(0,s.jsx)(n.code,{children:"SudoLogs"}),' are the log files associated with sudo execution. Sudo ("super\nuser do" or "substitute user") is used to run programs with elevated privileges.']}),"\n",(0,s.jsxs)(n.p,{children:["macOS ",(0,s.jsx)(n.code,{children:"SudoLogs"})," are stored in the Unified Log files.",(0,s.jsx)("br",{})," Linux ",(0,s.jsx)(n.code,{children:"SudoLogs"})," are\nstored in the Systemd Journal files.",(0,s.jsx)("br",{})," The log entries show evidence of\ncommands executed with elevated privileges"]}),"\n",(0,s.jsx)(n.p,{children:"Other Parsers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"References:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"N/A"}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"toml-collection",children:"TOML Collection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'system = "linux" # or "macos"\n\n[output]\nname = "sudologs_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "abdc"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "sudologs"\n'})}),"\n",(0,s.jsx)(n.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"N/A"}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,s.jsxs)(n.p,{children:["On a Linux system ",(0,s.jsx)(n.code,{children:"SudoLogs"})," return an array of ",(0,s.jsx)(n.code,{children:"Journal"})," entries"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'export interface Journal {\n  /**User ID associated with entry */\n  uid: number;\n  /**Group ID associated with entry */\n  gid: number;\n  /**Process ID associated with entry */\n  pid: number;\n  /**Thread ID associated with entry */\n  thread_id: number;\n  /**Command associated with entry */\n  comm: string;\n  /**Priority associated with entry */\n  priority: string;\n  /**Syslog facility associated with entry */\n  syslog_facility: string;\n  /**Executable file associated with entry */\n  executable: string;\n  /**Cmdline args associated with entry */\n  cmdline: string;\n  /**Effective capabilities of process associated with entry */\n  cap_effective: string;\n  /**Session of the process associated with entry */\n  audit_session: number;\n  /**Login UID of the process associated with entry */\n  audit_loginuid: number;\n  /**Systemd Countrol Group associated with entry */\n  systemd_cgroup: string;\n  /**Systemd owner UID associated with entry */\n  systemd_owner_uid: number;\n  /**Systemd unit associated with entry */\n  systemd_unit: string;\n  /**Systemd user unit associated with entry */\n  systemd_user_unit: string;\n  /**Systemd slice associated with entry */\n  systemd_slice: string;\n  /**Sysemd user slice associated with entry */\n  systemd_user_slice: string;\n  /**Systemd invocation ID associated with entry */\n  systemd_invocation_id: string;\n  /**Kernel Boot ID associated with entry */\n  boot_id: string;\n  /**Machine ID of host associated with entry */\n  machine_id: string;\n  /**Hostname associated with entry */\n  hostname: string;\n  /**Runtime scope associated with entry */\n  runtime_scope: string;\n  /**Trused Timestamp associated with entry in UNIXEPOCH microseconds */\n  source_realtime: number;\n  /**Timestamp associated with entry in UNIXEPOCH microseconds */\n  realtime: number;\n  /**How entry was received by the Journal service */\n  transport: string;\n  /**Journal message entry */\n  message: string;\n  /**Message ID associated with Journal Catalog */\n  message_id: string;\n  /**Unit result associated with entry */\n  unit_result: string;\n  /**Code line for file associated with entry */\n  code_line: number;\n  /**Code function for file associated with entry */\n  code_function: string;\n  /**Code file associated with entry */\n  code_file: string;\n  /**User invocation ID associated with entry */\n  user_invocation_id: string;\n  /**User unit associated with entry */\n  user_unit: string;\n  /**\n   * Custom fields associated with entry.\n   * Example:\n   * ```\n   * "custom": {\n   *            "_SOURCE_MONOTONIC_TIMESTAMP": "536995",\n   *            "_UDEV_SYSNAME": "0000:00:1c.3",\n   *            "_KERNEL_DEVICE": "+pci:0000:00:1c.3",\n   *            "_KERNEL_SUBSYSTEM": "pci"\n   *        }\n   * ```\n   */\n  custom: Record<string, string>;\n  /**Sequence Number associated with entry */\n  seqnum: number;\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>c,M:()=>o});var s=t(1504);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);