"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[9891],{900:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=s(5893),r=s(1151);const i={description:"macOS sudo records",keywords:["macOS","logs","binary"]},o="Sudo Logs",c={id:"Artifacts/macOS Artifacts/sudo",title:"Sudo Logs",description:"macOS sudo records",source:"@site/docs/Artifacts/macOS Artifacts/sudo.md",sourceDirName:"Artifacts/macOS Artifacts",slug:"/Artifacts/macOS Artifacts/sudo",permalink:"/artemis-api/docs/Artifacts/macOS Artifacts/sudo",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/macOS Artifacts/sudo.md",tags:[],version:"current",frontMatter:{description:"macOS sudo records",keywords:["macOS","logs","binary"]},sidebar:"artemisArtifacts",previous:{title:"Shell History",permalink:"/artemis-api/docs/Artifacts/macOS Artifacts/shellhistory"},next:{title:"SystemInfo",permalink:"/artemis-api/docs/Artifacts/macOS Artifacts/systeminfo"}},a={},d=[];function l(e){const t={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"sudo-logs",children:"Sudo Logs"}),"\n",(0,n.jsxs)(t.p,{children:["Unix ",(0,n.jsx)(t.code,{children:"SudoLogs"}),' are the log files associated with sudo execution. Sudo ("super\nuser do" or "substitute user") is used to run programs with elevated privileges.']}),"\n",(0,n.jsxs)(t.p,{children:["macOS ",(0,n.jsx)(t.code,{children:"SudoLogs"})," are stored in the Unified Log files.",(0,n.jsx)("br",{})," Linux ",(0,n.jsx)(t.code,{children:"SudoLogs"})," are\nstored in the Systemd Journal files.",(0,n.jsx)("br",{})," The log entries show evidence of\ncommands executed with elevated privileges"]}),"\n",(0,n.jsx)(t.p,{children:"Other Parsers:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"None"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"References:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"N/A"}),"\n"]}),"\n",(0,n.jsx)(t.h1,{id:"toml-collection",children:"TOML Collection"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-toml",children:'system = "maco" # or "linux"\n\n[output]\nname = "sudologs_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "abdc"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "sudologs"\n'})}),"\n",(0,n.jsx)(t.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"N/A"}),"\n"]}),"\n",(0,n.jsx)(t.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,n.jsxs)(t.p,{children:["On a macOS system ",(0,n.jsx)(t.code,{children:"sudologs"})," return an array of ",(0,n.jsx)(t.code,{children:"UnifiedLog"})," entries"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"export interface UnifiedLog {\n  /**Subsystem used by the log entry */\n  subsystem: string;\n  /**Library associated with the log entry */\n  library: string;\n  /**Log entry category */\n  category: string;\n  /**Process ID associated with log entry */\n  pid: number;\n  /**Effective user ID associated with log entry */\n  euid: number;\n  /**Thread ID associated with log entry */\n  thread_id: number;\n  /**Activity ID associated with log entry */\n  activity_id: number;\n  /**UUID of library associated with the log entry */\n  library_uuid: string;\n  /**UNIXEPOCH timestamp of log entry in nanoseconds */\n  time: number;\n  /**Log entry event type */\n  event_type: string;\n  /**Log entry log type */\n  log_type: string;\n  /**Process associated with log entry */\n  process: string;\n  /**UUID of process associated with log entry */\n  process_uuid: string;\n  /**Raw string message  associated with log entry*/\n  raw_message: string;\n  /**Boot UUID associated with log entry */\n  boot_uuid: string;\n  /**Timezone associated with log entry */\n  timezone_name: string;\n  /**Strings associated with the log entry */\n  mesage_entries: Record<string, string | number>;\n  /**\n   * Resolved message entry associated log entry.\n   * Merge of `raw_message` and `message_entries`\n   */\n  message: string;\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>o});var n=s(7294);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);