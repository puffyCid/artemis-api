"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[4995],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,d=p["".concat(s,".").concat(f)]||p[f]||m[f]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3761:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={description:"Cron jobs on Linux",keywords:["linux","persistence","plaintext"]},i="Cron",c={unversionedId:"Artifacts/Linux Artifacts/cron",id:"Artifacts/Linux Artifacts/cron",title:"Cron",description:"Cron jobs on Linux",source:"@site/docs/Artifacts/Linux Artifacts/cron.md",sourceDirName:"Artifacts/Linux Artifacts",slug:"/Artifacts/Linux Artifacts/cron",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/cron",draft:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Linux Artifacts/cron.md",tags:[],version:"current",frontMatter:{description:"Cron jobs on Linux",keywords:["linux","persistence","plaintext"]},sidebar:"artemisArtifacts",previous:{title:"Linux Artifacts",permalink:"/artemis-api/docs/category/linux-artifacts"},next:{title:"ELF",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/elf"}},s={},l=[],u={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cron"},"Cron"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Cron")," is an application that lets users create jobs on an endpoint. It is\ncommon on Unix, Linux, and macOS systems. A ",(0,o.kt)("inlineCode",{parentName:"p"},"Cron")," job can be configured to\nexecute a command on at a specific time. It is a popular form of persistence on\nsupported systems."),(0,o.kt)("p",null,"Other parsers:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Any program that read a text file")),(0,o.kt)("p",null,"Refernces:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cron"},"Cron"))),(0,o.kt)("h1",{id:"toml-collection"},"TOML Collection"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'system = "linux" # or "macos"\n\n[output]\nname = "cron_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "abdc"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "cron"\n')),(0,o.kt)("h1",{id:"collection-options"},"Collection Options"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"N/A")),(0,o.kt)("h1",{id:"output-structure"},"Output Structure"),(0,o.kt)("p",null,"An array of ",(0,o.kt)("inlineCode",{parentName:"p"},"Cron")," entries."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Cron {\n  /**What hour should cron job run. * means every hour */\n  hour: string;\n  /**What minute should cron job run. * means every minute  */\n  min: string;\n  /**What day should cron job run. * means every day */\n  day: string;\n  /**What month should cron job run. * means every month */\n  month: string;\n  /**What weekday should cron job run. * means every day */\n  weekday: string;\n  /**Command to execute when cron job is triggered */\n  command: string;\n}\n")))}m.isMDXComponent=!0}}]);