"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[6768],{2436:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var s=i(7624),t=i(2172);const r={sidebar_position:1},d="Prerequisites",l={id:"Contributing/building",title:"Prerequisites",description:"There a few required applications you will need in order to build and develop",source:"@site/docs/Contributing/building.md",sourceDirName:"Contributing",slug:"/Contributing/building",permalink:"/artemis-api/docs/Contributing/building",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Contributing/building.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"artemisContributing",next:{title:"Getting Started",permalink:"/artemis-api/docs/Contributing/overview"}},c={},o=[{value:"Advanced Prerequisites",id:"advanced-prerequisites",level:2},{value:"Server Interaction",id:"server-interaction",level:3}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"There a few required applications you will need in order to build and develop\nartemis."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["artemis is written in Rust. So you will need to download and install the\n",(0,s.jsx)(n.a,{href:"https://www.rust-lang.org/",children:"Rust"})," programming language"]}),"\n",(0,s.jsx)(n.li,{children:"Git"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://rust-analyzer.github.io/",children:"Rust analzyer"})}),"\n",(0,s.jsxs)(n.li,{children:["An IDE or text editor. ",(0,s.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"VSCode"})," or\n",(0,s.jsx)(n.a,{href:"https://vscodium.com/",children:"VSCodium"})," are great choices."]}),"\n",(0,s.jsxs)(n.li,{children:["The command runner ",(0,s.jsx)(n.a,{href:"https://github.com/casey/just",children:"Just"}),". Just is used to\nhelp build the entire artemis project and is ",(0,s.jsx)(n.strong,{children:"highly"})," recommended"]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["Windows users will need to add extra arguements to the just command:",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"just --shell pwsh.exe --shell-arg -c"})]}),(0,s.jsxs)(n.p,{children:["On Windows if you get an error like:",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"error: Recipe _wasm could not be run because just could not find the shell: program not found"})]}),(0,s.jsxs)(n.p,{children:["that means you forgot provide: ",(0,s.jsx)(n.code,{children:"just --shell pwsh.exe  --shell-arg -c"})]})]}),"\n",(0,s.jsx)(n.p,{children:"artemis has been developed on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"macOS 12 (Monterey) and higher"}),"\n",(0,s.jsx)(n.li,{children:"Windows 10 and higher"}),"\n",(0,s.jsx)(n.li,{children:"Linux distros such as Ubuntu, Arch Linux, and Debian"}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"building",children:"Building"}),"\n",(0,s.jsx)(n.p,{children:"Once you have the prerequisites installed you can build artemis."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Clone artemis repo at\n",(0,s.jsx)(n.a,{href:"https://github.com/puffycid/artemis",children:"https://github.com/puffycid/artemis"})]}),"\n",(0,s.jsx)(n.li,{children:"Navigate to the repo"}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"just cli"})," or ",(0,s.jsx)(n.code,{children:"just --shell pwsh.exe  --shell-arg -c cli"})," for Windows"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# Download artemis source code\ngit clone https://github.com/puffycid/artemis\ncd artemis\n\n# Build the CLI executable\njust cli\n\n# Build the library\njust core\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Full list of just commands (via ",(0,s.jsx)(n.code,{children:"just --list"}),")"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Command"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"build"}),(0,s.jsx)(n.td,{children:"Build the entire artemis project"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cli"}),(0,s.jsx)(n.td,{children:"Build the artemis executable"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"complex"}),(0,s.jsx)(n.td,{children:"Run the scc tool against the artemis source code"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"core"}),(0,s.jsx)(n.td,{children:"Build the artemis library"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"default"}),(0,s.jsx)(n.td,{children:"Run clippy"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ese"}),(0,s.jsx)(n.td,{children:"Run all the ESE parsing tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"filesystem"}),(0,s.jsx)(n.td,{children:"Run all the filesystem tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"linux"}),(0,s.jsx)(n.td,{children:"Run all the Linux tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"macos"}),(0,s.jsx)(n.td,{children:"Run all the macOS tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"nextest"}),(0,s.jsx)(n.td,{children:"Run all tests using nextest"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"runtime"}),(0,s.jsx)(n.td,{children:"Run all the JS runtime tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"server"}),(0,s.jsx)(n.td,{children:"Build the artemis server and start it"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"shellitems"}),(0,s.jsx)(n.td,{children:"Run all the ShellItem parsing tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"test"}),(0,s.jsx)(n.td,{children:"Run all artemis tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"unix"}),(0,s.jsx)(n.td,{children:"Run all Unix tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"windows"}),(0,s.jsx)(n.td,{children:"Run all Windows tests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"wmi"}),(0,s.jsx)(n.td,{children:"Run all WMI parsing tests"})]})]})]}),"\n",(0,s.jsx)(n.h1,{id:"additional-optional-tools",children:"Additional Optional Tools"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://nexte.st/",children:"nextest"})," can be used as an alternative to\n",(0,s.jsx)(n.code,{children:"cargo test --release"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/boyter/scc",children:"scc"})," can be used to measure code complexity\nin artemis"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"advanced",children:"Advanced"}),"\n",(0,s.jsx)(n.p,{children:"If you want to build the entire artemis project, you will need additional\nprerequisites. These additional prerequisites are required to build the\nexperimental server and webui."}),"\n",(0,s.jsx)(n.h2,{id:"advanced-prerequisites",children:"Advanced Prerequisites"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Install ",(0,s.jsx)(n.a,{href:"https://nodejs.org/en",children:"NodeJS"}),". NodeJS is required to install\nTailWindCSS and DaisyUI"]}),"\n",(0,s.jsxs)(n.li,{children:["Install ",(0,s.jsx)(n.a,{href:"https://github.com/Kong/insomnia",children:"Insomnia"}),". You do not need an\naccount. Local Scratch Pad works fine."]}),"\n",(0,s.jsxs)(n.li,{children:["Add WASM support for Rust via ",(0,s.jsx)(n.code,{children:"rustup target add wasm32-unknown-unknown"})]}),"\n",(0,s.jsxs)(n.li,{children:["Install TailWindCSS ",(0,s.jsx)(n.code,{children:"npm install -D tailwindcss"})]}),"\n",(0,s.jsxs)(n.li,{children:["Install DaisyUI ",(0,s.jsx)(n.code,{children:"npm i -D daisyui@latest"})]}),"\n",(0,s.jsxs)(n.li,{children:["Install Typography ",(0,s.jsx)(n.code,{children:"npm install -D @tailwindcss/typography"})]}),"\n",(0,s.jsxs)(n.li,{children:["Install ",(0,s.jsx)(n.a,{href:"https://trunkrs.dev/",children:"Trunk"}),". Required to compile the webui to web\nassembly"]}),"\n",(0,s.jsxs)(n.li,{children:["Build the entire project with ",(0,s.jsx)(n.code,{children:"just build"})," or build only the server with\n",(0,s.jsx)(n.code,{children:"just server"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"server-interaction",children:"Server Interaction"}),"\n",(0,s.jsx)(n.p,{children:"Download and import the Insomnia config from the repository to interact with the\nserver."})]})}function a(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},2172:(e,n,i)=>{i.d(n,{I:()=>l,M:()=>d});var s=i(1504);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);