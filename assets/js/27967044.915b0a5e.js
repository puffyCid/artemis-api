"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[7895],{562:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var n=t(5893),i=t(1151);const o={description:"Information about the OS"},r="System APIs",d={id:"API/Helper/system",title:"System APIs",description:"Information about the OS",source:"@site/docs/API/Helper/system.md",sourceDirName:"API/Helper",slug:"/API/Helper/system",permalink:"/artemis-api/docs/API/Helper/system",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Helper/system.md",tags:[],version:"current",frontMatter:{description:"Information about the OS"},sidebar:"artemisAPI",previous:{title:"Nom APIs",permalink:"/artemis-api/docs/API/Helper/nom"},next:{title:"Time APIs",permalink:"/artemis-api/docs/API/Helper/time"}},c={},l=[{value:"cpus() -&gt; <code>Cpus[]</code>",id:"cpus---cpus",level:3},{value:"disks() -&gt; <code>Disks[]</code>",id:"disks---disks",level:3},{value:"memory() -&gt; <code>Memory</code>",id:"memory---memory",level:3},{value:"processListing(md5, sha1, sha256, binary) -&gt; <code>LinuxProcessInfo[] | WindowsProcessInfo[] | MacosProcessInfo[]</code>",id:"processlistingmd5-sha1-sha256-binary---linuxprocessinfo--windowsprocessinfo--macosprocessinfo",level:3},{value:"outputResults(data, data_name, output) -&gt; <code>boolean</code>",id:"outputresultsdata-data_name-output---boolean",level:3},{value:"getSysteminfo() -&gt; <code>SystemInfo</code>",id:"getsysteminfo---systeminfo",level:3},{value:"uptime() -&gt; <code>number</code>",id:"uptime---number",level:3},{value:"hostname() -&gt; <code>string</code>",id:"hostname---string",level:3},{value:"osVersion() -&gt; <code>string</code>",id:"osversion---string",level:3},{value:"kernelVersion() -&gt; <code>string</code>",id:"kernelversion---string",level:3},{value:"platform() -&gt; <code>string</code>",id:"platform---string",level:3}];function a(e){const s={code:"code",h1:"h1",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"system-apis",children:"System APIs"}),"\n",(0,n.jsx)(s.p,{children:"These functions help get metadata about the OS"}),"\n",(0,n.jsxs)(s.h3,{id:"cpus---cpus",children:["cpus() -> ",(0,n.jsx)(s.code,{children:"Cpus[]"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to get system CPU information"}),"\n",(0,n.jsxs)(s.h3,{id:"disks---disks",children:["disks() -> ",(0,n.jsx)(s.code,{children:"Disks[]"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to get disk information on the system"}),"\n",(0,n.jsxs)(s.h3,{id:"memory---memory",children:["memory() -> ",(0,n.jsx)(s.code,{children:"Memory"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to get memory information"}),"\n",(0,n.jsxs)(s.h3,{id:"processlistingmd5-sha1-sha256-binary---linuxprocessinfo--windowsprocessinfo--macosprocessinfo",children:["processListing(md5, sha1, sha256, binary) -> ",(0,n.jsx)(s.code,{children:"LinuxProcessInfo[] | WindowsProcessInfo[] | MacosProcessInfo[]"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to pull a process listing from the system"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Param"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"md5"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"boolean"})}),(0,n.jsx)(s.td,{children:"Enable MD5 hashing. Optional. Default is false"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"sha1"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"boolean"})}),(0,n.jsx)(s.td,{children:"Enable SHA1 hashing. Optional. Default is false"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"sha256"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"boolean"})}),(0,n.jsx)(s.td,{children:"Enable SHA256 hashing. Optional. Default is false"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"binary"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"boolean"})}),(0,n.jsx)(s.td,{children:"Process process binary data. Optional. Default is false"})]})]})]}),"\n",(0,n.jsxs)(s.h3,{id:"outputresultsdata-data_name-output---boolean",children:["outputResults(data, data_name, output) -> ",(0,n.jsx)(s.code,{children:"boolean"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to pass data to artemis to save. Returns true on success and false on\nfailure."}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Param"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"data"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsx)(s.td,{children:"A JSON string of data"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"data_name"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsxs)(s.td,{children:["Name of the type of data. Ex: ",(0,n.jsx)(s.code,{children:"processes"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"output"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"Output"})}),(0,n.jsx)(s.td,{children:"An Output object telling artemis how to output the data"})]})]})]}),"\n",(0,n.jsxs)(s.h3,{id:"getsysteminfo---systeminfo",children:["getSysteminfo() -> ",(0,n.jsx)(s.code,{children:"SystemInfo"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to pull systeminfo data"}),"\n",(0,n.jsxs)(s.h3,{id:"uptime---number",children:["uptime() -> ",(0,n.jsx)(s.code,{children:"number"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to get system uptime in seconds"}),"\n",(0,n.jsxs)(s.h3,{id:"hostname---string",children:["hostname() -> ",(0,n.jsx)(s.code,{children:"string"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to get hostname of system"}),"\n",(0,n.jsxs)(s.h3,{id:"osversion---string",children:["osVersion() -> ",(0,n.jsx)(s.code,{children:"string"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to get OS version"}),"\n",(0,n.jsxs)(s.h3,{id:"kernelversion---string",children:["kernelVersion() -> ",(0,n.jsx)(s.code,{children:"string"})]}),"\n",(0,n.jsx)(s.p,{children:"Function to get kernel version information"}),"\n",(0,n.jsxs)(s.h3,{id:"platform---string",children:["platform() -> ",(0,n.jsx)(s.code,{children:"string"})]}),"\n",(0,n.jsxs)(s.p,{children:["Function to get platform type of the system. Ex: ",(0,n.jsx)(s.code,{children:"Darwin"})]})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>d,a:()=>r});var n=t(7294);const i={},o=n.createContext(i);function r(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);