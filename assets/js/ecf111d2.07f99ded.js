"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[7441],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,g=p["".concat(l,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1763:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={description:"Primary source of logs on macOS",keywords:["macOS","logs","binary"]},o="UnifiedLogs",s={unversionedId:"Artifacts/macOS Artifacts/unifiedlogs",id:"Artifacts/macOS Artifacts/unifiedlogs",title:"UnifiedLogs",description:"Primary source of logs on macOS",source:"@site/docs/Artifacts/macOS Artifacts/unifiedlogs.md",sourceDirName:"Artifacts/macOS Artifacts",slug:"/Artifacts/macOS Artifacts/unifiedlogs",permalink:"/artemis-api/docs/Artifacts/macOS Artifacts/unifiedlogs",draft:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/macOS Artifacts/unifiedlogs.md",tags:[],version:"current",frontMatter:{description:"Primary source of logs on macOS",keywords:["macOS","logs","binary"]},sidebar:"artemisArtifacts",previous:{title:"SystemInfo",permalink:"/artemis-api/docs/Artifacts/macOS Artifacts/systeminfo"},next:{title:"Users",permalink:"/artemis-api/docs/Artifacts/macOS Artifacts/users"}},l={},c=[],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"unifiedlogs"},"UnifiedLogs"),(0,i.kt)("p",null,"macOS ",(0,i.kt)("inlineCode",{parentName:"p"},"unifiedlogs")," are the primary files associated with logging system\nactivity. They are stored in a binary format at ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/db/diagnostics/"),"."),(0,i.kt)("p",null,"Other Parsers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ydkhatri/UnifiedLogReader"},"UnifiedLogReader")," (Only partial\nsupport)")),(0,i.kt)("p",null,"References:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://eclecticlight.co/2018/03/19/macos-unified-log-1-why-what-and-how/"},"Unified Logging")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.mandiant.com/resources/blog/reviewing-macos-unified-logs"},"Reviewing logs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.crowdstrike.com/blog/how-to-leverage-apple-unified-log-for-incident-response/"},"Reviewing more logs"))),(0,i.kt)("h1",{id:"toml-collection"},"TOML Collection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'system = "macos"\n\n[output]\nname = "unifiedlogs_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "abdc"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "unifiedlogs"\n[artifacts.unifiedlogs]\nsources = ["Special"]\n')),(0,i.kt)("h1",{id:"collection-options"},"Collection Options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sources")," List of directories that should be included when parsing the\n",(0,i.kt)("inlineCode",{parentName:"li"},"unifiedlogs"),". These directories are found at ",(0,i.kt)("inlineCode",{parentName:"li"},"/var/db/diagnostics/"),". Only the\nfollowing directories contain logs:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Persist"),(0,i.kt)("li",{parentName:"ul"},"Special"),(0,i.kt)("li",{parentName:"ul"},"Signpost"),(0,i.kt)("li",{parentName:"ul"},"HighVolume")))),(0,i.kt)("p",null,"To parse all logs you would use\n",(0,i.kt)("inlineCode",{parentName:"p"},'sources = ["Special", "Persist", "Signpost", "HighVolume"]')),(0,i.kt)("h1",{id:"output-structure"},"Output Structure"),(0,i.kt)("p",null,"An array of ",(0,i.kt)("inlineCode",{parentName:"p"},"UnifiedLog")," entries"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface UnifiedLog {\n  /**Subsystem used by the log entry */\n  subsystem: string;\n  /**Library associated with the log entry */\n  library: string;\n  /**Log entry category */\n  category: string;\n  /**Process ID associated with log entry */\n  pid: number;\n  /**Effective user ID associated with log entry */\n  euid: number;\n  /**Thread ID associated with log entry */\n  thread_id: number;\n  /**Activity ID associated with log entry */\n  activity_id: number;\n  /**UUID of library associated with the log entry */\n  library_uuid: string;\n  /**UNIXEPOCH timestamp of log entry in nanoseconds */\n  time: number;\n  /**Log entry event type */\n  event_type: string;\n  /**Log entry log type */\n  log_type: string;\n  /**Process associated with log entry */\n  process: string;\n  /**UUID of process associated with log entry */\n  process_uuid: string;\n  /**Raw string message  associated with log entry*/\n  raw_message: string;\n  /**Boot UUID associated with log entry */\n  boot_uuid: string;\n  /**Timezone associated with log entry */\n  timezone_name: string;\n  /**Strings associated with the log entry */\n  mesage_entries: Record<string, string | number>;\n  /**\n   * Resolved message entry associated log entry.\n   * Merge of `raw_message` and `message_entries`\n   */\n  message: string;\n}\n")))}m.isMDXComponent=!0}}]);