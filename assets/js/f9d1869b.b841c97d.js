"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[6327],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(n),f=i,u=d["".concat(c,".").concat(f)]||d[f]||m[f]||r;return n?a.createElement(u,s(s({ref:t},p),{},{components:n})):a.createElement(u,s({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[d]="string"==typeof e?e:i,s[1]=o;for(var l=2;l<r;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7099:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=n(7462),i=(n(7294),n(3905));const r={description:"Contains shims used by applications",keywords:["windows","binary","persistence"]},s="ShimDB",o={unversionedId:"Artifacts/Windows Artfacts/shimdb",id:"Artifacts/Windows Artfacts/shimdb",title:"ShimDB",description:"Contains shims used by applications",source:"@site/docs/Artifacts/Windows Artfacts/shimdb.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/shimdb",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/shimdb",draft:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/shimdb.md",tags:[],version:"current",frontMatter:{description:"Contains shims used by applications",keywords:["windows","binary","persistence"]},sidebar:"artemisArtifacts",previous:{title:"Shimcache",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/shimcache"},next:{title:"Shortcuts",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/shortcuts"}},c={},l=[],p={toc:l},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"shimdb"},"ShimDB"),(0,i.kt)("p",null,"Windows Shimdatabase (",(0,i.kt)("inlineCode",{parentName:"p"},"ShimDB"),") can be used by Windows applications to provided\ncompatability between Windows versions.\\\nIt does this via ",(0,i.kt)("inlineCode",{parentName:"p"},"shims")," that are inserted into the application that modifies\nfunction calls. Malicious custom shims can be created as a form of persistence."),(0,i.kt)("p",null,"OtherParsers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://ericzimmerman.github.io/"},"SDBExplorer"))),(0,i.kt)("p",null,"References:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.geoffchappell.com/studies/windows/win32/apphelp/sdb/index.htm"},"ShimDB")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.mandiant.com/resources/blog/fin7-shim-databases-persistence"},"ShimDB Persistence"))),(0,i.kt)("h1",{id:"toml-collection"},"TOML Collection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'system = "windows"\n\n[output]\nname = "sdb_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "6c51b123-1522-4572-9f2a-0bd5abd81b82"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "shimdb"\n[artifacts.shimdb]\n# Optional\n# alt_drive = \'D\'\n')),(0,i.kt)("h1",{id:"collection-options"},"Collection Options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"alt_drive")," Expects a single character value. Will use an alternative drive\nletter when parsing ",(0,i.kt)("inlineCode",{parentName:"li"},"ShimDB"),". This configuration is ",(0,i.kt)("strong",{parentName:"li"},"optional"),". By default\nartemis will use the ",(0,i.kt)("inlineCode",{parentName:"li"},"%systemdrive%")," value (typically ",(0,i.kt)("inlineCode",{parentName:"li"},"C"),")")),(0,i.kt)("h1",{id:"output-structure"},"Output Structure"),(0,i.kt)("p",null,"An array of ",(0,i.kt)("inlineCode",{parentName:"p"},"ShimDB")," entries"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'export interface Shimdb {\n  /**Array of `TAGS` associated with the index tag*/\n  indexes: TagData[];\n  /**Data associated with the Shimdb */\n  db_data: DatabaseData;\n  /**Path to parsed sdb file */\n  sdb_path: string;\n}\n\n/**\n * SDB files are composed of `TAGS`. There are multiple types of `TAGS`\n * `data` have `TAGS` that can be represented via a JSON object\n * `list_data` have `TAGS` that can be rerpesented as an array of JSON objects\n *\n * Example:\n * ```\n * "data": {\n *    "TAG_FIX_ID": "4aeea7ee-44f1-4085-abc2-6070eb2b6618",\n *    "TAG_RUNTIME_PLATFORM": "37",\n *    "TAG_NAME": "256Color"\n * },\n * "list_data": [\n *   {\n *      "TAG_NAME": "Force8BitColor",\n *      "TAG_SHIM_TAGID": "169608"\n *    },\n *    {\n *      "TAG_SHIM_TAGID": "163700",\n *      "TAG_NAME": "DisableThemes"\n *    }\n * ]\n * ```\n *\n * See https://www.geoffchappell.com/studies/windows/win32/apphelp/sdb/index.htm for complete list of `TAGS`\n */\nexport interface TagData {\n  /**TAGs represented as a JSON object */\n  data: Record<string, string>;\n  /**Array of TAGS represented as a JSON objects */\n  list_data: Record<string, string>[];\n}\n\n/**\n * Metadata related to the SDB file\n */\nexport interface DatabaseData {\n  /**SDB version info */\n  sdb_version: string;\n  /**Compile timestamp of the SDB file in UNIXEPOCH seconds */\n  compile_time: number;\n  /**Compiler version info */\n  compiler_version: string;\n  /**Name of SDB */\n  name: string;\n  /**Platform ID */\n  platform: number;\n  /**ID associated with SDB */\n  database_id: string;\n  /**\n   * The SDB file may contain additional metadata information\n   * May include additional `TAGS`\n   */\n  additional_metdata: Record<string, string>;\n  /**Array of `TAGS` associated with the SDB file */\n  list_data: TagData[];\n}\n')))}m.isMDXComponent=!0}}]);