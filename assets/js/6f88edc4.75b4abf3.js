"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[2977],{4354:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var s=r(5893),n=r(1151);const o={description:"Connecting to the World Wide Web!"},i="Networking APIs",d={id:"API/Helper/network",title:"Networking APIs",description:"Connecting to the World Wide Web!",source:"@site/docs/API/Helper/network.md",sourceDirName:"API/Helper",slug:"/API/Helper/network",permalink:"/artemis-api/docs/API/Helper/network",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Helper/network.md",tags:[],version:"current",frontMatter:{description:"Connecting to the World Wide Web!"},sidebar:"artemisAPI",previous:{title:"Filesystem APIs",permalink:"/artemis-api/docs/API/Helper/filesystem"},next:{title:"Nom APIs",permalink:"/artemis-api/docs/API/Helper/nom"}},c={},l=[{value:"request(url, protocol, body, headers) -&gt; <code>ClientResponse | Error</code>",id:"requesturl-protocol-body-headers---clientresponse--error",level:2}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"networking-apis",children:"Networking APIs"}),"\n",(0,s.jsxs)(t.p,{children:["The artemis API allows a user to make HTTP network requests using the\n",(0,s.jsx)(t.a,{href:"https://docs.rs/reqwest/latest/reqwest/index.html",children:"reqwest"})," crate. It can be\nused to interact with external services or services that expose an API."]}),"\n",(0,s.jsxs)(t.h2,{id:"requesturl-protocol-body-headers---clientresponse--error",children:["request(url, protocol, body, headers) -> ",(0,s.jsx)(t.code,{children:"ClientResponse | Error"})]}),"\n",(0,s.jsxs)(t.p,{children:["Make a very simple GET or POST request to the provided URL. You may specify an\noptional body or headers. By default headers will use\n",(0,s.jsx)(t.code,{children:"Content-Type: application/json"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["The body must be in raw bytes if provided. This function is ",(0,s.jsx)(t.code,{children:"async"})]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Param"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"url"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsx)(t.td,{children:"URL to target"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"protocol"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Protocol"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"Protocol"})," to use. Currently only GET or POST"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"body"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ArrayBuffer"})}),(0,s.jsx)(t.td,{children:"Optional body to send with request"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"headers"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Record<string, string>"})}),(0,s.jsxs)(t.td,{children:["Optional headers to use. Default is ",(0,s.jsx)(t.code,{children:"Content-Type: application/json"})]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>d,a:()=>i});var s=r(7294);const n={},o=s.createContext(n);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);