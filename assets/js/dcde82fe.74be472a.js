"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[868],{9104:(n,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=o(7624),e=o(2172);const s={description:"Linux logon info",keywords:["linux","binary"]},r="Logons",l={id:"Artifacts/Linux Artifacts/logons",title:"Logons",description:"Linux logon info",source:"@site/docs/Artifacts/Linux Artifacts/logons.md",sourceDirName:"Artifacts/Linux Artifacts",slug:"/Artifacts/Linux Artifacts/logons",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/logons",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Linux Artifacts/logons.md",tags:[],version:"current",lastUpdatedBy:"puffyCid",lastUpdatedAt:1718419793e3,frontMatter:{description:"Linux logon info",keywords:["linux","binary"]},sidebar:"artemisArtifacts",previous:{title:"Journals",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/journals"},next:{title:"Processes",permalink:"/artemis-api/docs/Artifacts/Linux Artifacts/processes"}},a={},c=[];function d(n){const t={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,e.M)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"logons",children:"Logons"}),"\n",(0,i.jsxs)(t.p,{children:["Linux stores ",(0,i.jsx)(t.code,{children:"Logon"})," information in several different files depending on the\ndistro and software installed. Typically the following files contain logon\ninformation on Linux:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"wtmp - Historical logons"}),"\n",(0,i.jsx)(t.li,{children:"btmp - Failed logons"}),"\n",(0,i.jsx)(t.li,{children:"utmp - Users currently logged on"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["In addition, ",(0,i.jsx)(t.a,{href:"/artemis-api/docs/Artifacts/Linux%20Artifacts/journals",children:"Journal"})," files may also contain logon information\nCurrently artemis supports all three (3) files above when obtaining Logon\ninformation. When collecting Logon information artemis will only parse: wtmp,\nutmp, and btmp files."]}),"\n",(0,i.jsxs)(t.p,{children:["If you want to check for logons in ",(0,i.jsx)(t.code,{children:"Journal"})," files, you can try to apply a\n",(0,i.jsx)(t.a,{href:"/artemis-api/docs/Intro/Scripting/filterscripts",children:"filter"})," to the ",(0,i.jsx)(t.a,{href:"/artemis-api/docs/Artifacts/Linux%20Artifacts/journals",children:"Journal"}),"\nartifact"]}),"\n",(0,i.jsx)(t.p,{children:"Other Parsers:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"N/A"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"References:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/libyal/dtformats/blob/main/documentation/Utmp%20login%20records%20format.asciidoc",children:"libyal"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://man7.org/linux/man-pages/man5/utmp.5.html",children:"utmp"})}),"\n"]}),"\n",(0,i.jsx)(t.h1,{id:"toml-collection",children:"TOML Collection"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'system = "linux"\n\n[output]\nname = "logon_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "abdc"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "logon"\n[artifacts.logons]\n# Optional\n# alt_file = ""\n'})}),"\n",(0,i.jsx)(t.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"alt_file"})," An alternative path to a wtmp, utmp, or btmp file. This\nconfiguration is ",(0,i.jsx)(t.strong,{children:"optional"})]}),"\n"]}),"\n",(0,i.jsx)(t.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,i.jsxs)(t.p,{children:["An array of ",(0,i.jsx)(t.code,{children:"Logon"})," entries"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"export interface Logon {\n  /**Logon type for logon entry */\n  logon_type: string;\n  /**Process ID */\n  pid: number;\n  /** Terminal info */\n  terminal: string;\n  /**Terminal ID for logon entry */\n  terminal_id: number;\n  /**Username for logon */\n  username: string;\n  /**Hostname for logon source */\n  hostname: string;\n  /**Termination status for logon entry */\n  termination_status: number;\n  /**Exit status logon entry */\n  exit_status: number;\n  /**Session for logon entry */\n  session: number;\n  /**Timestamp for logon */\n  timestamp: string;\n  /**Microseconds for logon */\n  microseconds: number;\n  /**Source IP for logon entry */\n  ip: string;\n  /**Status of logon entry: `Success` or `Failed` */\n  status: string;\n}\n"})})]})}function u(n={}){const{wrapper:t}={...(0,e.M)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},2172:(n,t,o)=>{o.d(t,{I:()=>l,M:()=>r});var i=o(1504);const e={},s=i.createContext(e);function r(n){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function l(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(e):n.components||e:r(n.components),i.createElement(s.Provider,{value:t},n.children)}}}]);