"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[3368],{6744:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=n(7624),r=n(2172);const o={description:"Metadata about recently opened files",keywords:["windows","binary"]},s="Shortcuts",a={id:"Artifacts/Windows Artfacts/shortcuts",title:"Shortcuts",description:"Metadata about recently opened files",source:"@site/docs/Artifacts/Windows Artfacts/shortcuts.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/shortcuts",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/shortcuts",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/shortcuts.md",tags:[],version:"current",lastUpdatedBy:"puffyCid",lastUpdatedAt:1717993766e3,frontMatter:{description:"Metadata about recently opened files",keywords:["windows","binary"]},sidebar:"artemisArtifacts",previous:{title:"ShimDB",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/shimdb"},next:{title:"SRUM",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/srum"}},c={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"shortcuts",children:"Shortcuts"}),"\n",(0,i.jsxs)(t.p,{children:["Windows ",(0,i.jsx)(t.code,{children:"Shotcut"})," files (",(0,i.jsx)(t.code,{children:".lnk"}),") are files that point to another file. They\noften contain a large amount of metadata related to the target file. ",(0,i.jsx)(t.code,{children:"Shortcut"}),"\nfiles can be used to distribute malware and can also provide evidence of file\ninteraction. The directory at\n",(0,i.jsx)(t.code,{children:"C:\\Users\\%\\AppData\\Roaming\\Microsoft\\Windows\\Recent"})," contains multiple\n",(0,i.jsx)(t.code,{children:"Shortcuts"})," that point to files recently opened by the user."]}),"\n",(0,i.jsx)(t.p,{children:"Other Parsers:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://ericzimmerman.github.io/",children:"LECmd"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://docs.velociraptor.app/artifact_references/pages/windows.forensics.lnk/",children:"Velociraptor"})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"References:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/libyal/liblnk/blob/main/documentation/Windows%20Shortcut%20File%20(LNK)%20format.asciidoc",children:"Libyal"})}),"\n"]}),"\n",(0,i.jsx)(t.h1,{id:"toml-collection",children:"TOML Collection"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'system = "windows"\n\n[output]\nname = "shortcuts_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "6c51b123-1522-4572-9f2a-0bd5abd81b82"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "shortcuts"\n[artifacts.shortcuts]\npath = "C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup"\n'})}),"\n",(0,i.jsx)(t.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"path"})," Target path where artemis should parse ",(0,i.jsx)(t.code,{children:"Shortcut"})," files. This\nconfiguration is ",(0,i.jsx)(t.strong,{children:"required"})]}),"\n"]}),"\n",(0,i.jsx)(t.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.code,{children:"Shortcut"})," object structure"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"export interface Shortcut {\n  /**Path to `shortcut (lnk)` file */\n  source_path: string;\n  /**Flags that specify what data structures are in the `lnk` file */\n  data_flags: string[];\n  /**File attributes of target file */\n  attribute_flags: string[];\n  /**Standard Information created timestamp of target file */\n  created: number;\n  /**Standard Information accessed timestamp of target file */\n  accessed: number;\n  /**Standard Information modified timestamp of target file */\n  modified: number;\n  /**Size in bytes of target file */\n  file_size: number;\n  /**Flag associated where target file is located. On volume or network share */\n  location_flags: string;\n  /**Path to target file */\n  path: string;\n  /**Serial associated with volume if target file is on drive */\n  drive_serial: string;\n  /**Drive type associated with volume if target file is on drive */\n  drive_type: string;\n  /**Name of volume if target file is on drive */\n  volume_label: string;\n  /**Network type if target file is on network share */\n  network_provider: string;\n  /**Network share name if target file is on network share */\n  network_share_name: string;\n  /**Network share device name if target file is on network share */\n  network_device_name: string;\n  /**Description of shortcut (lnk) file */\n  description: string;\n  /**Relative path to target file */\n  relative_path: string;\n  /**Directory of target file */\n  working_directory: string;\n  /**Command args associated with target file */\n  command_line_args: string;\n  /**Icon path associated with shortcut (lnk) file */\n  icon_location: string;\n  /**Hostname of target file */\n  hostname: string;\n  /**\n   * Digital Record Object Identification (DROID) used to track lnk file\n   */\n  droid_volume_id: string;\n  /**\n   * Digital Record Object Identification (DROID) used to track lnk file\n   */\n  droid_file_id: string;\n  /**\n   * Digital Record Object Identification (DROID) used to track lnk file\n   */\n  birth_droid_volume_id: string;\n  /**\n   * Digital Record Object Identification (DROID) used to track lnk file\n   */\n  birth_droid_file_id: string;\n  /**Shellitems associated with shortcut (lnk) file */\n  shellitems: ShellItems[];\n  /**Array of property stores */\n  properties: Record<string, string | number | boolean | null>[];\n  /**Environmental variable data in shortcut */\n  environment_variable: string;\n  /**Console metadata in shortcut */\n  console: Console[];\n  /**Windows Codepage in shortcut */\n  codepage: number;\n  /**Special folder ID in shortcut */\n  special_folder_id: number;\n  /**macOS Darwin ID in shortcut */\n  darwin_id: string;\n  /**Shim layer entry in shortcut */\n  shim_layer: string;\n  /**Known folder GUID in shortcut */\n  known_folder: string;\n}\n\n/**\n * Console metadata embeded in Shortcut file\n */\ninterface Console {\n  /**Colors for Console */\n  color_flags: string[];\n  /**Additional colors for Console */\n  pop_fill_attributes: string[];\n  /**Console width buffer size */\n  screen_width_buffer_size: number;\n  /**Console height buffer size */\n  screen_height_buffer_size: number;\n  /**Console window width */\n  window_width: number;\n  /**Console window height */\n  window_height: number;\n  /**Console X coordinate */\n  window_x_coordinate: number;\n  /**Console Y coordinate */\n  window_y_coordinate: number;\n  /**Console font size */\n  font_size: number;\n  /**Console font family */\n  font_family: string;\n  /**Conesole font weight */\n  font_weight: string;\n  /**Console font name */\n  face_name: string;\n  /**Console cursor size */\n  cursor_size: string;\n  /**Is full screen set (boolean) */\n  full_screen: number;\n  /**Insert mode */\n  insert_mode: number;\n  /**Automatic position set (boolean) */\n  automatic_position: number;\n  /**Console history buffer size */\n  history_buffer_size: number;\n  /**Console number of bufffers */\n  number_history_buffers: number;\n  /**Duplicates allowed in history */\n  duplicates_allowed_history: number;\n  /**Base64 encoded color table. */\n  color_table: string;\n}\n"})})]})}function f(e={}){const{wrapper:t}={...(0,r.M)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},2172:(e,t,n)=>{n.d(t,{I:()=>a,M:()=>s});var i=n(1504);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);