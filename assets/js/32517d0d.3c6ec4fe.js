"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[5751],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},34394:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Contributing/building","title":"Prerequisites","description":"Automated Setup","source":"@site/docs/Contributing/building.md","sourceDirName":"Contributing","slug":"/Contributing/building","permalink":"/artemis/docs/Contributing/building","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Contributing/building.md","tags":[],"version":"current","lastUpdatedBy":"puffycid","lastUpdatedAt":1748156846000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"artemisContributing","next":{"title":"Getting Started","permalink":"/artemis/docs/Contributing/overview"}}');var i=t(74848),r=t(28453);const o={sidebar_position:1},l="Prerequisites",a={},d=[{value:"Automated Setup",id:"automated-setup",level:2},{value:"Building",id:"building",level:2},{value:"Building for estoric platforms",id:"building-for-estoric-platforms",level:2}];function u(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"prerequisites",children:"Prerequisites"})}),"\n",(0,i.jsx)(n.h2,{id:"automated-setup",children:"Automated Setup"}),"\n",(0,i.jsx)(n.p,{children:"If you would like to build and develop Artemis yourself you will need a few\nrequired applications:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Artemis is written in Rust. So you will need to download and install the\n",(0,i.jsx)(n.a,{href:"https://www.rust-lang.org/",children:"Rust"})," programming language"]}),"\n",(0,i.jsx)(n.li,{children:"Git"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://rust-analyzer.github.io/",children:"Rust analyzer"})}),"\n",(0,i.jsxs)(n.li,{children:["An IDE or text editor. ",(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"VSCode"})," or\n",(0,i.jsx)(n.a,{href:"https://vscodium.com/",children:"VSCodium"})," are great choices."]}),"\n",(0,i.jsxs)(n.li,{children:["The command runner ",(0,i.jsx)(n.a,{href:"https://github.com/casey/just",children:"Just"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Windows users will need to install\n",(0,i.jsx)(n.a,{href:"https://community.chocolatey.org/",children:"Chocolatey"}),". In addition, you will need to\ninstall the MSVC version of ",(0,i.jsx)(n.a,{href:"https://www.rust-lang.org/",children:"Rust"})," macOS users will\nneed to install ",(0,i.jsx)(n.a,{href:"https://brew.sh/",children:"Homebrew"})]}),"\n",(0,i.jsx)(n.p,{children:"You can use Just to automate most of the setup process."}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["Ubuntu users can run: ",(0,i.jsx)(n.code,{children:"just setup-ubuntu"}),(0,i.jsx)(n.br,{}),"\n","Fedora users can run ",(0,i.jsx)(n.code,{children:"just setup-fedora"}),(0,i.jsx)(n.br,{}),"\n","Windows users can run ",(0,i.jsx)(n.code,{children:"just setup-windows"})," (after you have installed Chocolatey\nand Rust)",(0,i.jsx)(n.br,{}),"\n","macOS users can run ",(0,i.jsx)(n.code,{children:"just setup-macos"})," (after you have installed Homebrew)"]}),(0,i.jsxs)(n.p,{children:["Windows users will need to add extra arguments to the just command:",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"just --shell pwsh.exe --shell-arg -c"})]}),(0,i.jsxs)(n.p,{children:["On Windows if you get an error like:",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"error: Recipe _wasm could not be run because just could not find the shell: program not found"})]}),(0,i.jsxs)(n.p,{children:["it means you forgot provide: ",(0,i.jsx)(n.code,{children:"just --shell pwsh.exe  --shell-arg -c"})]})]}),"\n",(0,i.jsx)(n.p,{children:"If you would like to install the build dependencies manaully, review the Just\nfiles .setup folder in the artemis repo for your platform."}),"\n",(0,i.jsx)(n.p,{children:"Artemis has been developed on:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"macOS 12 (Monterey) and higher"}),"\n",(0,i.jsx)(n.li,{children:"Windows 10 and higher"}),"\n",(0,i.jsx)(n.li,{children:"Linux distros such as Ubuntu, Debian, and Fedora"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"building",children:"Building"}),"\n",(0,i.jsx)(n.p,{children:"Once you have the prerequisites installed you can build artemis."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Clone artemis repo at\n",(0,i.jsx)(n.a,{href:"https://github.com/puffycid/artemis",children:"https://github.com/puffycid/artemis"})]}),"\n",(0,i.jsx)(n.li,{children:"Navigate to the repo"}),"\n",(0,i.jsxs)(n.li,{children:["Run ",(0,i.jsx)(n.code,{children:"just cli"})," or ",(0,i.jsx)(n.code,{children:"just --shell pwsh.exe  --shell-arg -c cli"})," for Windows"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"# Download artemis source code\ngit clone https://github.com/puffycid/artemis\ncd artemis\n\n# Build just the CLI executable\njust cli\n\n# Build just the library\njust core\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Full list of just commands (via ",(0,i.jsx)(n.code,{children:"just --list"}),")"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-just",children:"Available recipes:\n    build                       # Build the entire artemis project.\n    complex                     # Review complexity with scc\n    default                     # Run cargo clippy on artemis project\n    filesystem                  # Test only the FileSystem functions\n    nextest                     # Test the entire artemis project using nextest\n    runtime                     # Test only the JavaScript runtime\n    test                        # Test the entire artemis project\n    timeline                    # Test only the timelining functions\n\n    [artifacts]\n    ese                         # Test only the ESE parsing functions\n    eventlogs                   # Test only the Eventlog parsing functions\n    mft                         # Test only the MFT parsing functions\n    outlook                     # Test only the Outlook parsing functions\n    registry                    # Test only the Registry parsing functions\n    shellitems                  # Test only the ShellItems parsing functions\n    spotlight                   # Test only the Spotlight parsing functions\n    wmi                         # Test only the WMI parsing functions\n\n    [os]\n    linux                       # Test all the Linux artifacts\n    macos                       # Test all the macOS artifacts\n    unix                        # Test all the Unix artifacts\n    windows                     # Test all the Windows artifacts\n\n    [package]\n    deb version                 # Package Artemis into DEB file\n    msi                         # Package Artemis into Windows MSI installer file\n    pkg team_id version profile # Package Artemis into macOS PKG installer file\n    rpm                         # Package Artemis into RPM file\n\n    [setup]\n    setup-fedora                # Setup Artemis development environment for Fedora\n    setup-macos                 # Setup Artemis development environment for macOS\n    setup-ubuntu                # Setup Artemis development environment for Ubuntu\n    setup-windows               # Setup Artemis development environment for Windows\n\n    [workspace]\n    cli                         # Just build the artemis binary\n    core                        # Just build core library\n    slim                        # Just build the artemis binary. But do not enable Yara-X\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"building-for-estoric-platforms",children:"Building for estoric platforms"}),"\n",(0,i.jsxs)(n.p,{children:["Artemis can be compiled for a varierty of platforms using ",(0,i.jsx)(n.a,{href:"https://github.com/cross-rs/cross",children:"cross"}),". Once you have cross setup you can build artemis for:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"FreeBSD"}),"\n",(0,i.jsx)(n.li,{children:"Linux MUSL"}),"\n",(0,i.jsx)(n.li,{children:"Linux RISC-V"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If you want to build for Android or NetBSD you have to disable the yara-x dependency"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"cross build --release --no-default-features"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If you want to build for Windows ARM. You will need a Windows ARM VM and will need to install ",(0,i.jsx)(n.a,{href:"https://learn.arm.com/install-guides/llvm-woa/",children:"LLVM"}),".\nLLVM is required to compile ",(0,i.jsx)(n.a,{href:"https://github.com/Keats/jsonwebtoken",children:"jsonwebtoken"})," which artemis uses to generate JWT when uploading to GCP"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);