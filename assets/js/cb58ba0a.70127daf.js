"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[8341],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(n),m=i,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||a;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[f]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={description:"The native executable format for Windows",keywords:["windows","executable","binary"]},o="Portable Executable",s={unversionedId:"Artifacts/Windows Artfacts/pe",id:"Artifacts/Windows Artfacts/pe",title:"Portable Executable",description:"The native executable format for Windows",source:"@site/docs/Artifacts/Windows Artfacts/pe.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/pe",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/pe",draft:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/pe.md",tags:[],version:"current",frontMatter:{description:"The native executable format for Windows",keywords:["windows","executable","binary"]},sidebar:"artemisArtifacts",previous:{title:"Jumplists",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/jumplists"},next:{title:"Prefetch",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/prefetch"}},l={},c=[],p={toc:c},f="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(f,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"portable-executable"},"Portable Executable"),(0,i.kt)("p",null,"Windows Portable Executable (",(0,i.kt)("inlineCode",{parentName:"p"},"PE"),") is executable format for applications on\nWindows. artemis is able to parse basic metadata from ",(0,i.kt)("inlineCode",{parentName:"p"},"PE")," files using the\n",(0,i.kt)("a",{parentName:"p",href:"https://crates.io/crates/pelite"},"pelite")," crate."),(0,i.kt)("p",null,"Other Parsers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://rada.re/n/"},"radare2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/horsicq/XPEViewer"},"XPEViewer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lief-project.github.io/"},"LIEF"))),(0,i.kt)("p",null,"References:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lief-project.github.io/"},"LIEF")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/libyal/libexe/blob/main/documentation/Executable%20(EXE)%20file%20format.asciidoc"},"libyal"))),(0,i.kt)("h1",{id:"toml-collection"},"TOML Collection"),(0,i.kt)("p",null,"There is no way to collect just ",(0,i.kt)("inlineCode",{parentName:"p"},"PE")," data with artemis instead it is an optional\nfeature for the Windows ",(0,i.kt)("inlineCode",{parentName:"p"},"filelisting"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rawfilelisting"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"processes"),"\nartifacts."),(0,i.kt)("p",null,"However, it is possible to directly parse ",(0,i.kt)("inlineCode",{parentName:"p"},"PE")," files by using JavaScript. See\nthe ",(0,i.kt)("a",{parentName:"p",href:"/artemis-api/docs/Intro/Scripting/scripts"},"scripts")," chapter for examples."),(0,i.kt)("h1",{id:"collection-optaions"},"Collection Optaions"),(0,i.kt)("p",null,"N/A"),(0,i.kt)("h1",{id:"output-structure"},"Output Structure"),(0,i.kt)("p",null,"An object containing ",(0,i.kt)("inlineCode",{parentName:"p"},"PE")," info"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface PeInfo {\n  /**Array of imported DLLs */\n  imports: string[];\n  /**Array of section names */\n  sections: string[];\n  /**Base64 encoded certificate information */\n  cert: string;\n  /**Path to PDB file */\n  pdb: string;\n  /**PE product version */\n  product_version: string;\n  /**PE file version */\n  file_version: string;\n  /**PE product name */\n  product_name: string;\n  /**PE company name */\n  company_name: string;\n  /**PE file description */\n  file_description: string;\n  /**PE internal name */\n  internal_name: string;\n  /**PE copyright */\n  legal_copyright: string;\n  /**PE original filename */\n  original_filename: string;\n  /**PE manifest info */\n  manifest: string;\n  /**Array of base64 icons */\n  icons: string[];\n}\n")))}u.isMDXComponent=!0}}]);