"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[268],{5296:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=t(7624),a=t(2172);const i={description:"Interact with macOS Artifacts"},n="macOS",o={id:"API/Artifacts/macos",title:"macOS",description:"Interact with macOS Artifacts",source:"@site/docs/API/Artifacts/macos.md",sourceDirName:"API/Artifacts",slug:"/API/Artifacts/macos",permalink:"/artemis-api/docs/API/Artifacts/macos",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Artifacts/macos.md",tags:[],version:"current",frontMatter:{description:"Interact with macOS Artifacts"},sidebar:"artemisAPI",previous:{title:"Linux",permalink:"/artemis-api/docs/API/Artifacts/linux"},next:{title:"Unix",permalink:"/artemis-api/docs/API/Artifacts/unix"}},l={},d=[{value:"getUsers(path) -&gt; Users[] | MacosError",id:"getuserspath---users--macoserror",level:3},{value:"getGroup() -&gt; Groups[] | MacosError",id:"getgroup---groups--macoserror",level:3},{value:"parseAlias(data) -&gt; Alias | MacosError",id:"parsealiasdata---alias--macoserror",level:3},{value:"getEmond(path) -&gt; Emond[] | MacosError",id:"getemondpath---emond--macoserror",level:3},{value:"getExecpolicy() -&gt; ExecPolicy[] | MacosError",id:"getexecpolicy---execpolicy--macoserror",level:3},{value:"firewallStatus() -&gt; Firewall | MacosError",id:"firewallstatus---firewall--macoserror",level:3},{value:"getFsevents() -&gt; Fsevents[] | MacosError",id:"getfsevents---fsevents--macoserror",level:3},{value:"getLaunchdDaemons() -&gt; Launchd[] | MacosError",id:"getlaunchddaemons---launchd--macoserror",level:3},{value:"getLaunchdAgents() -&gt; Launchd[] | MacosError",id:"getlaunchdagents---launchd--macoserror",level:3},{value:"getLoginitems(path) -&gt; LoginItems[] | MacosError",id:"getloginitemspath---loginitems--macoserror",level:3},{value:"getMacho(path) -&gt; MachoInfo[] | MacosError",id:"getmachopath---machoinfo--macoserror",level:3},{value:"getPlist(path or Uint8Array) -&gt; Record&lt;string, unknown&gt; | number[] | MacosError",id:"getplistpath-or-uint8array---recordstring-unknown--number--macoserror",level:3},{value:"passwordPolicy() -&gt; PasswordPolicy[] | MacosError",id:"passwordpolicy---passwordpolicy--macoserror",level:3},{value:"getSafariUsersHistory() -&gt; SafariHistory[] | MacosError",id:"getsafariusershistory---safarihistory--macoserror",level:3},{value:"getSafariHistory(path) -&gt; RawSafariHistory[] | MacosError",id:"getsafarihistorypath---rawsafarihistory--macoserror",level:3},{value:"getSafariUsersDownloads() -&gt; SafariDownloads[] | MacosError",id:"getsafariusersdownloads---safaridownloads--macoserror",level:3},{value:"getSafariDownloads(path) -&gt; RawSafariDownloads[] | MacosError",id:"getsafaridownloadspath---rawsafaridownloads--macoserror",level:3},{value:"setupUnifiedLogParser(path) -&gt; Uint8Array | MacosError",id:"setupunifiedlogparserpath---uint8array--macoserror",level:3},{value:"getUnifiedLog(path, meta) -&gt; UnifiedLog[] | MacosError",id:"getunifiedlogpath-meta---unifiedlog--macoserror",level:3},{value:"parseRequirementBlob(data) -&gt; SingleRequirement | MacosError",id:"parserequirementblobdata---singlerequirement--macoserror",level:3},{value:"listApps() -&gt; Applications[] | MacosError",id:"listapps---applications--macoserror",level:3},{value:"scanApps() -&gt; Applications[] | MacosError",id:"scanapps---applications--macoserror",level:3},{value:"dockTiles() -&gt; Applications[] | MacosError",id:"docktiles---applications--macoserror",level:3},{value:"getPackages(glob_path) -&gt; HomebrewReceipt[]",id:"getpackagesglob_path---homebrewreceipt",level:3},{value:"getCasks(glob_path) -&gt; HomebrewFormula[]",id:"getcasksglob_path---homebrewformula",level:3},{value:"getHomebrewInfo() -&gt; HomebrewData",id:"gethomebrewinfo---homebrewdata",level:3},{value:"wifiNetworks() -&gt; Wifi[]",id:"wifinetworks---wifi",level:3},{value:"getSudoLogs() -&gt; UnifiedLog[]",id:"getsudologs---unifiedlog",level:3},{value:"parseBom(path) -&gt; Bom",id:"parsebompath---bom",level:3},{value:"systemExtensions() -&gt; SystemExtension[]",id:"systemextensions---systemextension",level:3},{value:"queryTccDb(path) -&gt; TccValues[] | MacosError",id:"querytccdbpath---tccvalues--macoserror",level:3},{value:"setupSpotlightParser(glob_path) -&gt; StoreMeta | MacosError",id:"setupspotlightparserglob_path---storemeta--macoserror",level:3},{value:"getSpotlight(meta, store_file, offset) -&gt; StoreMeta | MacosError",id:"getspotlightmeta-store_file-offset---storemeta--macoserror",level:3}];function c(e){const r={a:"a",br:"br",code:"code",h1:"h1",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"macos",children:"macOS"}),"\n",(0,s.jsx)(r.p,{children:"These functions can be used to pull data related to macOS artifacts"}),"\n",(0,s.jsx)(r.h3,{id:"getuserspath---users--macoserror",children:"getUsers(path) -> Users[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return all local users on macOS sysem. Can provide an optional alternative path\nto directory containing users. Otherwise will use default path on system\n/var/db/dslocal/nodes/Default/users"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Optional alternative path to users directory"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getgroup---groups--macoserror",children:"getGroup() -> Groups[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return all local groups on macOS sysem. Can provide an optional alternative path\nto directory containing groups. Otherwise will use default path on system\n/var/db/dslocal/nodes/Default/groups"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Optional alternative path to groups directory"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"parsealiasdata---alias--macoserror",children:"parseAlias(data) -> Alias | MacosError"}),"\n",(0,s.jsxs)(r.p,{children:["Parse macOS ",(0,s.jsx)(r.a,{href:"https://en.wikipedia.org/wiki/Alias_(Mac_OS)",children:"alias"})," data. Alias\nfiles are a legacy shortcut format. May be encountered in plist files such as\nthe firewall plist file."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"data"}),(0,s.jsx)(r.td,{children:"Uint8Array"}),(0,s.jsx)(r.td,{children:"Raw alias bytes"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getemondpath---emond--macoserror",children:"getEmond(path) -> Emond[] | MacosError"}),"\n",(0,s.jsxs)(r.p,{children:["Get all ",(0,s.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/macOS%20Artifacts/emond",children:"Emond"})," rules on macOS. FYI\nEmond was removed on Ventura. Can provide an optional alternative path to\ndirectory containing emond rules. Otherwise will parse emond config on system to\ntry to find rules"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{children:"Optional alternative path to emond rules"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getexecpolicy---execpolicy--macoserror",children:"getExecpolicy() -> ExecPolicy[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Parse the ExecPolicy sqlite database on macOS. Can provide an optional\nalternative path to ExecPolicy database. Otherwise will parse default database\non system at /var/db/SystemPolicyConfiguration/ExecPolicy"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{children:"Optional alternative path to ExecPolicy database"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"firewallstatus---firewall--macoserror",children:"firewallStatus() -> Firewall | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return firewall information and status on macOS"}),"\n",(0,s.jsx)(r.h3,{id:"getfsevents---fsevents--macoserror",children:"getFsevents() -> Fsevents[] | MacosError"}),"\n",(0,s.jsxs)(r.p,{children:["Parse macOS ",(0,s.jsx)(r.a,{href:"/artemis-api/docs/Artifacts/macOS%20Artifacts/fsevents",children:"FsEvents"})]}),"\n",(0,s.jsx)(r.h3,{id:"getlaunchddaemons---launchd--macoserror",children:"getLaunchdDaemons() -> Launchd[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return all Launch daemons on macOS"}),"\n",(0,s.jsx)(r.h3,{id:"getlaunchdagents---launchd--macoserror",children:"getLaunchdAgents() -> Launchd[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return all Launch agents on macOS"}),"\n",(0,s.jsx)(r.h3,{id:"getloginitemspath---loginitems--macoserror",children:"getLoginitems(path) -> LoginItems[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return all LoginItems on macOS. Can provide an optional alternative path to a\nLoginItem file (.btm). Otherwise will parse default default locations for\nLoginItems"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{children:"Optional alternative path to LoginItem file"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getmachopath---machoinfo--macoserror",children:"getMacho(path) -> MachoInfo[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Parse a macho file and return metadata about the binary."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Path to macho binary"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getplistpath-or-uint8array---recordstring-unknown--number--macoserror",children:"getPlist(path or Uint8Array) -> Record<string, unknown> | number[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Parse a plist file. Supports parsing a provide plist file path or the raw bytes\nof plist data. Sometimes a plist file may contain another base64 encoded plist.\nThis function can parse the raw plist bytes."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path or Uint8Array"}),(0,s.jsx)(r.td,{children:"string or Uint8Array"}),(0,s.jsx)(r.td,{children:"Path to plist file or raw plist bytes"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"passwordpolicy---passwordpolicy--macoserror",children:"passwordPolicy() -> PasswordPolicy[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Get password policies on macOS. Will parse plist file at\n/var/db/dslocal/nodes/Default/config/shadowhash.plist"}),"\n",(0,s.jsx)(r.h3,{id:"getsafariusershistory---safarihistory--macoserror",children:"getSafariUsersHistory() -> SafariHistory[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return Safari history for all users"}),"\n",(0,s.jsx)(r.h3,{id:"getsafarihistorypath---rawsafarihistory--macoserror",children:"getSafariHistory(path) -> RawSafariHistory[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Parse Safari history from provided History.db sqlite file. Supports locked\nfiles."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Path to History.db file"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getsafariusersdownloads---safaridownloads--macoserror",children:"getSafariUsersDownloads() -> SafariDownloads[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return Safari downloads for all users"}),"\n",(0,s.jsx)(r.h3,{id:"getsafaridownloadspath---rawsafaridownloads--macoserror",children:"getSafariDownloads(path) -> RawSafariDownloads[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Parse Safari history from provided Downloads.plist file."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Path to Downloads.plist file"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"setupunifiedlogparserpath---uint8array--macoserror",children:"setupUnifiedLogParser(path) -> Uint8Array | MacosError"}),"\n",(0,s.jsxs)(r.p,{children:["Collect and setup the required data needed to parse the macOS Unified Log from\nthe runtime.",(0,s.jsx)(r.br,{}),"\n","This function must be called before a user can start parsing the Unified\nLogfiles using the JS API."]}),"\n",(0,s.jsx)(r.p,{children:"You may provide an alternative path to the directory containing the Unified Log\nfiles. This directory must be formatted like a logarchive collection."}),"\n",(0,s.jsx)(r.p,{children:"If a path is not provided, then artemis will parse the default log locations on\nmacOS"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsxs)(r.td,{children:["Optional path to an Unified Log directory. This directory ",(0,s.jsx)(r.strong,{children:"must"})," be formatted like a logarchive collection"]})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getunifiedlogpath-meta---unifiedlog--macoserror",children:"getUnifiedLog(path, meta) -> UnifiedLog[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Parse a single UnifiedLog file (.tracev3) on macOS. Typically found at:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"/private/var/db/diagnostics/Persist"}),"\n",(0,s.jsx)(r.li,{children:"/private/var/db/diagnostics/Signpost"}),"\n",(0,s.jsx)(r.li,{children:"/private/var/db/diagnostics/HighVolume"}),"\n",(0,s.jsx)(r.li,{children:"/private/var/db/diagnostics/Special"}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["You must call ",(0,s.jsx)(r.code,{children:"setupUnifiedLogParser"})," prior to parsing the .tracev3 files."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Path to .tracev3 file"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"meta"}),(0,s.jsx)(r.td,{children:"Uint8Array"}),(0,s.jsx)(r.td,{children:"Raw bytes associated with UnifiedLog"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"parserequirementblobdata---singlerequirement--macoserror",children:"parseRequirementBlob(data) -> SingleRequirement | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Parse the Requirement Blob from raw codesigning bytes. This part of Apple's\nCodeSigning framework. This data can be found in macho binaries and also plist\nfiles."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"data"}),(0,s.jsx)(r.td,{children:"Uint8Array"}),(0,s.jsx)(r.td,{children:"Raw bytes associated with requirement blob"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"listapps---applications--macoserror",children:"listApps() -> Applications[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Return a simple Application listing. Searches user installed Apps, System Apps,\ndefault Homebrew paths:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"/usr/local/Cellar"}),"\n",(0,s.jsx)(r.li,{children:"/opt/homebrew/Cellar"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Use scanApps() if you want to scan the entire filesystem for Apps"}),"\n",(0,s.jsx)(r.h3,{id:"scanapps---applications--macoserror",children:"scanApps() -> Applications[] | MacosError"}),"\n",(0,s.jsx)(r.p,{children:"Scans the entire filesystem under /System/ and tries to parse all Applications."}),"\n",(0,s.jsx)(r.p,{children:"Includes embedded Apps, Frameworks, and any file that ends with\n%/Contents/Info.plist"}),"\n",(0,s.jsx)(r.p,{children:"Use listApps() if you a simpler Application listing"}),"\n",(0,s.jsx)(r.h3,{id:"docktiles---applications--macoserror",children:"dockTiles() -> Applications[] | MacosError"}),"\n",(0,s.jsxs)(r.p,{children:["Scans the entire filesystem under /System looking for Applications that use\nDockTile persistence. See ",(0,s.jsx)(r.a,{href:"https://theevilbit.github.io/beyond/beyond_0032/",children:"https://theevilbit.github.io/beyond/beyond_0032/"})," for\ndetails on Dock Tile PlugIns"]}),"\n",(0,s.jsx)(r.p,{children:"Includes embedded Apps, Frameworks, and any file that ends with\n%/Contents/Info.plist"}),"\n",(0,s.jsx)(r.h3,{id:"getpackagesglob_path---homebrewreceipt",children:"getPackages(glob_path) -> HomebrewReceipt[]"}),"\n",(0,s.jsxs)(r.p,{children:["Get Homebrew packages on the system. Does ",(0,s.jsx)(r.strong,{children:"not"})," include Casks.",(0,s.jsx)(r.br,{}),"\n","Use getHomebrewInfo() to get all packages and Casks."]}),"\n",(0,s.jsx)(r.p,{children:"By default this function will search for all packages at:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"/opt/homebrew/Cellar"}),"\n",(0,s.jsx)(r.li,{children:"/usr/local/Cellar"}),"\n"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"glob_path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Optional alternative glob path to use"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getcasksglob_path---homebrewformula",children:"getCasks(glob_path) -> HomebrewFormula[]"}),"\n",(0,s.jsxs)(r.p,{children:["Get Homebrew Casks on the system. Does ",(0,s.jsx)(r.strong,{children:"not"})," include packages.",(0,s.jsx)(r.br,{}),"\n","Use getHomebrewInfo() to get all packages and Casks."]}),"\n",(0,s.jsx)(r.p,{children:"By default this function will search for all packages at:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"/opt/homebrew/Caskroom"}),"\n",(0,s.jsx)(r.li,{children:"/usr/local/Caskroom"}),"\n"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"glob_path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Optional alternative glob path to use"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"gethomebrewinfo---homebrewdata",children:"getHomebrewInfo() -> HomebrewData"}),"\n",(0,s.jsx)(r.p,{children:"Get Homebrew packages and Casks on the system. Searches for Homebrew data at\n/opt/homebrew and /usr/local."}),"\n",(0,s.jsx)(r.h3,{id:"wifinetworks---wifi",children:"wifiNetworks() -> Wifi[]"}),"\n",(0,s.jsx)(r.p,{children:"Get list of joined Wifi networks on macOS. Supports macOS Catalina and higher.\nRequires root access"}),"\n",(0,s.jsx)(r.h3,{id:"getsudologs---unifiedlog",children:"getSudoLogs() -> UnifiedLog[]"}),"\n",(0,s.jsx)(r.p,{children:"Parse the UnifiedLogs and extract entries related to sudo activity."}),"\n",(0,s.jsx)(r.h3,{id:"parsebompath---bom",children:"parseBom(path) -> Bom"}),"\n",(0,s.jsxs)(r.p,{children:["Parse Bill of Materials (BOM) files. BOM files are created whenever the macOS\nInstaller is used to install an application.",(0,s.jsx)(r.br,{}),"\n","BOM files track what files were created by the Installer. It is commonly used to\nensure files are removed when the application is uninstalled. This function will\nalso try to parse the plist receipt associated with the BOM file (if found in\nsame directory)."]}),"\n",(0,s.jsx)(r.p,{children:"BOM files are located at /var/db/receipts/*.bom"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Path to BOM file"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"systemextensions---systemextension",children:"systemExtensions() -> SystemExtension[]"}),"\n",(0,s.jsx)(r.p,{children:"Get list of macOS System Extensions."}),"\n",(0,s.jsx)(r.h3,{id:"querytccdbpath---tccvalues--macoserror",children:"queryTccDb(path) -> TccValues[] | MacosError"}),"\n",(0,s.jsxs)(r.p,{children:["Query all TCC.db files on the system. TCC.db contains granted permissions for\napplications.",(0,s.jsx)(r.br,{}),"\n","An optional path to the TCC.db can be provided. Otherwise will parse all user\nand System TCC.db files."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Optional path to TCC.db file"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"setupspotlightparserglob_path---storemeta--macoserror",children:"setupSpotlightParser(glob_path) -> StoreMeta | MacosError"}),"\n",(0,s.jsxs)(r.p,{children:["Collect and setup the required data needed to parse the macOS Spotlight\ndatabase.",(0,s.jsx)(r.br,{}),"\n","This function must be called before a user can parse the Spotlight database\nusing the JS API."]}),"\n",(0,s.jsxs)(r.p,{children:["The glob_path should point to the directory containing the Spotlight database\nfiles.",(0,s.jsx)(r.br,{}),"\n","The primary Spotlight database can be found at:\n/System/Volumes/Data/.Spotlight-V100/Store-V*/*/*",(0,s.jsx)(r.br,{}),"\n","Would return something like:\n/System/Volumes/Data/.Spotlight-V100/Store-V3/123-445566-778-12384/*"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"glob_path"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Glob path to a directory containing the Spotlight Database files"})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"getspotlightmeta-store_file-offset---storemeta--macoserror",children:"getSpotlight(meta, store_file, offset) -> StoreMeta | MacosError"}),"\n",(0,s.jsxs)(r.p,{children:["Parse the macOS Spotlight database. The database can potentially return a large\namount of data (5+GBs).",(0,s.jsx)(r.br,{}),"\n","To prevent excessive memory usage, this function will parse the database in\nblocks (chunks)."]}),"\n",(0,s.jsxs)(r.p,{children:["It will parse ",(0,s.jsx)(r.strong,{children:"10"})," blocks at a time before returning the results. The\n",(0,s.jsx)(r.code,{children:"StoreMeta"})," value obtaind from setupSpotlightParser, contains the ",(0,s.jsx)(r.strong,{children:"TOTAL"}),"\namount of blocks in the Spotlight database! You must loop through the blocks and\ntrack what block offset the parser should start at!"]}),"\n",(0,s.jsxs)(r.p,{children:["If you want to the parser to start at the beginning of the Spotlight database,\nprovide an offset of zero (0). Once the parser returns data, your next offset\nwill now be ten (10) because it parsed ",(0,s.jsx)(r.strong,{children:"10"})," blocks starting at zero (0-9)."]}),"\n",(0,s.jsxs)(r.p,{children:["Finally, you must provide the full path to the Spotlight database file\n(store.db). This is typically found in in the directory provided to\n",(0,s.jsx)(r.code,{children:"setupSpotlightParser"}),(0,s.jsx)(r.br,{}),"\n","(ex:\n/System/Volumes/Data/.Spotlight-V100/Store-V3/123-445566-778-12384/store.db)"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"meta"}),(0,s.jsx)(r.td,{children:"StoreMeta"}),(0,s.jsx)(r.td,{children:"Spotlight metadata obtained from setupSpotlightParser"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"store_file"}),(0,s.jsx)(r.td,{children:"string"}),(0,s.jsx)(r.td,{children:"Full path to the store.db file"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"offset"}),(0,s.jsx)(r.td,{children:"number"}),(0,s.jsx)(r.td,{children:"Offset to start parsing the Spotlight database"})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,a.M)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},2172:(e,r,t)=>{t.d(r,{I:()=>o,M:()=>n});var s=t(1504);const a={},i=s.createContext(a);function n(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);