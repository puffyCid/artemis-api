"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[2092],{28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var s=r(96540);const a={},n=s.createContext(a);function i(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(n.Provider,{value:t},e.children)}},56222:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Artifacts/macOS Artifacts/biome","title":"Biome","description":"macOS BIOME data","source":"@site/docs/Artifacts/macOS Artifacts/biome.md","sourceDirName":"Artifacts/macOS Artifacts","slug":"/Artifacts/macOS Artifacts/biome","permalink":"/artemis/docs/Artifacts/macOS Artifacts/biome","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/macOS Artifacts/biome.md","tags":[],"version":"current","lastUpdatedBy":"puffyCid","lastUpdatedAt":1748155945000,"frontMatter":{"description":"macOS BIOME data","keywords":["macos","protobuf","binary"]},"sidebar":"artemisArtifacts","previous":{"title":"Applications","permalink":"/artemis/docs/Artifacts/macOS Artifacts/apps"},"next":{"title":"Bill of Materials","permalink":"/artemis/docs/Artifacts/macOS Artifacts/bom"}}');var a=r(74848),n=r(28453);const i={description:"macOS BIOME data",keywords:["macos","protobuf","binary"]},o="Biome",c={},d=[];function l(e){const t={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"biome",children:"Biome"})}),"\n",(0,a.jsxs)(t.p,{children:["macOS BIOME data contains data related to application runtime. It partially\nreplaces the KnowledgeC.db.",(0,a.jsx)(t.br,{}),"\n","Its kind of similar to Windows SRUM"]}),"\n",(0,a.jsxs)(t.p,{children:["Biome files are stored in binary format that contains\n",(0,a.jsx)(t.a,{href:"https://protobuf.dev/",children:"Protobuf"})," data. It is very difficult (nearly impossible)\nto parse Protobuf data perfectly without the associated Proto file."]}),"\n",(0,a.jsxs)(t.p,{children:["Artemis has been heavily tested to parse App.InFocus Biome data which contains\ninformation related to application runtime. By default artemis will ",(0,a.jsx)(t.strong,{children:"only"}),"\nparse App.InFocus Biome files.",(0,a.jsx)(t.br,{}),"\n","However, you may enable parsing of all Biome files."]}),"\n",(0,a.jsx)(t.p,{children:"As mentioned in the output structure below, currently artemis does not do any\npost-processing of the data."}),"\n",(0,a.jsx)(t.h1,{id:"collection",children:"Collection"}),"\n",(0,a.jsxs)(t.p,{children:["You have to use the artemis ",(0,a.jsx)(t.a,{href:"/artemis/docs/API/overview",children:"api"})," in order to parse\n",(0,a.jsx)(t.code,{children:"BIOME"})," data."]}),"\n",(0,a.jsx)(t.h1,{id:"sample-api-script",children:"Sample API Script"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'import { parseBiome } from "./artemis-api/mod";\n\nfunction main() {\n  const results = parseBiome();\n  console.log(results);\n}\n'})}),"\n",(0,a.jsx)(t.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,a.jsxs)(t.p,{children:["A ",(0,a.jsx)(t.code,{children:"Biome"})," object structure"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"export interface Biome {\n  path: string;\n  /**\n   * BIOME files contain Protobuf data. Each type of BIOME needs to be extracted.\n   * Further research could be done to extract raw data into specific interfaces\n   * If parsing fails, we base64 encode the protobuf data and include that\n   */\n  raw: Record<string, unknown>[];\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);