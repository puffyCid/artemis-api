"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[9361],{2270:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Artifacts/Windows Artfacts/mft","title":"MFT","description":"Windows Master File Table","source":"@site/docs/Artifacts/Windows Artfacts/mft.md","sourceDirName":"Artifacts/Windows Artfacts","slug":"/Artifacts/Windows Artfacts/mft","permalink":"/artemis-api/docs/Artifacts/Windows Artfacts/mft","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/mft.md","tags":[],"version":"current","lastUpdatedBy":"puffyCid","lastUpdatedAt":1739135633000,"frontMatter":{"description":"Windows Master File Table","keywords":["windows","file meta","ntfs"]},"sidebar":"artemisArtifacts","previous":{"title":"Logons","permalink":"/artemis-api/docs/Artifacts/Windows Artfacts/logons"},"next":{"title":"Most Recently Used","permalink":"/artemis-api/docs/Artifacts/Windows Artfacts/mru"}}');var s=t(4848),r=t(8453);const a={description:"Windows Master File Table",keywords:["windows","file meta","ntfs"]},o="MFT",l={},c=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"mft",children:"MFT"})}),"\n",(0,s.jsx)(n.p,{children:"The Windows MFT file contains a record of all files and directories on a Windows\nNTFS volume. Artemis supports parsing the MFT file and can attempt to generate a\nfilelisting of the system."}),"\n",(0,s.jsx)(n.p,{children:"Since the MFT file can be extremely large, every 100k entries artemis will\noutput the data and then continue."}),"\n",(0,s.jsxs)(n.p,{children:["Generating a filelisting from just the MFT file is challenging, there are a\n",(0,s.jsx)(n.a,{href:"https://osdfir.blogspot.com/2021/10/pearls-and-pitfalls-of-timeline-analysis.html",children:"variety"}),"\nof\n",(0,s.jsx)(n.a,{href:"https://harelsegev.github.io/posts/resolving-file-paths-using-the-mft/",children:"edge cases"}),"\nthat can arise that can make path reconstruction incomplete. Artemis was\ndesigned to try handle the most common issues and edge case scenarios."]}),"\n",(0,s.jsx)(n.p,{children:"If you have concerns about the output, you should validate with another MFT\nparsing tool."}),"\n",(0,s.jsx)(n.p,{children:"Other Parsers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/Velocidex/velociraptor",children:"velociraptor"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"References:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/libyal/libfsntfs/blob/main/documentation/New%20Technologies%20File%20System%20(NTFS).asciidoc",children:"Libyal"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'system = "windows"\n\n[output]\nname = "mft_collection"\ndirectory = "./tmp"\nformat = "csv"\ncompress = false\nendpoint_id = "6c51b123-1522-4572-9f2a-0bd5abd81b82"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "mft"\n[artifacts.mft]\n# alt_drive = \'C\'\n# alt_file = "/tmp/$MFT"\n'})}),"\n",(0,s.jsx)(n.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"alt_drive"})," Alternative drive letter to use to parse the MFT. By default\nartemis will parse the SystemDrive. This configuration is ",(0,s.jsx)(n.strong,{children:"optional"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"alt_file"})," Alternative path to the MFT file. This configuration is\n",(0,s.jsx)(n.strong,{children:"optional"})]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,s.jsxs)(n.p,{children:["An array of ",(0,s.jsx)(n.code,{children:"MftEntry"})," entries"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'export interface MftEntry {\n    /**Full path to file or directory */\n    full_path: string;\n    /**Directory path */\n    directory: string;\n    /**Filename */\n    filename: string;\n    /**Extension of file if any */\n    extension: string;\n    /**Created timestamp */\n    created: string;\n    /**Modified timestamp */\n    modified: string;\n    /**Changed timestamp */\n    changed: string;\n    /**Accessed timestamp */\n    accessed: string;\n    /**Filename created timestamp */\n    filename_created: string;\n    /**Filename modified timestamp */\n    filename_modified: string;\n    /**Filename accessed timestamp */\n    filename_accessed: string;\n    /**Filename changed timestamp */\n    filename_changed: string;\n    /**Size of file in bytes */\n    size: number;\n    /**Inode entry */\n    inode: number;\n    /**Parent Inode entry*/\n    parent_inode: number;\n    /**Sequence number for entry */\n    usn: number;\n    /**Is the entry a file */\n    is_file: boolean;\n    /**Is the entry a directory */\n    is_directory: boolean;\n    /**Is the entry deleted */\n    deleted: boolean;\n    /**Namespace for the entry */\n    namespace: Namespace;\n    /**Attributs for the entry */\n    attributes: AttributeFlags[];\n    /**Other attributes parsed for the entry */\n    attribute_list: Record<string, unknown>[];\n}\n\nexport enum Namespace {\n    Posix = "Posix",\n    Windows = "Windows",\n    Dos = "Dos",\n    WindowsDos = "WindowsDos",\n    Unknown = "Unknown",\n}\n\nexport enum AttributeFlags {\n    ReadOnly = "ReadOnly",\n    Hidden = "Hidden",\n    System = "System",\n    Directory = "Directory",\n    Archive = "Archive",\n    Device = "Device",\n    Normal = "Normal",\n    Temporary = "Temporary",\n    Sparse = "Sparse",\n    Reparse = "Reparse",\n    Compressed = "Compressed",\n    Offline = "Offline",\n    NotIndexed = "NotIndexed",\n    Encrypted = "Encrypted",\n    Virtual = "Virtual",\n    Unknown = "Unknown",\n    IndexView = "IndexView",\n    Volume = "Volume",\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);