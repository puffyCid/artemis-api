"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[5688],{67252:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=s(17624),i=s(4552);const o={sidebar_position:7,description:"A full walkthrough"},r="Step by Step Guide",a={id:"Intro/Scripting/walkthrough",title:"Step by Step Guide",description:"A full walkthrough",source:"@site/docs/Intro/Scripting/walkthrough.md",sourceDirName:"Intro/Scripting",slug:"/Intro/Scripting/walkthrough",permalink:"/artemis-api/docs/Intro/Scripting/walkthrough",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Intro/Scripting/walkthrough.md",tags:[],version:"current",lastUpdatedBy:"puffyCid",lastUpdatedAt:172170026e4,sidebarPosition:7,frontMatter:{sidebar_position:7,description:"A full walkthrough"},sidebar:"artemisStart",previous:{title:"Limitations",permalink:"/artemis-api/docs/Intro/Scripting/limitations"},next:{title:"Common Issues",permalink:"/artemis-api/docs/Intro/Scripting/commonissues"}},c={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"step-by-step-guide",children:"Step by Step Guide"}),"\n",(0,t.jsxs)(n.p,{children:["Lets create an simple script that will collect a process listing that returns\nonly processes that are using more than 200MB of memory. Make sure you have all\nof the ",(0,t.jsx)(n.a,{href:"/artemis-api/docs/Intro/Scripting/deno",children:"prequisites"})," before getting started!"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"First we need to initialize our script. You can name it anything you want."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"deno init process_usage\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["Deno created two extra files we do not need.\n",(0,t.jsx)(n.code,{children:"main_bench.ts and main_test.ts"}),". We can delete them. In addition, lets clear\nthe main.ts and make sure its empty."]}),"\n",(0,t.jsx)(n.li,{children:"Now using a text editor or IDE we need to import the necessary functions to\ncollect our data. Since we are only collecting a process listing we only need\nto import one function. In the main.ts file add the following"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { processListing } from "https://raw.githubusercontent.com/puffycid/artemis-api/master/src/system/memory.ts";\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You may get a warning or error about ",(0,t.jsx)(n.code,{children:"processListing"})," not found. We should be\nable to resolve this by right clicking the URL and selecting ",(0,t.jsx)(n.code,{children:"cache module"}),".\nDeno will cache the entire ",(0,t.jsx)(n.code,{children:"artemis-api"})," to our local system."]}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsxs)(n.li,{children:["Now lets call our ",(0,t.jsx)(n.code,{children:"processListing"})," function!"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { processListing } from "https://raw.githubusercontent.com/puffycid/artemis-api/master/src/system/memory.ts";\n\nfunction main() {\n  const md5 = false;\n  const sha1 = false;\n  const sha256 = false;\n  const binary_info = true;\n\n  const proc_list = processListing(md5, sha1, sha256, binary_info);\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you hover over ",(0,t.jsx)(n.code,{children:"processListing"})," function you should see the function expects\nfour optional arguments:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Enable MD5 hashing"}),"\n",(0,t.jsx)(n.li,{children:"Enable SHA1 hashing"}),"\n",(0,t.jsx)(n.li,{children:"Enable SHA256 hashing"}),"\n",(0,t.jsx)(n.li,{children:"Collect binary metadata"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"All of these arguments are optional. The default values are false. In this\nexample, we will provide arguments but will still set them to false."}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsx)(n.li,{children:"Now since we have called our function, we want to now filter the data to only\ninclude processes using more than 200MB of memory. We can use a simple for\nloop to do this"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { processListing } from "https://raw.githubusercontent.com/puffycid/artemis-api/master/src/system/memory.ts";\n\nfunction main() {\n  const md5 = false;\n  const sha1 = false;\n  const sha256 = false;\n  const binary_info = false;\n\n  const proc_list = processListing(md5, sha1, sha256, binary_info);\n\n  const filter_list = [];\n  for (const entry of proc_list) {\n    if (entry.memory_usage > 200204864) {\n      console.log(`High memory usage ${entry.full_path}`);\n      filter_list.push(entry);\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Here we are looping through the process list data and only keeping entries that\nhave memory usage above 200MB. Your IDE or text editor ",(0,t.jsx)(n.strong,{children:"should"})," provide\nauto-complete suggestions for the process listing. This should help make\nscripting less challenging!"]}),"\n",(0,t.jsxs)(n.ol,{start:"6",children:["\n",(0,t.jsx)(n.li,{children:"Now lets return our data and make sure artemis will call our main function."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { processListing } from "https://raw.githubusercontent.com/puffycid/artemis-api/master/src/system/memory.ts";\n\nfunction main() {\n  const md5 = false;\n  const sha1 = false;\n  const sha256 = false;\n  const binary_info = true;\n\n  const proc_list = processListing(md5, sha1, sha256, binary_info);\n\n  const filter_list = [];\n  for (const entry of proc_list) {\n    if (entry.memory_usage > 200204864) {\n      console.log(`High memory usage ${entry.full_path}`);\n      filter_list.push(entry);\n    }\n  }\n\n  return filter_list;\n}\n\nmain();\n'})}),"\n",(0,t.jsx)(n.p,{children:"Thats it! We now have a simple script that filters a process listing."}),"\n",(0,t.jsxs)(n.ol,{start:"7",children:["\n",(0,t.jsxs)(n.li,{children:["Now before we run our script, we need to ",(0,t.jsx)(n.a,{href:"/artemis-api/docs/Intro/Scripting/bundling",children:"bundle"})," all of the\ncode into one JavaScript file. Create the file ",(0,t.jsx)(n.code,{children:"build.ts"})," in the same\ndirectory as main.ts. And copy the following into build.ts:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import * as esbuild from "https://deno.land/x/esbuild@v0.15.10/mod.js";\nimport { denoPlugin } from "https://deno.land/x/esbuild_deno_loader@0.6.0/mod.ts";\n\nasync function main() {\n  const _result = await esbuild.build({\n    plugins: [denoPlugin()],\n    entryPoints: ["./main.ts"],\n    outfile: "main.js",\n    bundle: true,\n    format: "cjs",\n  });\n\n  esbuild.stop();\n}\n\nmain();\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The above code uses\n",(0,t.jsx)(n.a,{href:"https://deno.land/x/esbuild_deno_loader@0.6.0",children:"esbuild Deno loader"})," to bundle\nand ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Source-to-source_compiler",children:"transpile"})," our\nTypeScript code into JavaScript using the Common JS ",(0,t.jsx)(n.code,{children:"(CJS)"})," format"]}),"\n",(0,t.jsxs)(n.ol,{start:"8",children:["\n",(0,t.jsxs)(n.li,{children:["Lets bundle the code! Execute ",(0,t.jsx)(n.code,{children:"deno run build.ts"}),". Since Deno uses sandbox\npermissions to run code you may receive prompts like the following:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'\u2705 Granted read access to <CWD>.\n\u2705 Granted env access to "ESBUILD_BINARY_PATH".\n\u2705 Granted env access to "HOME".\n\u2705 Granted read access to "/Users/dev/Library/Caches/esbuild/bin/esbuild-darwin-64@0.15.10".\n\u2705 Granted run access to "/Users/dev/Library/Caches/esbuild/bin/esbuild-darwin-64@0.15.10".\n\u250c \u26a0\ufe0f  Deno requests net access to "raw.githubusercontent.com".\n\u251c Requested by `fetch()` API.\n\u251c Run again with --allow-net to bypass this prompt.\n\u2514 Allow? [y/n/A] (y = yes, allow; n = no, deny; A = allow all net permissions) >\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["The Deno binary will prompt for access to certain Deno APIs. If you want to\ngrant automatically grant required access you can run with the following\naguments: ",(0,t.jsx)(n.code,{children:"deno run -A build.ts"})]})}),"\n",(0,t.jsxs)(n.ol,{start:"9",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Once Deno has finished running we should now have our ",(0,t.jsx)(n.code,{children:"main.js"})," file! We can\nnow run it with artemis! There are two ways to run JavaScript code with\nartemis:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use a TOML ",(0,t.jsx)(n.a,{href:"/artemis-api/docs/Intro/Collections/format",children:"collection"})," file"]}),"\n",(0,t.jsxs)(n.li,{children:["run directly via ",(0,t.jsx)(n.code,{children:"artemis -j <path to main.js>"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"There are slight differences between both options. If we use a TOML\ncollection file, artemis will handle the output format for us based on the\nTOML configuration."}),"\n",(0,t.jsxs)(n.p,{children:["If we decide to run the JavaScript code directly, we would need to include\ncode to tell artemis how to output the data. See the artemis\n",(0,t.jsx)(n.a,{href:"/artemis-api/docs/API/overview",children:"API"})," docs for scripting the output options."]}),"\n",(0,t.jsx)(n.p,{children:"For this example we will use a TOML collection file"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Base64 encode our main.js file.\n",(0,t.jsx)(n.a,{href:"https://gchq.github.io/CyberChef/",children:"CyberChef"})," works great for this task.\nThen add our base64 blob to a TOML file with the following configuration:"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'system = "macos" # Change this based on ur platform\n\n[output]\nname = "custom_proc_list"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "this can be anything"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "script"\n[artifacts.script]\nname = "proc_memory_usage_list"\nscript = "Ly8gaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3B1ZmZ5Y2lkL2FydGVtaXMtYXBpL21hc3Rlci9zcmMvc3lzdGVtL21lbW9yeS50cwpmdW5jdGlvbiBwcm9jZXNzTGlzdGluZyhtZDUgPSBmYWxzZSwgc2hhMSA9IGZhbHNlLCBzaGEyNTYgPSBmYWxzZSwgYmluYXJ5ID0gZmFsc2UpIHsKICBjb25zdCBoYXNoZXMgPSB7CiAgICBtZDUsCiAgICBzaGExLAogICAgc2hhMjU2CiAgfTsKICBjb25zdCBkYXRhID0gRGVuby5jb3JlLm9wcy5nZXRfcHJvY2Vzc2VzKAogICAgaGFzaGVzLAogICAgYmluYXJ5CiAgKTsKICBjb25zdCBwcm9jX2FycmF5ID0gSlNPTi5wYXJzZShkYXRhKTsKICByZXR1cm4gcHJvY19hcnJheTsKfQoKLy8gbWFpbi50cwpmdW5jdGlvbiBtYWluKCkgewogIGNvbnN0IG1kNSA9IGZhbHNlOwogIGNvbnN0IHNoYTEgPSBmYWxzZTsKICBjb25zdCBzaGEyNTYgPSBmYWxzZTsKICBjb25zdCBiaW5hcnlfaW5mbyA9IHRydWU7CiAgY29uc3QgcHJvY19saXN0ID0gcHJvY2Vzc0xpc3RpbmcobWQ1LCBzaGExLCBzaGEyNTYsIGJpbmFyeV9pbmZvKTsKICBjb25zdCBmaWx0ZXJfbGlzdCA9IFtdOwogIGZvciAoY29uc3QgZW50cnkgb2YgcHJvY19saXN0KSB7CiAgICBpZiAoZW50cnkubWVtb3J5X3VzYWdlID4gMTUpIHsKICAgICAgY29uc29sZS5sb2coYEhpZ2ggbWVtb3J5IHVzYWdlICR7ZW50cnl9YCk7CiAgICAgIGZpbHRlcl9saXN0LnB1c2goZW50cnkpOwogICAgfQogIH0KICByZXR1cm4gZmlsdGVyX2xpc3Q7Cn0KbWFpbigpOwo="\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"11",children:["\n",(0,t.jsxs)(n.li,{children:["Now run our TOML file collection with artemis!\n",(0,t.jsx)(n.code,{children:"artemis -t <path to TOML fil>"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["You should see results similar to below depending on you OS. In addition, to\noutput files at ",(0,t.jsx)(n.code,{children:"./tmp/custom_proc_list"}),"."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'[runtime]: "High memory usage /Applications/iTerm.app/Contents/MacOS/iTerm2"\n[runtime]: "High memory usage /usr/local/bin/node"\n[runtime]: "High memory usage /System/Library/Frameworks/WebKit.framework/Versions/A/XPCServices/com.apple.WebKit.WebContent.xpc/Contents/MacOS/com.apple.WebKit.WebContent"\n[runtime]: "High memory usage /System/Library/Frameworks/WebKit.framework/Versions/A/XPCServices/com.apple.WebKit.WebContent.xpc/Contents/MacOS/com.apple.WebKit.WebContent"\n'})})]}),"\n",(0,t.jsxs)(n.p,{children:["The directory ",(0,t.jsx)(n.code,{children:"./tmp/custom_proc_list"})," should contain three files:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"3d6573f5-9eda-4945-b324-06dd5a8fba1b.json\tb76ed71a-9333-49b9-be2d-b3c77a4d1497.log\tstatus.log\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["status.log maps script name to our json file\n",(0,t.jsx)(n.code,{children:"proc_memory_usage_list:3d6573f5-9eda-4945-b324-06dd5a8fba1b.json"}),". ",(0,t.jsx)(n.strong,{children:"NOTE"}),"\nwe can also find the same info in ",(0,t.jsx)(n.code,{children:"3d6573f5-9eda-4945-b324-06dd5a8fba1b.json"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"b76ed71a-9333-49b9-be2d-b3c77a4d1497.log"})," contains any errors or warnings.\nSince we did ",(0,t.jsx)(n.strong,{children:"not"})," run with elevated privileges, artemis will not be able to\nget information for all processes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"3d6573f5-9eda-4945-b324-06dd5a8fba1b.json"})," should contain all processes using\nmore the 200MB of memory!"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Snippet below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "metadata": {\n    "endpoint_id": "this can be anything",\n    "uuid": "4f58d2e4-d2fa-4e91-9dcb-8bbe44c2efdb",\n    "id": 1,\n    "artifact_name": "proc_memory_usage_list",\n    "complete_time": 1694831851,\n    "start_time": 1694831851,\n    "hostname": "dev-MBP.lan",\n    "os_version": "13.4.1",\n    "platform": "Darwin",\n    "kernel_version": "22.5.0",\n    "load_performance": {\n      "avg_one_min": 1.74755859375,\n      "avg_five_min": 1.62744140625,\n      "avg_fifteen_min": 1.6484375\n    }\n  },\n  "data": [\n    {\n      "full_path": "/Applications/VSCodium.app/Contents/Frameworks/VSCodium Helper (Renderer).app/Contents/MacOS/VSCodium Helper (Renderer)",\n      "name": "VSCodium Helper (Renderer)",\n      "path": "/Applications/VSCodium.app/Contents/Frameworks/VSCodium Helper (Renderer).app/Contents/MacOS",\n      "pid": 924,\n      "ppid": 910,\n      "environment": "MallocNanoZone=0 USER=dev COMMAND_MODE=unix2003 __CFBundleIdentifier=com.vscodium PATH=/usr/bin:/bin:/usr/sbin:/sbin LOGNAME=dev SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.EMaeAUplCi/Listeners HOME=/Users/dev SHELL=/bin/zsh TMPDIR=/var/folders/ms/hq39v4_x1sq20cz108g3_6cw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 XPC_SERVICE_NAME=application.com.vscodium.52768860.61870812 XPC_FLAGS=0x0 ORIGINAL_XDG_CURRENT_DESKTOP=undefined VSCODE_CWD=/ VSCODE_NLS_CONFIG={\\"locale\\":\\"en-us\\",\\"osLocale\\":\\"en-us\\",\\"availableLanguages\\":{},\\"_languagePackSupport\\":true} VSCODE_CODE_CACHE_PATH=/Users/dev/Library/Application Support/VSCodium/CachedData/13ae69686c4390a9aee7b71b44337eb488319f26 VSCODE_IPC_HOOK=/Users/dev/Library/Application Support/VSCodium/1.82-main.sock VSCODE_PID=910 OS_ACTIVITY_MODE=disable",\n      "status": "Runnable",\n      "arguments": " --type=renderer --user-data-dir=/Users/dev/Library/Application Support/VSCodium --standard-schemes=vscode-webview,vscode-file --enable-sandbox --secure-schemes=vscode-webview,vscode-file --bypasscsp-schemes --cors-schemes=vscode-webview,vscode-file --fetch-schemes=vscode-webview,vscode-file --service-worker-schemes=vscode-webview --streaming-schemes --app-path=/Applications/VSCodium.app/Contents/Resources/app --enable-sandbox --enable-blink-features=HighlightAPI --lang=en-US --num-raster-threads=4 --enable-zero-copy --enable-gpu-memory-buffer-compositor-resources --enable-main-frame-before-activation --renderer-client-id=5 --time-ticks-at-unix-epoch=-1694820653253440 --launch-time-ticks=1314885816 --shared-files --field-trial-handle=1718379636,r,10495113946754946208,8514878387345791811,262144 --disable-features=CalculateNativeWinOcclusion,SpareRendererForSitePerProcess --vscode-window-config=vscode:15d59b34-a78d-4dc2-963f-171fa490be8d --seatbelt-client=62",\n      "memory_usage": 573014016,\n      "virtual_memory_usage": 1252417200128.0,\n      "start_time": 1694821968,\n      "uid": "501",\n      "gid": "20",\n      "md5": "",\n      "sha1": "",\n      "sha256": "",\n      "binary_info": []\n    }\n  ]\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4552:(e,n,s)=>{s.d(n,{I:()=>a,M:()=>r});var t=s(11504);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);