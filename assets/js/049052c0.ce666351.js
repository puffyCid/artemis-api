"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[4852],{28453:(r,e,i)=>{i.d(e,{R:()=>n,x:()=>l});var t=i(96540);const o={},s=t.createContext(o);function n(r){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function l(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(o):r.components||o:n(r.components),t.createElement(s.Provider,{value:e},r.children)}},34807:(r,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>n,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"API/Artifacts/applications","title":"Applications","description":"Interact with Application Artifacts","source":"@site/docs/API/Artifacts/applications.md","sourceDirName":"API/Artifacts","slug":"/API/Artifacts/applications","permalink":"/artemis/docs/API/Artifacts/applications","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Artifacts/applications.md","tags":[],"version":"current","lastUpdatedBy":"puffyCid","lastUpdatedAt":1748155945000,"frontMatter":{"description":"Interact with Application Artifacts"},"sidebar":"artemisAPI","previous":{"title":"Forensic Aritfacts","permalink":"/artemis/docs/category/forensic-aritfacts"},"next":{"title":"FreeBSD","permalink":"/artemis/docs/API/Artifacts/freebsd"}}');var o=i(74848),s=i(28453);const n={description:"Interact with Application Artifacts"},l="Applications",a={},d=[{value:"getChromiumUsersHistory() -&gt; ChromiumHistory[] | ApplicationError",id:"getchromiumusershistory---chromiumhistory--applicationerror",level:3},{value:"getChromiumHistory(path) -&gt; RawChromiumHistory[] | ApplicationError",id:"getchromiumhistorypath---rawchromiumhistory--applicationerror",level:3},{value:"getChromiumUsersDownloads() -&gt; ChromiumDownloads[] | ApplicationError",id:"getchromiumusersdownloads---chromiumdownloads--applicationerror",level:3},{value:"getChromiumDownloads(path) -&gt; RawChromiumDownloads[] | ApplicationError",id:"getchromiumdownloadspath---rawchromiumdownloads--applicationerror",level:3},{value:"chromiumExtensions(platform) -&gt; Record&lt;string, unknown&gt;[] | ApplicationError",id:"chromiumextensionsplatform---recordstring-unknown--applicationerror",level:3},{value:"getFirefoxUsersHistory() -&gt; FirefoxHistory[] | ApplicationError",id:"getfirefoxusershistory---firefoxhistory--applicationerror",level:3},{value:"getFirefoxHistory(path) -&gt; RawFirefoxHistory[] | ApplicationError",id:"getfirefoxhistorypath---rawfirefoxhistory--applicationerror",level:3},{value:"getFirefoxUsersDownloads() -&gt; FirefoxDownloads[] | ApplicationError",id:"getfirefoxusersdownloads---firefoxdownloads--applicationerror",level:3},{value:"getFirefoxDownloads(path) -&gt; RawFirefoxDownloads[] | ApplicationError",id:"getfirefoxdownloadspath---rawfirefoxdownloads--applicationerror",level:3},{value:"firefoxAddons(platform) -&gt; Record&lt;string, unknown&gt;[] | ApplicationError",id:"firefoxaddonsplatform---recordstring-unknown--applicationerror",level:3},{value:"recentFiles(platform) -&gt; History[] | ApplicationError",id:"recentfilesplatform---history--applicationerror",level:3},{value:"fileHistory(platform, alt_glob) -&gt; FileHistory[] | ApplicationError",id:"filehistoryplatform-alt_glob---filehistory--applicationerror",level:3},{value:"getExtensions(platform, path) -&gt; Extensions[] | ApplicationError",id:"getextensionsplatform-path---extensions--applicationerror",level:3},{value:"vscodeRecentFiles(platform, path) -&gt; RecentFiles[] | ApplicationError",id:"vscoderecentfilesplatform-path---recentfiles--applicationerror",level:3},{value:"querySqlite(path, query) -&gt; Record&lt;string, unknown&gt;[] | ApplicationError",id:"querysqlitepath-query---recordstring-unknown--applicationerror",level:3},{value:"getFirefoxCookies(platform, path) -&gt; FirefoxCookies[] | ApplicationError",id:"getfirefoxcookiesplatform-path---firefoxcookies--applicationerror",level:3},{value:"getChromiumCookies(platform, path) -&gt; ChromiumCookies[] | ApplicationError",id:"getchromiumcookiesplatform-path---chromiumcookies--applicationerror",level:3},{value:"getChromiumAutofill(platform, path) -&gt; ChromiumAutofill[] | ApplicationError",id:"getchromiumautofillplatform-path---chromiumautofill--applicationerror",level:3},{value:"getChromiumBookmarks(platform, path) -&gt; ChromiumBookmarks[] | ApplicationError",id:"getchromiumbookmarksplatform-path---chromiumbookmarks--applicationerror",level:3},{value:"getChromiumLogins(platform, path) -&gt; ChromiumLogins[] | ApplicationError",id:"getchromiumloginsplatform-path---chromiumlogins--applicationerror",level:3},{value:"chromiumPreferences(platform) -&gt; Record&lt;string, unknown&gt;[] | ApplicationError",id:"chromiumpreferencesplatform---recordstring-unknown--applicationerror",level:3},{value:"getChromiumDips(platform, path) -&gt; Dips[] | ApplicationError",id:"getchromiumdipsplatform-path---dips--applicationerror",level:3},{value:"extractDefenderRules(platform, alt_file, limit) -&gt; DefinitionRule[] | ApplicationError",id:"extractdefenderrulesplatform-alt_file-limit---definitionrule--applicationerror",level:3},{value:"officeMruFiles(platform, alt_file) -&gt; OfficeRecentFilesMacos[] | OfficeRecentFilesWindows[] | ApplicationError",id:"officemrufilesplatform-alt_file---officerecentfilesmacos--officerecentfileswindows--applicationerror",level:3},{value:"onedriveDetails(platform, alt_path, user) -&gt; OneDriveDetails | ApplicationError",id:"onedrivedetailsplatform-alt_path-user---onedrivedetails--applicationerror",level:3}];function h(r){const e={br:"br",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...r.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"applications",children:"Applications"})}),"\n",(0,o.jsx)(e.p,{children:"These functions can be used to pull data related to common third-party software"}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumusershistory---chromiumhistory--applicationerror",children:"getChromiumUsersHistory() -> ChromiumHistory[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Return Chromium history for all users"}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumhistorypath---rawchromiumhistory--applicationerror",children:"getChromiumHistory(path) -> RawChromiumHistory[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Parse the Chromium History sqlite file at provided path. Will parse locked\nsqlite files."}),"\n",(0,o.jsx)(e.p,{children:"All Chromium derived browsers should be supported."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Chromium History file"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumusersdownloads---chromiumdownloads--applicationerror",children:"getChromiumUsersDownloads() -> ChromiumDownloads[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Return Chromium downloads for all users"}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumdownloadspath---rawchromiumdownloads--applicationerror",children:"getChromiumDownloads(path) -> RawChromiumDownloads[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Parse the Chromium History sqlite file at provided path for downloads. Will\nparse locked sqlite files."}),"\n",(0,o.jsx)(e.p,{children:"All Chromium derived browsers should be supported."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Chromium History file"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"chromiumextensionsplatform---recordstring-unknown--applicationerror",children:"chromiumExtensions(platform) -> Record<string, unknown>[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Parse all Chromium extensions (manifest.json files) for all users. Returns array\nJSON objects."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"getfirefoxusershistory---firefoxhistory--applicationerror",children:"getFirefoxUsersHistory() -> FirefoxHistory[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Return Firefox history for all users"}),"\n",(0,o.jsx)(e.h3,{id:"getfirefoxhistorypath---rawfirefoxhistory--applicationerror",children:"getFirefoxHistory(path) -> RawFirefoxHistory[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get Firefox history from provided places.sqlite file. Will parse locked sqlite\nfiles."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Chromium History file"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"getfirefoxusersdownloads---firefoxdownloads--applicationerror",children:"getFirefoxUsersDownloads() -> FirefoxDownloads[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Return Firefox downloads for all users"}),"\n",(0,o.jsx)(e.h3,{id:"getfirefoxdownloadspath---rawfirefoxdownloads--applicationerror",children:"getFirefoxDownloads(path) -> RawFirefoxDownloads[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get Firefox downloads from provided places.sqlite file. Will parse locked sqlite\nfiles."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Chromium History file"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"firefoxaddonsplatform---recordstring-unknown--applicationerror",children:"firefoxAddons(platform) -> Record<string, unknown>[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Parse all Firefox addons (addons.json files) for all users. Returns array JSON\nobjects."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"recentfilesplatform---history--applicationerror",children:"recentFiles(platform) -> History[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Return a list of files opened by LibreOffice for all users."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"filehistoryplatform-alt_glob---filehistory--applicationerror",children:"fileHistory(platform, alt_glob) -> FileHistory[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Parse the local file history for VSCode. Returns list of history entries. Also\nsupports VSCodium."}),"\n",(0,o.jsx)(e.p,{children:"You may also provide an optional alternative glob path to the entries.json file.\nBy default artemis will parse the default locations for VSCode."}),"\n",(0,o.jsx)(e.p,{children:"An altnerative glob will override the platform type."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"alt_glob"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"optional alternative glob path to entries.json"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"getextensionsplatform-path---extensions--applicationerror",children:"getExtensions(platform, path) -> Extensions[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get installed VSCode or VSCodium extensions. Can also provide an optional\nalternative path to the extensions.json file. Otherwise will use default paths."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to an extensions.json file"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"vscoderecentfilesplatform-path---recentfiles--applicationerror",children:"vscodeRecentFiles(platform, path) -> RecentFiles[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get recent files and folders opened by VScode."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a storage.json file"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"querysqlitepath-query---recordstring-unknown--applicationerror",children:"querySqlite(path, query) -> Record<string, unknown>[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Execute a SQLITe query against a provided database file. Databases are opened in\nread-only mode. In addition, this function will bypass locked SQLITE databases."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Path to the sqlite db"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"query"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Query to execute against the sqlite db"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"getfirefoxcookiesplatform-path---firefoxcookies--applicationerror",children:"getFirefoxCookies(platform, path) -> FirefoxCookies[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get Firefox cookies for all users based on platform. Can also provide an\noptional alternative path to the Cookie sqlite database instead"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a Firefox cookie database"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumcookiesplatform-path---chromiumcookies--applicationerror",children:"getChromiumCookies(platform, path) -> ChromiumCookies[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get Chromium cookies for all users based on platform. Can also provide an\noptional alternative path to the Cookie sqlite database. May fail if Chromium is\nrunning due to Chromium process locking the file."}),"\n",(0,o.jsx)(e.p,{children:"All Chromium derived browsers should be supported."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a Chromium cookie database"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumautofillplatform-path---chromiumautofill--applicationerror",children:"getChromiumAutofill(platform, path) -> ChromiumAutofill[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get Chromium autofill info for all users based on platform. Can also provide an\noptional alternative path to the Web Data sqlite database."}),"\n",(0,o.jsx)(e.p,{children:"All Chromium derived browsers should be supported."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a Chromium Web Data database"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumbookmarksplatform-path---chromiumbookmarks--applicationerror",children:"getChromiumBookmarks(platform, path) -> ChromiumBookmarks[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Try to get Chromium bookmarks for all users based on platform. Can also provide\nan optional alternative path to the Cookie sqlite database."}),"\n",(0,o.jsx)(e.p,{children:"All Chromium derived browsers should be supported."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a Chromium bookmark file"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumloginsplatform-path---chromiumlogins--applicationerror",children:"getChromiumLogins(platform, path) -> ChromiumLogins[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get saved Login information associated with Chromium browsers"}),"\n",(0,o.jsx)(e.p,{children:"All Chromium derived browsers should be supported."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a Chromium Login Data database"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"chromiumpreferencesplatform---recordstring-unknown--applicationerror",children:"chromiumPreferences(platform) -> Record<string, unknown>[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get Chromium Preferences"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"getchromiumdipsplatform-path---dips--applicationerror",children:"getChromiumDips(platform, path) -> Dips[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"Get Detect Incidental Party State (DIPS) info. DIPS collects metrics related to\nwebsites"}),"\n",(0,o.jsx)(e.p,{children:"All Chromium derived browsers should be supported."}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a Chromium Login Data database"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"extractdefenderrulesplatform-alt_file-limit---definitionrule--applicationerror",children:"extractDefenderRules(platform, alt_file, limit) -> DefinitionRule[] | ApplicationError"}),"\n",(0,o.jsx)(e.p,{children:"An experimental function to attempt to extract Windows Defender Signatures.\nDefender can contain thousands/millions? of signatures so this function can\npotentially run for a long time."}),"\n",(0,o.jsx)(e.p,{children:"By default it will only extract 30 signatures. You can extract all signatures by\nsetting the limit to 0."}),"\n",(0,o.jsx)(e.p,{children:"By default it will attempt to extract all Defender signatures at:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"%SYSTEMDRIVE%\\ProgramData\\Microsoft\\Windows Defender\\Definition\nUpdates\\{*\\*.vdm"}),"\n",(0,o.jsx)(e.li,{children:"/Library/Application Support/Microsoft/Defender/definitions.noindex/*/*.vdm"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"You may also provide an optional alternative path to the vmd file"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to extract rules from"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"alt_dir"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Alternative directory containing the UAL log databases"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"limit"}),(0,o.jsx)(e.td,{children:"number"}),(0,o.jsx)(e.td,{children:"Number of rules to return. Default is 30"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"officemrufilesplatform-alt_file---officerecentfilesmacos--officerecentfileswindows--applicationerror",children:"officeMruFiles(platform, alt_file) -> OfficeRecentFilesMacos[] | OfficeRecentFilesWindows[] | ApplicationError"}),"\n",(0,o.jsxs)(e.p,{children:["Extract Microsoft Office MRU entries. Supports both macOS and Windows. By\ndefault will parse MRU entries for all users.",(0,o.jsx)(e.br,{}),"\n","You may also provide an optional alternative path to the MRU plist or NTUSER.DAT\nfile."]}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"alt_file"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a MRU plist or NTUSER.DAT"})]})]})]}),"\n",(0,o.jsx)(e.h3,{id:"onedrivedetailsplatform-alt_path-user---onedrivedetails--applicationerror",children:"onedriveDetails(platform, alt_path, user) -> OneDriveDetails | ApplicationError"}),"\n",(0,o.jsxs)(e.p,{children:["Extract Microsoft OneDrive artifacts. Supports both macOS and Windows. By\ndefault will parse OneDrive artifacts for ",(0,o.jsx)(e.strong,{children:"all"})," users. You may provide a\nsingle user as an optional arguement to only parse data for a specific user."]}),"\n",(0,o.jsx)(e.p,{children:"You may also provide an optional alternative path to a folder containing\nOneDrive artifacts. You must include the trailing slash. The folder should\ncontain the following artifacts:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"*odl* files"}),"\n",(0,o.jsx)(e.li,{children:"NTUSER.DAT file or *.OneDriveStandaloneSuite.plist"}),"\n",(0,o.jsx)(e.li,{children:"general.keystore"}),"\n",(0,o.jsx)(e.li,{children:"SyncEngineDatabase.db"}),"\n"]}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Param"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"platform"}),(0,o.jsx)(e.td,{children:"PlatformType"}),(0,o.jsx)(e.td,{children:"OS platform to parse. Supports Windows and macOS (Darwin)"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"alt_path"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional path to a directory containing OneDrive artifacts"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"user"}),(0,o.jsx)(e.td,{children:"string"}),(0,o.jsx)(e.td,{children:"Optional single user to parse instead of all users"})]})]})]})]})}function c(r={}){const{wrapper:e}={...(0,s.R)(),...r.components};return e?(0,o.jsx)(e,{...r,children:(0,o.jsx)(h,{...r})}):h(r)}}}]);