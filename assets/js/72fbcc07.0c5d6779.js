"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[8828],{9232:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var n=r(7624),i=r(2172);const s={description:"Interact with Linux Artifacts"},l="Linux",a={id:"API/Artifacts/linux",title:"Linux",description:"Interact with Linux Artifacts",source:"@site/docs/API/Artifacts/linux.md",sourceDirName:"API/Artifacts",slug:"/API/Artifacts/linux",permalink:"/artemis-api/docs/API/Artifacts/linux",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Artifacts/linux.md",tags:[],version:"current",lastUpdatedBy:"puffyCid",lastUpdatedAt:1718419793e3,frontMatter:{description:"Interact with Linux Artifacts"},sidebar:"artemisAPI",previous:{title:"Applications",permalink:"/artemis-api/docs/API/Artifacts/applications"},next:{title:"macOS",permalink:"/artemis-api/docs/API/Artifacts/macos"}},o={},d=[{value:"getLogon(path) -&gt; Logon[] | LinuxError",id:"getlogonpath---logon--linuxerror",level:3},{value:"getElf(path) -&gt; ElfInfo | LinuxError",id:"getelfpath---elfinfo--linuxerror",level:3},{value:"getJournal(path) -&gt; Journal[] | LinuxError",id:"getjournalpath---journal--linuxerror",level:3},{value:"getDebInfo(alt_path) -&gt; DebPackages[] | LinuxError",id:"getdebinfoalt_path---debpackages--linuxerror",level:3},{value:"getSudoLogs() -&gt; Journal[]",id:"getsudologs---journal",level:3},{value:"getRpmInfo(path) -&gt; RpmPackages[] | LinuxError",id:"getrpminfopath---rpmpackages--linuxerror",level:3}];function h(e){const t={a:"a",admonition:"admonition",br:"br",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"linux",children:"Linux"}),"\n",(0,n.jsx)(t.p,{children:"These functions can be used to pull data related to Linux artifacts"}),"\n",(0,n.jsx)(t.h3,{id:"getlogonpath---logon--linuxerror",children:"getLogon(path) -> Logon[] | LinuxError"}),"\n",(0,n.jsx)(t.p,{children:"Parse a single logon related file. The path needs to end with one of the\nfollowing:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"wtmp"}),"\n",(0,n.jsx)(t.li,{children:"btmp"}),"\n",(0,n.jsx)(t.li,{children:"utmp"}),"\n"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"path"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"Path to wtmp, utmp, or btmp file"})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"getelfpath---elfinfo--linuxerror",children:"getElf(path) -> ElfInfo | LinuxError"}),"\n",(0,n.jsx)(t.p,{children:"Parse an ELF executable file."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"path"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"Path to ELF file"})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"getjournalpath---journal--linuxerror",children:"getJournal(path) -> Journal[] | LinuxError"}),"\n",(0,n.jsxs)(t.p,{children:["Parse a systemd ",(0,n.jsx)(t.a,{href:"/artemis-api/docs/Artifacts/Linux%20Artifacts/journals",children:"Journal"})," file."]}),"\n",(0,n.jsxs)(t.admonition,{type:"info",children:[(0,n.jsx)(t.p,{children:"This function is for convenience. It will parse the entire Journal file before\nreturning data. The larger the file the more memory artemis will require."}),(0,n.jsxs)(t.p,{children:["You may want to consider using a\n",(0,n.jsx)(t.a,{href:"/artemis-api/docs/Intro/Scripting/filterscripts",children:"filter script"})," if you are concerned\nabout memory usage."]}),(0,n.jsx)(t.p,{children:"By default Journal file max size is 128 MB (compressed!). Once uncompressed you\ncould see memory usage around ~2-4GBs"})]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"path"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"Path to Journal file"})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"getdebinfoalt_path---debpackages--linuxerror",children:"getDebInfo(alt_path) -> DebPackages[] | LinuxError"}),"\n",(0,n.jsx)(t.p,{children:"Get list of installed deb packages on the system. Can provide an alternative\npath to the dpkg status."}),"\n",(0,n.jsx)(t.p,{children:"Uses /var/lib/dpkg/status by default"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"alt_path"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"Alt path to dpkg status file"})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"getsudologs---journal",children:"getSudoLogs() -> Journal[]"}),"\n",(0,n.jsx)(t.p,{children:"Parse the Journal files and extract entries related to sudo activity."}),"\n",(0,n.jsx)(t.h3,{id:"getrpminfopath---rpmpackages--linuxerror",children:"getRpmInfo(path) -> RpmPackages[] | LinuxError"}),"\n",(0,n.jsx)(t.p,{children:"Get list of installed rpm packages on the system. May provide an alternative\nfull path to the rpmdb.sqlite file."}),"\n",(0,n.jsxs)(t.admonition,{type:"info",children:[(0,n.jsxs)(t.p,{children:["This function only supports parsing the sqlite database for RPM packages.",(0,n.jsx)(t.br,{}),"\n","Modern versions of RPM use sqlite to store package info. However, older versions\nused the Berkley database."]}),(0,n.jsxs)(t.p,{children:["For example, Fedora 33 switched over to the sqlite format (released 2020-10-27)",(0,n.jsx)(t.br,{}),"\n","Therefore versions older than Fedora 33 would not be supported by this function\nbecause they are still using the Berkley database!"]})]}),"\n",(0,n.jsx)(t.p,{children:"On Fedora based distributions the sqlite file should be located at\n/var/lib/rpm/rpmdb.sqlite"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"alt_path"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"Optional path to the rpmdb.sqlite file"})]})})]})]})}function c(e={}){const{wrapper:t}={...(0,i.M)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},2172:(e,t,r)=>{r.d(t,{I:()=>a,M:()=>l});var n=r(1504);const i={},s=n.createContext(i);function l(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);