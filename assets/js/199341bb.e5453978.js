"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[2244],{7231:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=i(7624),t=i(2172);const r={description:"Windows file metadata",keywords:["windows","file meta"]},o="Files",a={id:"Artifacts/Windows Artfacts/files",title:"Files",description:"Windows file metadata",source:"@site/docs/Artifacts/Windows Artfacts/files.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/files",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/files",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/files.md",tags:[],version:"current",frontMatter:{description:"Windows file metadata",keywords:["windows","file meta"]},sidebar:"artemisArtifacts",previous:{title:"Event Logs",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/eventlogs"},next:{title:"Jumplists",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/jumplists"}},l={},c=[];function d(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"files",children:"Files"}),"\n",(0,s.jsxs)(n.p,{children:["A regular Windows filelisting. Artemis uses the\n",(0,s.jsx)(n.a,{href:"https://crates.io/crates/walkdir",children:"walkdir"})," crate to recursively walk the files\nand directories on the system. If hashing or ",(0,s.jsx)(n.code,{children:"PE"})," parsing is enabled this will\nupdate the ",(0,s.jsx)(n.code,{children:"Last Accessed"})," timestamps on files since the native OS APIs are used\nto access the files and it will fail on any locked files. Use\n",(0,s.jsx)(n.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/rawfiles",children:"RawFiles"})," to bypass locked files."]}),"\n",(0,s.jsxs)(n.p,{children:["The standard Rust API does not support getting ",(0,s.jsx)(n.code,{children:"Changed/Entry Modified"}),"\ntimestamp on Windows. Use ",(0,s.jsx)(n.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/rawfiles",children:"RawFiles"})," to include the\n",(0,s.jsx)(n.code,{children:"Changed/Entry Modified"})," timestamp."]}),"\n",(0,s.jsx)(n.p,{children:"Since a filelisting can be extremely large every 100k entries artemis will\noutput the data and then continue."}),"\n",(0,s.jsx)(n.p,{children:"Other Parsers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Any tool that can recursively list files and directories"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"References:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"N/A"}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"toml-collection",children:"TOML Collection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'system = "windows"\n\n[output]\nname = "files_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "abdc"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "files" # Name of artifact\n[artifacts.files]\nstart_path = "C:\\\\Windows" # Where to start the listing\n# Optional\ndepth = 1 # How many sub directories to descend\n# Optional\nmetadata = true # Get PE metadata\n# Optional\nmd5 = true # MD5 all files\n# Optional\nsha1 = false # SHA1 all files\n# Optional\nsha256 = false # SHA256 all files\n# Optional\npath_regex = "" # Regex for paths\n# Optional\nfile_regex = "" # Regex for files\n'})}),"\n",(0,s.jsx)(n.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"start_path"})," Where to start the file listing. Must exist on the endpoint. To\nstart at root use ",(0,s.jsx)(n.code,{children:"C:\\\\"}),". This configuration is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"depth"})," Specify how many directories to descend from the ",(0,s.jsx)(n.code,{children:"start_path"}),". Default\nis one (1). Must be a postive number. Max value is 255. This configuration is\n",(0,s.jsx)(n.strong,{children:"optional"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"metadata"})," Get ",(0,s.jsx)(n.a,{href:"/artemis-api/docs/Artifacts/Windows%20Artfacts/pe",children:"PE"})," data from ",(0,s.jsx)(n.code,{children:"PE"})," files. This configuration is\n",(0,s.jsx)(n.strong,{children:"optional"}),". Default is ",(0,s.jsx)(n.strong,{children:"false"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"md5"})," Boolean value to enable MD5 hashing on all files. This configuration is\n",(0,s.jsx)(n.strong,{children:"optional"}),". Default is ",(0,s.jsx)(n.strong,{children:"false"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sha1"})," Boolean value to enable SHA1 hashing on all files. This configuration\nis ",(0,s.jsx)(n.strong,{children:"optional"}),". Default is ",(0,s.jsx)(n.strong,{children:"false"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sha256"})," Boolean value to enable SHA256 hashing on all files. This\nconfiguration is ",(0,s.jsx)(n.strong,{children:"optional"}),". Default is ",(0,s.jsx)(n.strong,{children:"false"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path_regex"})," Only descend into paths (directories) that match the provided\nregex. This configuration is ",(0,s.jsx)(n.strong,{children:"optional"}),". Default is no Regex"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"file_regex"})," Only return entres that match the provided regex. This\nconfiguration is ",(0,s.jsx)(n.strong,{children:"optional"}),". Default is no Regex"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,s.jsxs)(n.p,{children:["An array of ",(0,s.jsx)(n.code,{children:"WindowsFileInfo"})," entries"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export interface WindowsFileInfo {\n  /**Full path to file or directory */\n  full_path: string;\n  /**Directory path */\n  directory: string;\n  /**Filename */\n  filename: string;\n  /**Extension of file if any */\n  extension: string;\n  /**Created timestamp in UNIXEPOCH seconds */\n  created: number;\n  /**Modified timestamp in UNIXEPOCH seconds */\n  modified: number;\n  /**Changed timestamp in UNIXEPOCH seconds */\n  changed: number;\n  /**Accessed timestamp in UNIXEPOCH seconds */\n  accessed: number;\n  /**Size of file in bytes */\n  size: number;\n  /**Inode associated with entry */\n  inode: number;\n  /**Mode of file entry */\n  mode: number;\n  /**User ID associated with file */\n  uid: number;\n  /**Group ID associated with file */\n  gid: number;\n  /**MD5 of file */\n  md5: string;\n  /**SHA1 of file */\n  sha1: string;\n  /**SHA256 of file */\n  sha256: string;\n  /**Is the entry a file */\n  is_file: boolean;\n  /**Is the entry a directory */\n  is_directory: boolean;\n  /**Is the entry a symbolic links */\n  is_symlink: boolean;\n  /**Depth the file from provided start poin */\n  depth: number;\n  /**PE binary metadata */\n  binary_info: PeInfo[];\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2172:(e,n,i)=>{i.d(n,{I:()=>a,M:()=>o});var s=i(1504);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);