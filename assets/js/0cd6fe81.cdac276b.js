"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[782],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,d=p["".concat(l,".").concat(m)]||p[m]||f[m]||i;return n?r.createElement(d,s(s({ref:t},u),{},{components:n})):r.createElement(d,s({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1849:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={description:"Tracks file changes",keywords:["windows","file meta"]},s="UsnJrnl",o={unversionedId:"Artifacts/Windows Artfacts/usnjrnl",id:"Artifacts/Windows Artfacts/usnjrnl",title:"UsnJrnl",description:"Tracks file changes",source:"@site/docs/Artifacts/Windows Artfacts/usnjrnl.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/usnjrnl",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/usnjrnl",draft:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/usnjrnl.md",tags:[],version:"current",frontMatter:{description:"Tracks file changes",keywords:["windows","file meta"]},sidebar:"artemisArtifacts",previous:{title:"Users",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/users"}},l={},c=[],u={toc:c},p="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usnjrnl"},"UsnJrnl"),(0,a.kt)("p",null,"Windows ",(0,a.kt)("inlineCode",{parentName:"p"},"UsnJrnl")," is a sparse binary file that tracks changes to files and\ndirectories. Located at the alternative data stream (ADS)\n",(0,a.kt)("inlineCode",{parentName:"p"},"C:\\$Extend\\$UsnJrnl:$J"),". Parsing this data can sometimes show files that have\nbeen deleted. However, depending on the file activity on the system entries in\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"UsnJrnl")," may get overwritten quickly."),(0,a.kt)("p",null,"Other Parsers:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.velociraptor.app/artifact_references/pages/windows.forensics.usn/"},"Velociraptor"))),(0,a.kt)("p",null,"References:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/windows/win32/api/winioctl/ns-winioctl-usn_record_v2?redirectedfrom=MSDN"},"UsnJrnl")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/libyal/libfsntfs/blob/main/documentation/New%20Technologies%20File%20System%20(NTFS).asciidoc#usn_change_journal"},"Libyal"))),(0,a.kt)("h1",{id:"toml-collection"},"TOML Collection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'system = "windows"\n\n[output]\nname = "usnjrnl_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "6c51b123-1522-4572-9f2a-0bd5abd81b82"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "usnjrnl"\n[artifacts.usnjrnl]\n# Optional\n# alt_drive = \'D\'\n')),(0,a.kt)("h1",{id:"collection-options"},"Collection Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"alt_drive")," Expects a single character value. Will use an alternative drive\nletter when parsing ",(0,a.kt)("inlineCode",{parentName:"li"},"UsnJrnl"),". This configuration is ",(0,a.kt)("strong",{parentName:"li"},"optional"),". By default\nartemis will use the ",(0,a.kt)("inlineCode",{parentName:"li"},"%systemdrive%")," value (typically ",(0,a.kt)("inlineCode",{parentName:"li"},"C"),")")),(0,a.kt)("h1",{id:"output-structure"},"Output Structure"),(0,a.kt)("p",null,"An array of ",(0,a.kt)("inlineCode",{parentName:"p"},"UsnJrnl")," entries"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface UsnJrnl {\n  /**Entry number in the MFT */\n  mft_entry: number;\n  /**Sequence number in the MFT */\n  mft_sequence: number;\n  /**Parent entry number in the MFT */\n  parent_mft_entry: number;\n  /**Parent sequence number in the MFT */\n  parent_mft_sequence: number;\n  /**ID number in the Update Sequence Number Journal (UsnJrnl) */\n  update_sequence_number: number;\n  /**Timestamp of of entry update in UNIXEPOCH seconds */\n  update_time: number;\n  /**Reason for update action */\n  update_reason: string;\n  /**Source information of the update */\n  update_source_flags: string;\n  /**Security ID associated with entry */\n  security_descriptor_id: number;\n  /**Attributes associate with entry */\n  file_attributes: string[];\n  /**Name associated with entry. Can be file or directory */\n  filename: string;\n  /**Extension if available for filename */\n  extension: string;\n  /**Full path for the UsnJrnl entry. Obtained by parsing `$MFT` and referencing the `parent_mft_entry` */\n  full_path: string;\n}\n")))}f.isMDXComponent=!0}}]);