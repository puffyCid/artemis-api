"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[10],{28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var n=s(96540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},41948:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Artifacts/FreeBSD Artifacts/packages","title":"Packages","description":"Installed Pkgs","source":"@site/docs/Artifacts/FreeBSD Artifacts/packages.md","sourceDirName":"Artifacts/FreeBSD Artifacts","slug":"/Artifacts/FreeBSD Artifacts/packages","permalink":"/artemis/docs/Artifacts/FreeBSD Artifacts/packages","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/FreeBSD Artifacts/packages.md","tags":[],"version":"current","lastUpdatedBy":"puffyCid","lastUpdatedAt":1748155945000,"frontMatter":{"description":"Installed Pkgs","keywords":["freebsd","sqlite"]},"sidebar":"artemisArtifacts","previous":{"title":"Files","permalink":"/artemis/docs/Artifacts/FreeBSD Artifacts/files"},"next":{"title":"Processes","permalink":"/artemis/docs/Artifacts/FreeBSD Artifacts/processes"}}');var r=s(74848),i=s(28453);const a={description:"Installed Pkgs",keywords:["freebsd","sqlite"]},c="Packages",o={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"packages",children:"Packages"})}),"\n",(0,r.jsx)(t.p,{children:"Pkg are the default package format for installing software on FreeBSD systems. Artemis supports\nquerying the /var/db/pkg/local.sqlite database to get installed packages."}),"\n",(0,r.jsx)(t.h1,{id:"collection",children:"Collection"}),"\n",(0,r.jsxs)(t.p,{children:["You have to use the artemis ",(0,r.jsx)(t.a,{href:"/artemis/docs/API/overview",children:"api"})," in order to collect\ninstalled packages."]}),"\n",(0,r.jsx)(t.h1,{id:"sample-api-script",children:"Sample API Script"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import { getPkgs } from "../Projects/artemis-api/mod";\n\nfunction main() {\n    let offset = 0;\n    let limit = 100;\n    \n    const results = getPkgs(offset, limit);\n\n    console.log(JSON.stringify(results));\n}\n\nmain();\n'})}),"\n",(0,r.jsx)(t.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,r.jsxs)(t.p,{children:["An array of ",(0,r.jsx)(t.code,{children:"Pkg"})," entries."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"export interface Pkg {\n    id: number;\n    origin: string;\n    name: string;\n    version: string;\n    comment: string;\n    desc: string;\n    mtree_id: number | null;\n    message: string | null;\n    arch: string;\n    maintainer: string;\n    www: string | null;\n    prefix: string;\n    flatsize: number;\n    automatic: boolean;\n    locked: boolean;\n    licenselogic: boolean;\n    installed: string | null;\n    pkg_format_version: number | null;\n    dep_formula: string | null;\n    vital: boolean;\n    manifest_digest: string | null;\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);