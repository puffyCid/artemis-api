"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[9499],{3442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var r=n(5893),i=n(1151);const s={description:"Interact with Linux Artifacts"},l="Linux",d={id:"API/Artifacts/linux",title:"Linux",description:"Interact with Linux Artifacts",source:"@site/docs/API/Artifacts/linux.md",sourceDirName:"API/Artifacts",slug:"/API/Artifacts/linux",permalink:"/artemis-api/docs/API/Artifacts/linux",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/API/Artifacts/linux.md",tags:[],version:"current",frontMatter:{description:"Interact with Linux Artifacts"},sidebar:"artemisAPI",previous:{title:"Applications",permalink:"/artemis-api/docs/API/Artifacts/applications"},next:{title:"macOS",permalink:"/artemis-api/docs/API/Artifacts/macos"}},c={},a=[{value:"getLogon(path) -&gt; <code>Logon[] | LinuxError</code>",id:"getlogonpath---logon--linuxerror",level:3},{value:"getElf(path) -&gt; <code>ElfInfo | LinuxError</code>",id:"getelfpath---elfinfo--linuxerror",level:3},{value:"getJournal(path) -&gt; <code>Journal[] | LinuxError</code>",id:"getjournalpath---journal--linuxerror",level:3},{value:"getDebInfo(alt_path) -&gt; <code>DebPackages[] | LinuxError</code>",id:"getdebinfoalt_path---debpackages--linuxerror",level:3}];function o(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"linux",children:"Linux"}),"\n",(0,r.jsx)(t.p,{children:"These functions can be used to pull data related to Linux artifacts"}),"\n",(0,r.jsxs)(t.h3,{id:"getlogonpath---logon--linuxerror",children:["getLogon(path) -> ",(0,r.jsx)(t.code,{children:"Logon[] | LinuxError"})]}),"\n",(0,r.jsx)(t.p,{children:"Parse a single logon related file. Path end with one of the following:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"wtmp"}),"\n",(0,r.jsx)(t.li,{children:"btmp"}),"\n",(0,r.jsx)(t.li,{children:"utmp"}),"\n"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"path"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsxs)(t.td,{children:["Path to ",(0,r.jsx)(t.code,{children:"wtmp, utmp, or btmp"})," file"]})]})})]}),"\n",(0,r.jsxs)(t.h3,{id:"getelfpath---elfinfo--linuxerror",children:["getElf(path) -> ",(0,r.jsx)(t.code,{children:"ElfInfo | LinuxError"})]}),"\n",(0,r.jsx)(t.p,{children:"Parse an ELF executable file."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"path"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:"Path to ELF file"})]})})]}),"\n",(0,r.jsxs)(t.h3,{id:"getjournalpath---journal--linuxerror",children:["getJournal(path) -> ",(0,r.jsx)(t.code,{children:"Journal[] | LinuxError"})]}),"\n",(0,r.jsxs)(t.p,{children:["Parse a systemd ",(0,r.jsx)(t.a,{href:"/artemis-api/docs/Artifacts/Linux%20Artifacts/journals",children:"Journal"})," file."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"path"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:"Path to Journal file"})]})})]}),"\n",(0,r.jsxs)(t.h3,{id:"getdebinfoalt_path---debpackages--linuxerror",children:["getDebInfo(alt_path) -> ",(0,r.jsx)(t.code,{children:"DebPackages[] | LinuxError"})]}),"\n",(0,r.jsxs)(t.p,{children:["Get list of installed deb packages on the system. Can provide an alternative\npath to the dpkg ",(0,r.jsx)(t.code,{children:"status"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Uses ",(0,r.jsx)(t.code,{children:"/var/lib/dpkg/status"})," by default"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"alt_path"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:"Alt path to dpkg status file"})]})})]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>d,a:()=>l});var r=n(7294);const i={},s=r.createContext(i);function l(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);