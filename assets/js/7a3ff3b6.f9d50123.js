"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[2721],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}},91458:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Artifacts/Application Artifacts/vscode","title":"VSCode","description":"Open source text editor","source":"@site/docs/Artifacts/Application Artifacts/vscode.md","sourceDirName":"Artifacts/Application Artifacts","slug":"/Artifacts/Application Artifacts/vscode","permalink":"/artemis/docs/Artifacts/Application Artifacts/vscode","draft":false,"unlisted":false,"editUrl":"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Application Artifacts/vscode.md","tags":[],"version":"current","lastUpdatedBy":"puffycid","lastUpdatedAt":1748156846000,"frontMatter":{"description":"Open source text editor","keywords":["text editor","microsoft"]},"sidebar":"artemisArtifacts","previous":{"title":"SQLite","permalink":"/artemis/docs/Artifacts/Application Artifacts/sqlite"},"next":{"title":"Linux Artifacts","permalink":"/artemis/docs/category/linux-artifacts"}}');var s=n(74848),r=n(28453);const o={description:"Open source text editor",keywords:["text editor","microsoft"]},c="VSCode",a={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"vscode",children:"VSCode"})}),"\n",(0,s.jsx)(t.p,{children:"VSCode is a popular open source text editor created by Microsoft. Artemis\nsupports parsing several components from VSCode:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"File History"}),"\n",(0,s.jsx)(t.li,{children:"Installed extensions"}),"\n",(0,s.jsx)(t.li,{children:"Recently opened files and folders"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Artemis also supports parsing the ",(0,s.jsx)(t.a,{href:"https://vscodium.com/",children:"VSCodium"})," application."]}),"\n",(0,s.jsx)(t.h1,{id:"collection",children:"Collection"}),"\n",(0,s.jsxs)(t.p,{children:["You have to use the artemis ",(0,s.jsx)(t.a,{href:"/artemis/docs/API/overview",children:"api"})," in order to collect\nVSCode information."]}),"\n",(0,s.jsx)(t.h1,{id:"sample-api-script",children:"Sample API Script"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'import {\n  fileHistory,\n  getExtensions,\n  PlatformType,\n} from "./artemis-api/mod";\n\nfunction main() {\n  const results = fileHistory(PlatformType.Darwin);\n  const data = getExtensions(PlatformType.Darwin);\n\n  console.log(results);\n}\n'})}),"\n",(0,s.jsx)(t.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,s.jsxs)(t.p,{children:["An array of ",(0,s.jsx)(t.code,{children:"FileHistory"})," for file history, ",(0,s.jsx)(t.code,{children:"Extensions"})," for installed\nextensions, ",(0,s.jsx)(t.code,{children:"RecentFiles"})," for recent files and folders"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'/**History of files in VSCode */\nexport interface FileHistory {\n  /**Version of History format */\n  version: number;\n  /**To source file */\n  path: string;\n  /**History of source file */\n  entries: Entries[];\n  /**Path to history source */\n  history_path: string;\n}\n\n/**\n * Metadata related to file history entry\n */\ninterface Entries {\n  /**Name of history file */\n  id: string;\n  /**Time when file was saved */\n  timestamp: string;\n  /**Based64 encoded file content */\n  content: string;\n}\n\nexport interface Extensions {\n  path: string;\n  data: Record<string, unknown>[];\n}\n\nexport interface RecentFiles {\n  path_type: RecentType;\n  path: string;\n  enabled: boolean;\n  label: string;\n  external: string;\n  storage_path: string;\n}\n\nexport enum RecentType {\n  File = "File",\n  Folder = "Folder"\n}\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);