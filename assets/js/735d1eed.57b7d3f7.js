"use strict";(self.webpackChunkartemis_docs=self.webpackChunkartemis_docs||[]).push([[9788],{3060:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=t(7624),r=t(2172);const i={description:"List of directories accessed by Windows Explorer",keywords:["windows","registry"]},l="Shellbags",o={id:"Artifacts/Windows Artfacts/shellbags",title:"Shellbags",description:"List of directories accessed by Windows Explorer",source:"@site/docs/Artifacts/Windows Artfacts/shellbags.md",sourceDirName:"Artifacts/Windows Artfacts",slug:"/Artifacts/Windows Artfacts/shellbags",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/shellbags",draft:!1,unlisted:!1,editUrl:"https://github.com/puffyCid/artemis-api/tree/main/artemis-docs/docs/Artifacts/Windows Artfacts/shellbags.md",tags:[],version:"current",lastUpdatedBy:"puffyCid",lastUpdatedAt:1717993766e3,frontMatter:{description:"List of directories accessed by Windows Explorer",keywords:["windows","registry"]},sidebar:"artemisArtifacts",previous:{title:"Services",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/services"},next:{title:"ShellItems",permalink:"/artemis-api/docs/Artifacts/Windows Artfacts/shellitems"}},a={},c=[];function d(e){const s={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"shellbags",children:"Shellbags"}),"\n",(0,n.jsxs)(s.p,{children:["Windows ",(0,n.jsx)(s.code,{children:"Shellbags"})," are ",(0,n.jsx)(s.code,{children:"Registry"})," entries that track what directories a user\nhas browsed via Explorer GUI. These entries are stored in the undocumented\n",(0,n.jsx)(s.code,{children:"ShellItem"})," binary format."]}),"\n",(0,n.jsxs)(s.p,{children:["Artemis supports parsing the most common types of ",(0,n.jsx)(s.code,{children:"shellitems"}),", but if you\nencounter a ",(0,n.jsx)(s.code,{children:"shellitem"})," entry that is not supported please open an issue!"]}),"\n",(0,n.jsx)(s.p,{children:"Other parsers:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://ericzimmerman.github.io/",children:"ShllBagsExplorer"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://docs.velociraptor.app/artifact_references/pages/windows.forensics.shellbags/",children:"Velociraptor"})}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"References:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc",children:"Libyal"})}),"\n"]}),"\n",(0,n.jsx)(s.h1,{id:"toml-collection",children:"TOML Collection"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-toml",children:'system = "windows"\n\n[output]\nname = "shellbags_collection"\ndirectory = "./tmp"\nformat = "json"\ncompress = false\nendpoint_id = "6c51b123-1522-4572-9f2a-0bd5abd81b82"\ncollection_id = 1\noutput = "local"\n\n[[artifacts]]\nartifact_name = "shellbags"\n[artifacts.shellbags]\nresolve_guids = true\n# Optional\n# alt_file = "C:\\\\Artifacts\\\\UsrClass.dat"\n'})}),"\n",(0,n.jsx)(s.h1,{id:"collection-options",children:"Collection Options"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"alt_file"})," Full path to alternative UsrClass.dat or NTUSER.DAT Registry file.\nThis configuration is ",(0,n.jsx)(s.strong,{children:"optional"}),". By default artemis will parse Shellbags\nfor all users."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"resolve_guids"})," Boolean value whether to try to resolve GUIDS found when\nparsing ",(0,n.jsx)(s.code,{children:"Shellbags"}),".","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["If ",(0,n.jsx)(s.strong,{children:"false"}),":\n",(0,n.jsx)(s.code,{children:'"resolve_path": "20d04fe0-3aea-1069-a2d8-08002b30309d\\C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current",'})]}),"\n",(0,n.jsxs)(s.li,{children:["If ",(0,n.jsx)(s.strong,{children:"true"}),":\n",(0,n.jsx)(s.code,{children:'"resolve_path": "This PC\\C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current",'})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h1,{id:"output-structure",children:"Output Structure"}),"\n",(0,n.jsxs)(s.p,{children:["An array of ",(0,n.jsx)(s.code,{children:"Shellbag"})," entries"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",children:"export interface Shellbags {\n  /**Reconstructed directory path */\n  path: string;\n  /**FAT created timestamp. Only applicable for Directory `shell_type` */\n  created: number;\n  /**FAT modified timestamp. Only applicable for Directory `shell_type` */\n  modified: number;\n  /**FAT modified timestamp. Only applicable for Directory `shell_type` */\n  accessed: number;\n  /**Entry number in MFT. Only applicable for Directory `shell_type` */\n  mft_entry: number;\n  /**Sequence number in MFT. Only applicable for Directory `shell_type` */\n  mft_sequence: number;\n  /**\n   * Type of shellitem\n   *\n   * Can be:\n   *   `Directory, URI, RootFolder, Network, Volume, ControlPanel, UserPropertyView, Delegate, Variable, MTP, Unknown, History`\n   *\n   *  Most common is typically `Directory`\n   */\n  shell_type: string;\n  /**\n   * Reconstructed directory with any GUIDs resolved\n   * Ex: `20d04fe0-3aea-1069-a2d8-08002b30309d` to `This PC`\n   */\n  resolve_path: string;\n  /**Registry key last modified in UNIXEPOCH seconds */\n  reg_modified: number;\n  /**User Registry file associated with `Shellbags` */\n  reg_file: string;\n  /**Registry key path to `Shellbags` data */\n  reg_path: string;\n  /**Full file path to the User Registry file */\n  reg_file_path: string;\n}\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.M)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},2172:(e,s,t)=>{t.d(s,{I:()=>o,M:()=>l});var n=t(1504);const r={},i=n.createContext(r);function l(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);